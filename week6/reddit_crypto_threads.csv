"","url","author","date","title","text","subreddit","score","upvotes","downvotes","up_ratio","total_awards_received","golds","cross_posts","comments"
"1","https://www.reddit.com/r/crypto/comments/rp2pmi/katarzyna_miszczak_cipher_and_question/","nheka","2021-12-26","Katarzyna Miszczak Cipher and Question","An automated terminal counter, similar to ChaCha.  Designed to detect the subtlies in IACR publications.  Namely, isogenics and multicurve lattices.

What are the best attacks against AES?","crypto",0,0,0,0.39,0,0,1,5
"2","https://www.reddit.com/r/crypto/comments/rnitix/submodular_rsa_factoring_algorithm/","nheka","2021-12-24","Sub-modular RSA factoring algorithm","Using a few decks of cards, I managed to come up with an algorithm that factors RSA moduli in one step.  What should I do with such a gadget?

The crux of the algorithm is to establish a prime in the vector higher than the modulus and use sub-groups to nail the totient or phi of N.","crypto",0,0,0,0.2,0,0,0,16
"3","https://www.reddit.com/r/crypto/comments/pvjmxb/opinion_cryptography_is_too_hard_to_understand/","Last_Talk_3448","2021-09-26","[OPINION] Cryptography is too hard to understand, and that's the biggest problem with the field","I just want to complain to a community that might actually understand how to fix it. I'm a pretty technical person, software engineer. I know enough to hash my users passwords, communicate using PGP, and use 2FA everywhere I can. It's an annoyance but I get it. So I am changing my master password on my password manager and I'm worried I'm going to forget it. So rather than just writing it on a sticky note, I wanted to encrypt it using my old password and store that behind a third password protected account. I know I'll remember my two old passwords and if someone gets both of those separate 16+ character passwords that aren't stored on any of my other accounts, fine they can have my master password, but even then they will still have to get by 2FA.

I didn't want to install any tools or really have to think about it. I just wanted to have my passphrase and my message and encrypt it in a way that I can decrypt later. So a bit of googling and AES pops up, that seems good. Symmetrical and secure... Sweet!

Exploring I  learned there are online tools to help. Great! If I don't trust those I can always run an open source package offline. But before I just jump in I just want to make sure that it can be decrypted incase the website goes offline for whatever reason.

Guess what, none of the websites have the same standards implemented. Try encoding and decoding using these [any of these tools.](https://duckduckgo.com/?q=aes+encryption+online+tool) They all have different implementations and settings that I don't really care to understand for something so trivial. At this point I'm thinking a Caesar cypher encoded just by adding up the ascii numbers of my old password would be good enough.

I'm know it's just that I don't understand the tools and that's my point. I get that the initial vectors do something important and I'm sure making keys be 16+ bits is great for security, but I really don't need that and there's no simple way to abstract all of that away. I just wanted to have a simple symmetrical encryption, so I can store something in a way that I can remember and that isn't just stupidly obvious.

I know it's going to get a ton of downvotes and you're all going to say ""Oh you should care more and spend time to learn how to be secure."" I don't. I just wanted to make something somewhat secure in a way that was semi-robust.

I'm fine with a tool that comes with the warning"" a dedicated hacker can crack this if they really wanted to."" GREAT, I MIGHT BE THAT DEDICATED HACKER BECAUSE MY MEMORY SUCKS.

But my point is cryptography is hard to get into. It's confusing, and hard to use, or even know what's secure. And even though the tools we have are theoretically secure, as everyone on this subreddit already knows already, it is simple mistakes that cause security flaws. The whole field is like trying to make kittens do circus tricks, sure it might be great, but the performers just don't get it and will never care to. Because this stuff is confusing and hard to use even for a technical person who wants to stay secure but doesn't want to spend a weekend trying to understand the intricacies of how 30 different algorithms work and test out 3 tools with terrible user interfaces just to do the thing that they wanted to do anyways. Especially when the jargon in the field is awful. How is a beginner supposed to understand concepts that have 8 character long acronyms. Aes-256-cbc-hmac-sha1 with AnsiX923 padding, PBKDF2, and 100 iterations???? I don't even know if I made a mistake typing that out and duplicated some part of how it's implemented, and that's my point. It's confusing and until it's not, we're always going to have simple security flaws.

So ya, I ended up going with a sticky note. Happy early Halloween sys. admins <ƒ","crypto",0,0,0,0.33,0,0,1,9
"4","https://www.reddit.com/r/crypto/comments/pi9xek/is_pretty_good_privacy_an_encryption_algorithm_or/","The_How_To_Linux","2021-09-05","Is pretty good privacy an encryption algorithm or a bundle of encryption algorithms?","Hello, quick question here, i'm trying to understand a little bit more about pretty good privacy, and i understand that it's a piece of ""software"" that uses at least RSA, but what i'm a little confused by is, is pretty good privacy only one encryption algorithm? or is it a bundle several different algorithms? 

i understand that GPG or gnu privacy guard is several different encryption algorithms bundled into one piece of software, but i'm not so sure about PGP. 

thank you","crypto",0,0,0,0.3,0,0,1,17
"5","https://www.reddit.com/r/crypto/comments/ohlf6e/stupid_question_about_crypto_currencies/","mallermike","2021-07-10","Stupid question about crypto currencies","Question 1: One thing that I always thought about crypto is if crypto is secure because of an encryption algorithm, wouldnt it be easier and easier to break that algorithm when computers get more and more powerful.  

Question 2: Does my first question even matter because the same can be said about USD and other currency electronic banking.","crypto",0,0,0,0.25,0,0,1,17
"6","https://www.reddit.com/r/crypto/comments/nrc3v1/need_some_help_with_understanding_monoalphabetic/","devil_says","2021-06-03","Need some help with understanding monoalphabetic cipher decryption","Hi

I am working on decrypting ciphertext in monoalphabetic substitution algorithm. I tried to decrypt using frequency histogram of english alphabets individually. The percentage of these frequencies are found here : [http://pi.math.cornell.edu/\~mec/2003-2004/cryptography/subs/frequencies.html](http://pi.math.cornell.edu/~mec/2003-2004/cryptography/subs/frequencies.html) but the plaintext I got from this was not informative. So I tried searching online and found [https://www.dcode.fr/monoalphabetic-substitution](https://www.dcode.fr/monoalphabetic-substitution) for decrypting monoalphabetic substitution. The result was amazing in this site and they used digrams for decryption. So I tried using digrams but the results I got was not good. can someone guide me through this decryption. TIA

Link for my code : [https://github.com/devcoder46/substitutioncipher/blob/main/monoalphabeticcipher.py](https://github.com/devcoder46/substitutioncipher/blob/main/monoalphabeticcipher.py)","crypto",4,4,0,0.75,0,0,0,8
"7","https://www.reddit.com/r/crypto/comments/no0iuy/what_encryption_method_should_we_choose/","TennisBowling","2021-05-30","What encryption method should we choose?","Me and my friend want to make an E2EE chat app, but we don't know what encryption method to use. We are planning to make it in python too, so if it's in python then it's good.","crypto",3,3,0,1,0,0,0,5
"8","https://www.reddit.com/r/crypto/comments/nf1iy6/is_there_a_simple_homomorphic_signature/","windoze","2021-05-18","Is there a simple homomorphic signature?","Hello, is there any simple homomorphic signature that lets me aggregate signatures on sets of items. I sign several messages, and the signature lets a third party without my keys to sign the union of my messages. Ie sign([m]) = f([sign(m)])","crypto",3,3,0,0.72,0,0,0,10
"9","https://www.reddit.com/r/crypto/comments/ne1mha/definition_of_randomness/","Z5DK9","2021-05-17","Definition of randomness","Is there a formal mathematical definition of randomness?

I've got conflicting information from this sub and another cryptography-related sub. According to some comments, Shannon entropy isn't equivalent to randomness. (Shannon entropy's Wikipedia does not confirm the relationship of the two, by the way.) According to some other comments, they are. It may be that I misunderstood some of the comments.

Some asked me to define the ""random"" in my previous question. If there are more than one randomness definitions, this question is about the randomness in one time pad that gives it perfect secrecy.

Here is another way to ask the question: can randomness be defined solely based on probability or probability distribution?

Thanks.

Edited.","crypto",5,5,0,0.78,0,0,1,17
"10","https://www.reddit.com/r/crypto/comments/ndzwf2/help_with_gpg_exercise_on_signatures/","granttes","2021-05-16","Help with GPG exercise on signatures","Hi, 

I'm trying to wrap my head around signatures and encryption. I came across [this video on signatures](https://www.youtube.com/watch?v=JR4_RBb8A9Q) and I figured I could try to prove what it mentions by using GPG. 

The video states that someone can put a document through a hashing algorithm which will output a digest. Then take that digest and encrypt it with a private key to create a digital signature. Now the recipient of the encrypted file should be able to decrypt the encrypted file using the senders public address and the digest from that should match the digest from just running the document alone through the same hashing algorithm. 

Now I'm a little confused trying to do this on my own. I have GPG running in two docker terminals on my mac. Now do I encrypt and sign the document at the same time or do a detached signature? And then how do I verify that both digests are equal?

I basically want to just reenact what the video does but I'm lost. Any help is appreciated!","crypto",3,3,0,1,0,0,0,14
"11","https://www.reddit.com/r/crypto/comments/nd6ar9/which_software_forensics_use_to_find_containers/","cryptomann1","2021-05-15","Which software forensics use to find containers?","If one wanted to find a VC container hidden somewhere in some zipped file or something, which software would they use to find it?","crypto",3,3,0,0.62,0,0,0,45
"12","https://www.reddit.com/r/crypto/comments/n9fxcn/numprimes_a_stable_rust_release_csprng_composite/","Im-Toxik","2021-05-10","num-primes: A Stable Rust Release CSPRNG Composite, Prime, Safe Prime Generator With Better API (README)","# num-primes

Read my [Blog Post on the Issues](https://0xsilene.github.io/blog/4.html)

---

View [num-primes](https://github.com/0xSilene/num-primes) | [Docs](https://docs.rs/num-primes/0.1.1/num_primes/)

View [ramp-primes](https://github.com/0xSilene/ramp-primes) | [Docs](https://docs.rs/ramp-primes/0.3.0/ramp_primes/)

Read [openssl-primes docs](https://www.openssl.org/docs/man1.1.1/man1/openssl-prime.html)

---

# TLDR

**num-primes**, built on the more stable and pure-rust library, **num**, includes **new functionality** and **better API / Documentation** than **ramp-primes**, including but not limited to:

* Generation of Composite, Prime, Safe Prime, and Unsigned Integers

* Verification of Composite, Prime, and Safe Prime Numbers

* **[Experimental]** Verification of Very Smooth Numbers

* Prime Factorization of Composite Integers

And includes usage of:

* Stable Rust (default toolchain)

* Pure Rust Code

* \#![no_std] support

* Detailed Documentation Available [Here](https://docs.rs/num-primes/0.1.1/num_primes/)

However, it faces performance issues with generating safe prime numbers so much so that it was difficult to even generate a 64-bit safe prime. On the otherhand, ramp-primes was able to generate a 512-bit safe prime in a few minutes (still slower than expected due to only looking for `(p-1)/2`).

Future improvements will be made to make these faster as well as additional features. A [2003 published paper includes additional changes that can be made to make sieving safe primes faster](https://eprint.iacr.org/2003/186.pdf).

---

## Why Another Library

[ramp-primes](https://github.com/0xSilene/ramp-primes) is built on the performant RAMP library but faces the same issues RAMP faces, like only being able to be compiled using unstable rust (nightly build) and also using unsafe rust.

The library is far superior in speed to num-primes.

## Future Implementations &amp; Plans For Future

Currently, I am working on implementing better prime factorization algorithms like [Pollards Rho Algorithm for Prime Factorization](https://www.geeksforgeeks.org/pollards-rho-algorithm-prime-factorization/).

I will most likely continue developing **ramp-primes** and possibly use lower level aspects of code to improve performance. **I can already add a 2x performance boost** to finding safe primes by looking for both `(p-1)/2` and `2q+1` and may implement soon.","crypto",2,2,0,0.63,0,0,0,19
"13","https://www.reddit.com/r/crypto/comments/n3cpzn/help_with_breaking_diffiehellman_injecting/","kaoD","2021-05-02","Help with breaking Diffie-Hellman injecting malicious ""g""","So I'm currently solving the Cryptopals crypto challenges and I need a second opinion on challenge 35 (https://cryptopals.com/sets/5/challenges/35, and maybe challenge 34 for some context https://cryptopals.com/sets/5/challenges/34).

When `g = 1` is relayed to Bob, Alice's secret is fixed to `1` (because `B = 1` for her due to `B = g^b = 1^b`). But for Bob `s = A^b` which is not modified by my `g` injection at all.

As far as I can tell I can either relay `A = 1` to Bob instead of Alice's key, or I have to completely unwrap and re-wrap the messages (like a normal MITM, which kinda defeats the purpose).

Relaying `A = 1` to Bob seems slightly less ugly than regular MITM, but it still feels like it's kinda sidestepping the challenge? At this point, why am I not just relaying whatever the heck I want around?

Is this intended, or am I missing something?","crypto",3,3,0,1,0,0,0,2
"14","https://www.reddit.com/r/crypto/comments/mqg049/crc_in_post_quantum/","TylerDTA","2021-04-14","CRC in post quantum","So I am trying to focus my work to do a masters on PQC in some respect. I was interested in seeing how cyclic redundancy checks work in lattice, but am I right in my reading that this is not exactly a transferable technique? 

How does error detection work in Lattice based schemes?","crypto",3,3,0,1,0,0,0,2
"15","https://www.reddit.com/r/crypto/comments/mg71ug/inversing_modular_exponentiation/","T1m3-m4ch1n3","2021-03-30","Inversing Modular Exponentiation","So I'm a CTF player and I knew by practice that if: x\*a%b = y, and x is unknown I can get it by modular inverse inv(a, b) \* y  % b (correct me if I'm wrong)

But now I faced this challenge where the equation is: x^(a) % b = y where x is the only unknown .. and I've tried multiple combinations but I'm stuck so anyone can help? **Note that b is the public key, and also b and y are both 462 digits and a=65537**

&amp;#x200B;

* **Edit: The public key is 2 portions as in source code the first is a product of 4 primes \[0\], \[1\], \[2\] and \[3\] and the second is the product of the first 2 primes\[0\] and \[1\], and b is the product of both portions**  
 public key = (58899560795422629508383709585815596674993413635981165980320127271644038316448725758306722451998784991954419091526089159750869500335163383766827243981828688851948124591111627934859094536105678156714083380927689539385480719433890644570016706624506640312364077682372260047937960244512523766943378334280751887151, 10035997187541816220681016469393172095726015614633459513695480820099536637633364416223346540578858375371324216891862234038678667156169323844411428795236483) ","crypto",3,3,0,1,0,0,0,26
"16","https://www.reddit.com/r/crypto/comments/mdmjaw/book_recommendations_mathematical_cryptography/","FatCastle1","2021-03-26","Book recommendations - mathematical cryptography for cryptocurrencies and blockchains","Can anyone offer book recommendations on cryptography as it relates specifically to cryptocurrencies and blockchains? Im currently reading the Springer book called An Introduction to Mathematical Cryptography which Im very pleased with. Something applied in these areas in particular would be great though. Thanks","crypto",2,2,0,0.6,0,0,0,5
"17","https://www.reddit.com/r/crypto/comments/m7i86m/a_multiplatform_parallel_approach_for_lattice/","yuhong","2021-03-18","A Multiplatform Parallel Approach for Lattice Sieving Algorithms","","crypto",3,3,0,1,0,0,0,1
"18","https://www.reddit.com/r/crypto/comments/m650x4/lets_talk_about_session/","[deleted]","2021-03-16","Let's talk about Session.","Looking at their [somewhat latest blog posts](https://getsession.org/session-protocol-explained/), we can see that they have removed PFS and deniability. Their reasons are basically people get their devices compromised so they don't need PFS and people take screenshots so they don't need deniability, and they are hoping to mitigate that loss  with ""anonymous sign up"", ""metadata minimization"" and ""onion routing"". I believe that your anonymity is at risk without deniability and routing everything through servers does not increase privacy or security if you don't take precautions and don't assume that the server is malicious. Anonymous sign up is.. anonymous sign up.

Any thoughts on this? I find it suspicious that they cite how courts feed on user mistakes and not the math behind the things they have removed. I don't think Session should be taken seriously anymore.","crypto",3,3,0,0.6,0,0,0,31
"19","https://www.reddit.com/r/crypto/comments/m5prmq/dropbox_vault_how_secure_is_it/","[deleted]","2021-03-15","Dropbox Vault, how secure is it?","I'd welcome advise plz.

I have a Linux build on my laptop, I use Cryptomator to encrypt confidential files into a Dropbox folder.

Q. Is this more/less secure than storing my files directly inside the Dropbox Vault?","crypto",3,3,0,0.8,0,0,0,5
"20","https://www.reddit.com/r/crypto/comments/m4ewc4/bitlocker_with_plausible_deniability/","jerlyd88","2021-03-13","Bitlocker with Plausible Deniability","Is it possible to achieve plausible deniability in windows 10 using bitlocker? It doesn't have to be ""true"" plausible deniability but **at least an encrypted system without any obvious clues/proof that the operating system is actually encrypted**.

A configuration like this would probably be good:

\- two windows installations

\- one is encrypted (also the windows 10 system reserved partitions must be encrypted)

\- the other is clear

\- external usb bootloader to boot the encrypted os and removal of any clues about the encrypted os

How is it possible to set up such installation or achieve something similiar (i.e. removing any obvious info that there is an encrypted system on the disk)?

Added after replies:

yes I know about high entropy, blocks etc., let's leave that apart, as I've written:

is there any solution to remove any clear and obvious reference that there is a bitlocker encrypted system on the disk, that would require, I believe, removing the bootloader and encrypting the system partitions...

any solution?","crypto",3,3,0,0.8,0,0,0,19
"21","https://www.reddit.com/r/crypto/comments/m0dj2s/how_does_the_applegoogle_exposure_notification/","marcelgs","2021-03-08","How does the Apple/Google Exposure Notification system prevent infected users from being identified?","Under Apple and Google's contact tracing scheme, Alice's device generates a daily random value (termed a Temporary Exposure Key or TEK in the [Cryptography Specification](https://covid19-static.cdn-apple.com/applications/covid19/current/static/contact-tracing/pdf/ExposureNotification-CryptographySpecificationv1.2.pdf?1)). Every 10 minutes, a Rolling Proximity Identifier (RPI) is generated from the TEK (by first hashing, and then encrypting with AES using the time as the key). When Alice and Bob meet, her device sends his device her current RPI.

The [FAQ](https://www.google.com/covid19/exposurenotifications/#exposure-notifications-and-privacy) (p.3) states that

&gt; people who test positive are not identified by the system to other users, or to Apple or Google.

How is this accomplished? What prevents Bob from setting up a database of all the keys he receives, indexed by the name of the person, and then, if the RPI he received from Alice appears on the server, referencing the database to find out that Alice uploaded it (and thus that she is infected)?","crypto",4,4,0,0.75,0,0,0,6
"22","https://www.reddit.com/r/crypto/comments/syozc9/practical_implementation/","Shanks1130","2022-02-22","Practical Implementation","Hi! I'm looking to implement cryptography algorithms. Does anybody have suggestions for any resources? 

I'm primarily interested in Elliptic Curve Cryptography and Zero-knowledge proof systems (ZK SNARK / ZK STARK). I have theoretical and conceptual knowledge of the underlying algorithms but have never written code to implement them. However, I do have a background in programming. So, if you got anything, please let me know. Any sort of help is appreciated.","crypto",2,2,0,0.75,0,0,1,6
"23","https://www.reddit.com/r/crypto/comments/pzwicb/snif_e2e_tls_trust_for_iot_an_open_source_project/","vesvault","2021-10-02","SNIF ~ e2e TLS trust for IoT - an open source project","Overview and documentation: [https://snif.host](https://snif.host)

Source code:  [https://github.com/vesvault/snif](https://github.com/vesvault/snif)

&amp;#x200B;

[Initializing the TLS Certificate](https://preview.redd.it/j22e320mu1r71.png?width=662&amp;format=png&amp;auto=webp&amp;s=edf70fcede201b9cfa5deb0327ad6bca966f777a)

&amp;#x200B;

[Accepting TLS Connections](https://preview.redd.it/w9usbmsou1r71.png?width=662&amp;format=png&amp;auto=webp&amp;s=50db8f1006e20961d9c4f1b2e727441b783231e6)","crypto",2,2,0,0.67,0,0,1,49
"24","https://www.reddit.com/r/crypto/comments/pxg4bm/need_help_writing_abstracts_for_crypto_lectures/","FesterMcNally","2021-09-28","Need help writing abstracts for crypto lectures","Hi all,

Im responsible for producing a number of abstracts under contract to NTT Research for a series of cryptography-related talks from their recent virtual summit, Upgrade 2020. (See: [https://ntt-research.events.cube365.net/ntt-research/nttvirtualsummit-2021](https://ntt-research.events.cube365.net/ntt-research/nttvirtualsummit-2021))

Im looking for is someone who can look at the videos of the talks along with a transcript I can provide, then write up a short (approx 500 words) abstract describing what the talk is about. These are highly technical talks, with equations and such, based on deep research. The abstract doesnt have to get into the weeds, but should just explain the concept the speaker is addressing, why its important, and then get into the new approach to the problem the speaker discusses.

Please let me know if you think you can help, or know of someone who can. We can discuss comp. Thank you.","crypto",2,2,0,0.63,0,0,1,42
"25","https://www.reddit.com/r/crypto/comments/ouj4hu/cfp_call_for_papers_for_hardweario_security/","hardweario","2021-07-30","[CFP] Call for Papers for Hardwear.io Security Conference Netherlands 2021 is OPEN","Hey Crypto group, have you worked intensely and secretly for years on end developing an open-source tool or a cool research project that will revolutionize the hardware security world? Or maybe you've got something less intense? No matter. We want to see it, anyway. Chip design is always a very hot topic and our audience loves it: [https://www.youtube.com/watch?v=-WUdvGaMbig](https://www.youtube.com/watch?v=-WUdvGaMbig)

SUBMIT your work to [Hardwear.io](https://hardwear.io/) Security Conference Netherlands 2021: [https://hardwear.io/netherlands-2021/cfp.php](https://hardwear.io/netherlands-2021/cfp.php)

Hope to see you at the con!

https://preview.redd.it/ci0a96vh9ce71.jpg?width=1080&amp;format=pjpg&amp;auto=webp&amp;s=90c514bfff7443ad02b014d660bbbc4f659f0809","crypto",2,2,0,0.76,0,0,1,27
"26","https://www.reddit.com/r/crypto/comments/oon0co/is_it_even_possible_to_securely_wipe_an_ssd_2/","MicroBoy4441","2021-07-21","Is it even possible to securely wipe an SSD - 2 months journey.","After about a few months of constantly trying to sell my computer protecting myself from data theft and constantly hearing different voices - believe it or not - I am really clueless. There are two options - either buy a totally new SSD, or still try to wipe the actual one.

The biggest problem: Upon starting using my SSD I had no idea about encryption techniques. And I think it was really, really a big mistake.

**So far what I understood:**

\- DBAN does not work - have a notice on the first page [https://dban.org](https://dban.org)

\- Personal manafacuter-made SSD sanitization tool COULD work - in my case did not find anything released for that occasion

\- found today this [https://support.lenovo.com/us/en/downloads/ds019026-thinkpad-drive-erase-utility-for-resetting-the-cryptographic-key-and-erasing-the-solid-state-drive-thinkpad](https://support.lenovo.com/us/en/downloads/ds019026-thinkpad-drive-erase-utility-for-resetting-the-cryptographic-key-and-erasing-the-solid-state-drive-thinkpad) which even matches my laptop model.

\- I also read the following

&gt;With SSDs, you may need to clear the registers before writing data for  performance reasons, but that's about it. If you're paranoid, you can  overwrite the container headers to remove the possibility of decrypting  the data. But really, I would just reformat, and move on.

\- and this

&gt;1: Simply send the SATA (or NVME) Secure Erase Command. This tells the  firmware to do a wipe and is only the serious option for a SSD as you  can't access the raw flash directly.  
&gt;  
&gt;2: Beware that not all SSD:s implement it correctly. Might look up an old article on this later.

**Conclusion:** 

forget about DBAN, my SSD does not have any custom software, lenovo link states to offer ""This Drive Erase Utility for the Resetting the Cryptographic Key and the  Erasing the Solid State Drive resets the Cryptographic Key of Full Disk  Encryption(FDE) supported hard drives(HDD) and erases the Solid State  Drive(SSD)"", SATA secure erase command could work, but not always

**My re-organized questions then - in the form of potential steps - step 1 = question 1, step 2 = question 2 etc.**

1. Should I then use the custom lenovo software ?
2. How do I know if SATA secure erase command will work for my SSD?
3. &amp;#x200B;

&gt;you may need to clear the registers before writing data for  performance reasons, but that's about it. If you're paranoid, you can  overwrite the container headers to remove the possibility of decrypting  the data

3.1 Cleaning the registers - how to perform that and should I?

3.2. Overwriting the container headers -  how to perform that and should I?

ALTERNATIVE FOR ALL MY QUESTIONS 4. IDIOT FRIENDLY - if you could provide me with easy to digest steps that you would to, I think I would have appreciate it even more. I am.. desperate.","crypto",3,3,0,0.58,0,0,1,59
"27","https://www.reddit.com/r/crypto/comments/ooh274/using_a_new_key_with_every_character_of_text/","TrainSudden","2021-07-21","Using a new key with every character of text","Schemes like AES perform frequent key exchanges to make cracking one message/key not compromise the other messages. What if you applied this concept to every single character or byte of text? I imagine this would take a very long time, but would it end up being x times as difficult to crack, where x is the number of characters or bytes (depending on which you used)? At a certain point you could just guess the remaining characters, so maybe it would only be 1/4x as difficult or something like that. 

For practical uses, I could imagine an encrypted messaging tool that let you choose ""how secure"" to make your message. There could be some sort of slider that says, ""This will take 100 years to crack, and take 1 second to encrypt. This higher setting will take 10,000 years to crack and take 100 seconds"".","crypto",2,2,0,0.76,0,0,1,27
"28","https://www.reddit.com/r/crypto/comments/oo80fq/encrypted_volumes_backed_up_and_no_longer_needed/","aRKsonaR","2021-07-20","Encrypted volumes backed up and no longer needed - can I simply erase my SSD?","As the title states.

I was ""playing"" with VeraCrypt and Luks encrypted volumes to see it in practice while I still knew that this computer should be formatted in the future anyway. The ""encrypted"" files were backed up. Can I then remove all the partitions, format  the entire disk and install new systems or is there something special that I have to do?

No special settings set, just regular encrypted volumes accessed by a passphrase.","crypto",2,2,0,0.67,0,0,1,20
"29","https://www.reddit.com/r/crypto/comments/oo7kaz/could_i_have_a_keccak256_example/","663994","2021-07-20","Could I have a keccak256 example?","I know this is not about cryptocurrency, so please forgive me for asking about keccak256, I cannot find a code sample for the keccak256, other than import keccak256 module thing or something like that, could you help me find an actual code sample showing the algorithm?","crypto",2,2,0,0.75,0,0,1,19
"30","https://www.reddit.com/r/crypto/comments/of5jy8/file_encryption_and_decryption_with_ccrypt/","stonks553","2021-07-06","File encryption and decryption with ccrypt","","crypto",2,2,0,0.63,0,0,3,10
"31","https://www.reddit.com/r/crypto/comments/oeyrxy/check_aes_key_strength/","sudonim_13","2021-07-06","Check AES key strength","Is there a way to check the strength of AES private keys? Like I know there are ""weak keys"" in DES so I was wondering if there's something to measure key strength or the encrypted text strength...","crypto",2,2,0,0.75,0,0,1,19
"32","https://www.reddit.com/r/crypto/comments/oa94nw/senior_research_scientist_formal_methods/","RiversideHotJobs","2021-06-29","Senior Research Scientist  Formal Methods"," Direct Email: [mcostanzo@riversideresearch.org](mailto:mcostanzo@riversideresearch.org)

Riverside Research is seeking a research scientist to solve challenging cybersecurity problems using formal methods for system security analysis. The ideal candidate will be an outside-the-box thinker who is excited to work on cutting-edge research of the intersection of formal methods and cybersecurity. They will work with our Trusted and Resilient Systems research group to apply formal methods techniques to critical defense systems and develop new formal methods tools and techniques to significantly advance the state of the art.

All Riverside Research opportunities require U.S. Citizenship.

**Job Responsibilities**:

* Use techniques from formal methods to develop security analyses of large, complex systems
* Develop new techniques and tools for applying formal methods to hard security problems
* Present research at meetings and conferences
* Assist with proposal writing and customer meetings
* Collaborate with others in the broader research and Defense communities
* Mentoring junior scientists and setting direction on future formal analysis research and development efforts
* Other duties as assigned.

**Required Qualifications**:

* 5 years experience with BS in Computer Science or related field
* 2 years experience with MS in Computer Science or related field
* PhD in Computer Science or related field
* Previous experience in formal methods for security analysis
* Excellent written and verbal communication skills evidenced by published papers and presentations at research conferences
* Proficiency in computer programming and experience with formal analysis tools and languages

**Desired Qualifications:**

* Previous experience with EasyCrypt
* Previous experience mentoring other researchers
* Proposal development experience
* Ability to manage time independently without direct supervision
* Active Secret Security Clearance, must be capable of acquiring at least secret level

Riverside Research strives to be one of America's premier providers of independent, trusted technical and scientific expertise. We continue to add experienced and technically astute staff who are highly motivated to help our DoD and Intelligence Community (IC) customers deliver world class programs. As a not-for-profit, technology-oriented defense company, we believe service to customers and support of our staff is our mission. Our goal is to serve as a destination company by providing an industry-leading, positive, and rewarding employee experience for all who join us. We aspire to be a valued partner to our customers and to earn their trust through our unwavering commitment to achieve timely, innovative, cost-effective and mission-focused solutions.

All positions at Riverside Research are subject to background investigations. Employment is contingent upon successful completion of a background investigation including criminal history and identity check.

Our EEO PolicyRiverside Research is an equal opportunity employer. We recruit, employ, train, compensate and promote without regard to race, religion, sex, color, national origin, age, gender identity, sexual orientation, marital status, disability/veteran, status as a protected veteran, or any other basis protected by applicable federal, state and local law.

If you need assistance at any time in our application or interview process, please contact Human Resources at 937-427-7074 or email [HR@RiversideResearch.org](mailto:HR@RiversideResearch.org). A member of the HR team will be available to assist.

This contractor and subcontractor shall abide by the requirements of 41 CFR 60-741.5(a). This regulation prohibits discrimination against qualified individuals on the basis of disability and requires affirmative action by covered prime contractors and subcontractors to employ and advance in employment qualified individuals with disabilities.

This contractor and subcontractor shall abide by the requirements of 41 CFR 60-300.5(a). This regulation prohibits discrimination against qualified protected veterans and requires affirmative action by covered contractors and subcontractors to employ and advance in employment qualified protected veterans.

For more information on ""EEO is the Law,"" please visit:[http://www.dol.gov/ofccp/regs/compliance/posters/pdf/eeopost.pdf](http://www.dol.gov/ofccp/regs/compliance/posters/pdf/eeopost.pdf)

[https://www.dol.gov/sites/dolgov/files/ofccp/regs/compliance/posters/pdf/eeopost.pdf](https://www.dol.gov/sites/dolgov/files/ofccp/regs/compliance/posters/pdf/eeopost.pdf)","crypto",2,2,0,0.67,0,0,1,9
"33","https://www.reddit.com/r/crypto/comments/o5hjgh/pfs_with_symmetric_algorithms_hmacs_kdfs_like/","linuxlover81","2021-06-22","PFS with symmetric algorithms, HMACs, KDFs like scrypt/bcrypt/argon only?","Hello,
i recently listened to a conversation, which hinted that it is possible to generate session keys which possess the PFS attribute without relying on DiffieHellman or Generalized Diffie Hellman Protocols. Only with stuff like serpent, HMAC-SHAX and scrypt or argon.

Is this true? If i have understood this wrong, is there somewhere a survey or a tome which lists all current known protocols which posses all PFS attribute?","crypto",2,2,0,1,0,0,1,12
"34","https://www.reddit.com/r/crypto/comments/o3kez5/newbie/","Tralfamadorian999","2021-06-19","Newbie","Hey guys and girls, what are the necessary mathematical skills needed in cryptography? I would like to learn more on the subject, At the moment I am working through some basic statistics book. Where should I go next?","crypto",2,2,0,0.75,0,0,1,4
"35","https://www.reddit.com/r/crypto/comments/ntky4g/rsa_decryption_using_crt/","No_Chocolate9486","2021-06-06","rsa decryption using crt","I am learning about rsa and I found an example of decrypting a massage using rsa  which I don't quite understand. Can someone help me to figure this out?

&amp;#x200B;

p = 11

q = 13

n = 11 \* 13 = 143

Õ (n) = 10 \* 12 = 120

e = 7 =&gt; d a e^(-1) mod 120 a 103 mod 120

encrypted massage y = 15

y^(d) = 15^(103) mod 143

this part is pretty clear

but the problem starts here 

yp  a  15  a 4 mod 11,     yq  a  15  a  2 mod 13    - how do I get this?

dp  a  103  a  3 mod 10,   dq a  103  a  7 mod  12

xp  a dp^(dp) = 4^(3) = 9 mod 11,  xq  a  yq ^(dq) = 2^(7) = 11 mod 13

cp = 13^(-1) mod 11  a  6 mod 11, cq = 11 ^(-1) mod 13  a  6 mod 13

the decrypted text is  x  a  \[q \* cp\] \* xp + \[p \* cq\] \* xq mod n  a 

\[13 \* 6\] \* 9 + \[11 \* 6\] \* 22 mod 143  a  1428  a  141 mod 143 =&gt; x = 141","crypto",2,2,0,1,0,0,4,5
"36","https://www.reddit.com/r/crypto/comments/n9thsm/demystifying_hybriddkg_a_distributed_key/","minbunny","2021-05-11","Demystifying HybridDKG - A Distributed Key Generation Scheme","","crypto",2,2,0,0.75,0,0,0,19
"37","https://www.reddit.com/r/crypto/comments/n3b0uo/determine_taps_for_lfsr_recreation/","catastrophic-success","2021-05-02","Determine taps for LFSR recreation","So I need some help trying to recreate a LFSR. I understand the basics of what LFSRs do though the course work I have done in my undergrad but this is the first time that I\`ve actually had to apply it all. Ive also never seen a problem like this in my class since is was just learning and doing the low level math.  


The issue I am having is determining the taps from the sequence I need to recreate this. I know what the plaintext, ciphertext and the initial value of the LFSR.

&gt;Plaintext: ""apple""   
&gt;  
&gt;Initial value: 0x12345678  
&gt;  
&gt;ciphertext: \\xCD\\x01\\xEF\\xD7\\x30

&amp;#x200B;

I have thought about brute forcing what taps give me the correct result I want but I know there must be some way to do this with math that is probably a lot easier. I just dont know what to search for to find it. All help is appreciated.","crypto",2,2,0,0.75,0,0,0,4
"38","https://www.reddit.com/r/crypto/comments/n32bxo/where_can_i_find_some_examples_of_rsa_public_keys/","lacks_imagination","2021-05-02","Where can I find some examples of RSA Public Keys?","I am somewhat new to studying cryptography.  But from what I understand the RSA cryptography uses very large semi-prime numbers (called the Public Key) and the factors for those semi-primes are the secret Private Keys.  I understand that the factors are obviously a secret, but where are the publicly accessible Public Keys?  Where can I get a list of the big RSA semi-prime numbers to study?","crypto",2,2,0,1,0,0,0,13
"39","https://www.reddit.com/r/crypto/comments/murkjd/question_about_ease_of_private_key_discovery_from/","asuds","2021-04-20","Question about ease of private key discovery from partial set of recovery words","(Related to crypto currency but a crypto question:)

Not sure this question is appropriate here, but would love pointers to sources on the difficulty of determining a private key seeds from \*part\* of a 24-word recovery phrase. 

Specifically does storing a recovery phrase for a ledger or other wallet into 2-3 pieces have any sense to it, or have you basically made it a trivial problem once you have over N% of the recovery words.

Somebody must have a paper on this I would think.","crypto",2,2,0,1,0,0,0,7
"40","https://www.reddit.com/r/crypto/comments/muotn7/a_honey_encrypted_password_manager/","Cy_9ms","2021-04-20","A Honey Encrypted Password manager","","crypto",2,2,0,0.75,0,0,0,7
"41","https://www.reddit.com/r/crypto/comments/mpkwq0/how_to_verify_a_client_request_given_an_ed25519/","sigaloid","2021-04-12","How to verify a client request given an ed25519 public key","For now, I simply have 

        public class PrivateEventRequest
        {
            public string Username { get; set; }
        }
    
        public class PrivateEventSignRequest
        {
            public DateTime CurrentDate { get; set; }
            public byte[] RandomData { get; set; }
        }
    
        public class PrivateEventSignResponse
        {
            public byte[] Signature { get; set; }
        }
    

The client sends a PrivateEventRequest, the server responds with a PrivateEventSignRequest with a certain amount of random data^1, and the PrivateEventSignResponse is a signature for the JSON the server sent. Given that this is a request, response, signature, then response, I'm opting for WebSockets. Is there any simple attacks on this or a better way to do this, given the server has just the client's public key (attached to username)? Assume the random data is securely generated with `RNGCryptoServiceProvider`. 

1: What is a good choice for number of bytes of random data? I'm thinking the lowest compute power this will ever run on is a pi zero (and since it's .net, maybe not even that). 

In addition, should the server send a current DateTime string that the client then signs? Or can that be excluded? And should a string representing the username be included in the data to be signed? It will be verified based on the initial username request, however maybe including it increases security?

Thanks!","crypto",2,2,0,0.63,0,0,0,8
"42","https://www.reddit.com/r/crypto/comments/mp74mu/on_the_existence_of_reverse_mod_function_for/","zakrea2070","2021-04-12","On the existence of reverse mod function for exponential functions (Discrete logarithm problem). f(x)=a^(floor(x)) mod p","Here is a more readable version

[https://drive.google.com/file/d/1mlEdKwohNG08ppDjZq1CpiUIag-6t03b/view?usp=sharing](https://drive.google.com/file/d/1mlEdKwohNG08ppDjZq1CpiUIag-6t03b/view?usp=sharing)

On the existence of reverse mod function for exponential functions (Discrete logarithm problem).

f(x)=a\^(floor(x)) mod p

This a short description of my research into these functions and a method by which we can find a function g(x) such that g(f(x)) = x

The existence of such function would make solving these kinds of problems trivial if

a) g(x) exists and finding g(x) is possible

b) computing g(x) is same as computing f(x) (i.e not computationally impossible)

My research suggests that there exists both a and b. That is, I found a g(x) that is trivial to compute. However, I was only able to find such g(x) for one very small prime 5. Which is as follows

f(x)=3\^floor(x) mod 5

g(x)= 4\^(floor(x)) \* 3\^(3+floor(x)) mod 5

Interestingly, I have found g(x) for pretty much every f(x) I looked at where the subgroup generated by a is p-1. Where the subgroup generated by a is (p-1)/2 we can also find g(x) by applying the same method but for f(x) = f(x) mod (p-1)/2. However, this method of finding g(x) is neither easy to find nor easy to calculate however is very reliable for finding g(x).

The method of finding g(x) is as follows

We start by f(x) as follows

f\_1 (x)=a\^(floor(x)) mod p

Then we compute F2 as

f\_2 (x)=a\^(f\_1 (x)) mod p

Then we compute F3 as

f\_3 (x)=a\^(f\_2 (x)) mod p

We then compute Fn as

f\_n (x)=a\^(f\_(n-1) (x)) mod p

We stop where Fn(x) = x. Now g(x) is equal to Fn-1 which gives that calculating g(f(x)) = x. This means that solving the discrete logarithm problem can done efficiently where we can find g(x) in the form given for the case a= 3 and p=5. I have not yet been able to identify a mechanism to speed up like I have for found for the case of

f(x)=floor(x)\^e mod n

For in this case, we can achieve the same behaviour described above, that is we find g(x) the by applying the following

f\_n (x)=f\_(n-1) (x)\^e mod n

An interesting example of this is

f(x)=floor(x)\^5 mod 91

Where f(x) is in itself g(x) so that f(f(x)) =x, such that in terms of Fn n-1 would equal 1.

In this case we can find Fn by calculating

f\_n (x)=f\_1 (x)\^(e\^n ) mod n

So for example in the case of

f(x)=floor(x)\^5 mod 23

We get our g(x) is

g(x)=floor(x)\^(5\^4 ) mod 23

More interesting here is that there is a power n that makes g(x) work for all odd a for any given p. For example n=9 is the universal (which has been observed to be the lcm for all n of different a) n for 23. That is any odd a would have a g(x) as follows

g(x)=floor(x)\^(a\^9 ) mod 23

Here is a table of some universal n+1 which I have calculated for numbers up to 50 (I have more but limited it here for readability)

p n p n p n p n

5 2 17 4 29 6 41 2

6 1 18 1 30 2 42 2

7 2 19 6 31 4 43 6

8 1 20 2 32 2 44 4

9 1 21 2 33 4 45 1

10 2 22 4 34 4 46 10

11 4 23 10 35 2 47 22

12 1 24 1 36 1 48 2

13 2 25 4 37 6 49 6

14 2 26 2 38 6 50 4

15 2 27 1 39 2

16 2 28 2 40 2

This is a limited overview of some of the work I have been doing in the interesting area of mathematics, I have yet to identify a g(x) for the first problem that is in a similar format to that of the second problem shown. However, I believe there must exist a g(x) that is trivial to compute (or at least the same as f(x)) my current work hints at the form of g(x) = (dynamic)\^floor(x) mod p but I am yet to find anything of the sort.

I hope you enjoyed my brief overview of my independent research in this problem and looking forward to hearing your feedback.

Thank you

Zakrea Almansouri

[zakrea2070@gmail.com](mailto:zakrea2070@gmail.com)","crypto",2,2,0,0.75,0,0,0,8
"43","https://www.reddit.com/r/crypto/comments/mnl3wm/ultrafast_ec_signatures_with_specific_keys/","hyarmaite","2021-04-09","Ultrafast EC signatures with specific keys","Greetings,

Is it possible to find such private keys that allow performing Elliptic Curve ed25519 signatures faster than random keys? If so, is there a way to get them all and e.g. blacklist?","crypto",2,2,0,1,0,0,0,9
"44","https://www.reddit.com/r/crypto/comments/mmmify/is_there_such_thing_as_bydesign_insurance/","aidniatpac","2021-04-08","Is there such thing as ""by-design insurance""?","I don't see much discussion about protocols here, so here's my part.

This might be a question with a known answer, but I keep thinking of this scenario:

You manage a messaging application, encrypted messages, with all the classics of privacy, forward secrecy and so on. You, the entity in charge of the messaging, have no knowledge over the messages or secrets of two users A and B.

Now you want to respect users, but also not provide a ground for illegal operations. More specifically, you want to be compliant to a supposed 'good' law enforcement, while not giving in the possibility of mass surveillance.

Thus you want to be able to go and fetch messages or a session key but with the insurance that in return you give an token T to the users if you went to fetch those data from them. In parallel, you produce a public list of tokens every month and the users can compare the elements of the list to get the reasons of why they were asked sensitive information.

Of course, such a design here is totally not practical or secure and is just a pile of flaws, that's not my question. But I can't keep wondering if a protocol going *roughly like that* exists: A ask information to B, B gives information to A in light of another information received.

It does not seem trivial at all, and downright impossible in such scenario as the messaging application but i keep wondering.","crypto",2,2,0,1,0,0,0,7
"45","https://www.reddit.com/r/crypto/comments/mhvw8f/onedrive_or_bitwarden_for_secure_documents/","[deleted]","2021-04-01","OneDrive or Bitwarden for secure documents","Is it more secure to store personal files in:

a) OneDrive Personal Vault or;

b) As documents in Bitwarden?","crypto",2,2,0,1,0,0,0,16
"46","https://www.reddit.com/r/crypto/comments/mhq2l1/backup_encryption_using_ssh_keys_with_age_anno/","krabelize","2021-04-01","Backup encryption using SSH keys with age anno 2021","[https://cryptsus.com/blog/secure-encrypted-backup-linux.html](https://cryptsus.com/blog/secure-encrypted-backup-linux.html)

https://preview.redd.it/ut77jl5okiq61.jpg?width=1398&amp;format=pjpg&amp;auto=webp&amp;s=c831a531a02e7a3a94283eb50b4ed3c7595130e6","crypto",2,2,0,0.67,0,0,0,5
"47","https://www.reddit.com/r/crypto/comments/m7qrq5/any_standard_for_a_digital_communication_security/","linuxlover81","2021-03-18","Any standard for a digital communication security protocol which does not use any asymmetric primitives but 'modern' security?","Hello,
is there any cryptographic protocol/standard for communicating securily over TCP/UDP without using any asymmetric primitives? Like, only Hashes, HMACs and symmetric algorithms, symmetric authenticators and KDFs and good block modes?

The only one i know i TLS_PSK_WITH_AES_128_CBC_SHA256  or TLS_PSK_WITH_AES_256_CBC_SHA384  where i have no qualms with SHA, but the Message-Authentication and Blockmode seem a little bit outdated. and i am not 100% sure atm if there's not a asymmetric primitive somewhere in the handshake or premastersecret

I say ""outdated"" for Message-Authentication, because with there are nowadays much more of them (GCM, Poly1305, several HMAC-versions) and far better Block modes, which also do not have the problem of for example malleability gadgets.

Granted, that may not mean the TLS-Suites are insecure in any way, but it feels like, there's no modern security protocol without assymmetric primitives which only uses for example a PSK. And for some reasons that looks funny to me.","crypto",2,2,0,0.67,0,0,0,24
"48","https://www.reddit.com/r/crypto/comments/pmz56t/random_bytes_generator_for_generating_private_keys/","zninja-bg","2021-09-12","Random bytes generator for generating private keys?","[https://gist.github.com/z-ninja/acaaa70ff6469faf5c62145696087ab1#file-random\_generator-cpp](https://gist.github.com/z-ninja/acaaa70ff6469faf5c62145696087ab1#file-random_generator-cpp)

I'm trying to make  a random generator, but I need opinion of experienced observer and advice on what testing techniques should be apply to random generator for testing its strength and conclusion if satisfying terms to be used as random generator for generating cryptographic private keys.","crypto",1,1,0,0.52,0,0,1,62
"49","https://www.reddit.com/r/crypto/comments/p50zde/veracrypted_ssd_at_android/","henryk_kwiatek","2021-08-15","VeraCrypted SSD at android","Hello (Its my firsts post here),

I got external SSD (SanDisk Extreme Portable SSD 1TB USB 3.2) which is all crypted by veracrypt.

I need to open it at my android phone.

I download EDS Lite. Plug SSD via USB to phone, run EDS and choose Manage Containers, then ""Add existing container"", change container format to veracrypt and thats the moment I stuck.

&amp;#x200B;

I dont know how to select external device as a path.

&amp;#x200B;

Is it even possible?

&amp;#x200B;

The only instruction I found are based on this: [https://www.how2shout.com/how-to/how-to-mount-encrypted-veracrypt-or-other-volumes-on-an-android-device.html](https://www.how2shout.com/how-to/how-to-mount-encrypted-veracrypt-or-other-volumes-on-an-android-device.html)","crypto",0,0,0,0.5,0,0,2,36
"50","https://www.reddit.com/r/crypto/comments/o8fwzw/seems_like_i_made_a_mistske_seeding_mersenne/","Tortuosit","2021-06-26","Seems like I made a mistske seeding Mersenne Twister...","https://youtu.be/IDdB8eYDXp0

I cannot rebuild it any more, have changed the prng seeding meanwhile to.. see below. It is in Tasker with JavaScript... The global() are variables persisting across sessions. 

``seedmax = 2**32-1;
initseed = (global('%TWISTER_SEED') + global('%TIMEMS'))%seedmax;
m = new MersenneTwister(initseed);
var rnd = m.random();
setGlobal('%TWISTER_SEED', (((Math.floor(seedmax * rnd))+initseed)%seedmax).toString());
rnd = rnd.toString();``

Anyone knowing of a MTwister with 64 bit seed? Even though too big for js.","crypto",1,1,0,0.6,0,0,1,3
"51","https://www.reddit.com/r/crypto/comments/o1q3ag/public_crypto_audit_report_lurchomemo/","hardenedvault","2021-06-17","Public crypto audit report: lurch/OMEMO","","crypto",1,1,0,0.57,0,0,1,7
"52","https://www.reddit.com/r/crypto/comments/ntdxr3/halving_generator_g_produces_small_x_in_secp256k1/","doctorstyles","2021-06-06","Halving generator G produces small x in secp256k1, 224k1 and 160k1","0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1 is 1/2 the curve order n.

k = 57896044618658097711785492504343953926418782139537452191302581570759080747169
x = 00000000000000000000003B78CE563F89A0ED9414F5AA28AD0D96D6795F9C63
y = C0C686408D517DFD67C2367651380D00D126E4229631FD03F8FF35EEF1A61E3C


-----BEGIN-SIGNATURE-BLOCK-------------------------------------
Address: 13see6qjfupx1YWgRefwEkccZeM8QGTAiJ
Message: ""But can you explain this one?""
PublicKey: 0200000000000000000000003b78ce563f89a0ed9414f5aa28
 ad0d96d6795f9c63
Signature: deadbeef2f4a23b0f1954100b76bcb720f7b2ddc4a446dc06b
 8ffc4e143286e1e441f5f1583f300022ad3d134413a212581b
 cd36c20c7840d15b4d6b8e8f177f
-----END-SIGNATURE-BLOCK---------------------------------------

Bitcoin Armory style using the message hash function sha256(sha256('Bitcoin Signed Message:\n' + message)).","crypto",1,1,0,1,0,0,1,4
"53","https://www.reddit.com/r/crypto/comments/nndu2t/auth0_challenge_token_authentication/","That_Neighborhood_26","2021-05-29","Auth0 Challenge Token Authentication","Hey Guys, I'm trying to figure out how the auth0 challenge token authentication works, when the challenge HTTPS endpoint is called, returned is seed, challengeID, answerHash.When the token endpoint is called the answer header is included which is a 2 digit number. There are also the x-kpsdk-ct and kp-sdk-fp headers which seem important but i dont understand them. From the partially reverse-engineered source I have gathered that the

    _0xa68b[KPSDK_0x134f('0x113', '[)2@')]('' + _0x1e2238 + index)[KPSDK_0x134f('0x114', 'etqy')]()

takes in some parameters and spits out the SHA256 hashsum to be compared. See full code:

    function calculateAnswer(input) {
        var challengeId = input[KPSDK_0x134f('0x111', 'FZkE')];
        var _0x1e2238 = input[KPSDK_0x134f('0x112', '9Fk)')];
        var answerHash = input['answerHash'];
        for (var index = 0; _0xa68b[KPSDK_0x134f('0x113', '[)2@')]('' + _0x1e2238 + index)[KPSDK_0x134f('0x114', 'etqy')]() !== answerHash; index ++);
    
        return {
            'challengeID': challengeId,
            'answer': index
        };
    }

Does anyone have any idea how I might be able to figure this one out? I'm trying to create a bot for a  website that requires authentication.","crypto",1,1,0,0.6,0,0,0,4
"54","https://www.reddit.com/r/crypto/comments/mpwdxo/where_to_begin_with_the_more_modern/","[deleted]","2021-04-13","where to begin with the more modern","im kinda new to cryptography, ive been interested in it for ages and know the basics. i have absolutely no idea about modern cryptography though, where can i start?","crypto",1,1,0,0.67,0,0,0,6
"55","https://www.reddit.com/r/crypto/comments/mnn7df/decentralized_messenger_app_for_solid_pods/","onlinaz","2021-04-09","Decentralized Messenger App For Solid PODs","","crypto",1,1,0,1,0,0,0,0
"56","https://www.reddit.com/r/crypto/comments/mlggnt/homomorphic_encryption_april_6th_at_7_pm_pdt/","Ok_Cryptographer6217","2021-04-06","Homomorphic Encryption April 6th, at 7 PM (PDT)","Homomorphic Encryption April 6th, at 7 PM (PDT)

Vancouver Chapter (sort of) series with VanTUG

Need to use/install Microsoft Teams - link will offer you those options: 

[https://teams.microsoft.com/l/meetup-](https://teams.microsoft.com/l/meetup-)

join/19%3ameeting\_YzZjMmY2MzAtNjY2Mi00ZWYzLTg1NmItNDIyZmYxM2

FjMGY5%40thread.v2/0?context=%7b%22Tid%22%3a%228d3d8493-09a7-43f8-

97e6-9423036fdf31%22%2c%22Oid%22%3a%22055a3565-22c2-4d78-a9f2-

e72f723df6ef%22%7d

Upcoming - Overall details and outline of the whole series:

[https://community.isc2.org/t5/C/V/m-p/42919](https://community.isc2.org/t5/C/V/m-p/42919) 

Vancouver Chapter (sort of) series with VanTUG

Rob Slade has been presented with an opportunity to give a whole series of presentations to a non-security group.   We, as security people, always complain that nobody in tech ever wants to listen to us, so..","crypto",1,1,0,0.67,0,0,0,7
"57","https://www.reddit.com/r/crypto/comments/ma3poh/why_is_salting_useful_if_the_salt_is_stored_along/","Future_Lactobacillus","2021-03-21","Why is salting useful, if the salt is stored along with the account name?","I must be missing something obvious. If I have obtained a website's db of account names, salts, and hashed passwords, why would the salting slow me down when I do a brute force attack to determine each password?  Or is the purpose to just defeat rainbow tables in some way?","crypto",1,1,0,0.6,0,0,0,15
"58","https://www.reddit.com/r/crypto/comments/oxz94p/keepass_refuses_to_let_me_input_manual_input_for/","cryptomann1","2021-08-04","Keepass refuses to let me input manual input for additional entropy","Hi, I have downloaded this software called Keepass version 2.48.1, to store passwords in an encrypted master file, but it also has a nice feature of generating supposedly random passwords where you can customize how long, which characters appear, and so on.

The problem is I want to use additional entropy by moving the mouse manually so im not trusting 100% the CPU RNG capabilities. It all adds up so why not use it. Problem is it is greyed out.

Please try opening Keepass and in ""Tools -&gt; Generate Password"", there is at the bottom an option that says ""Show additional dialog for collecting user input as additional entropy"" but it shows up as greyed out for me. Can someone tell me why is that?","crypto",0,0,0,0.45,0,0,1,29
"59","https://www.reddit.com/r/crypto/comments/okp8nw/present_cipher/","mohanapriya2615","2021-07-15","Present cipher","I am looking for basic source code for present cipher in verilog or c lanaguage, pls let me know if any one have.","crypto",1,1,0,0.56,0,0,0,8
"60","https://www.reddit.com/r/crypto/comments/ok8gjf/what_are_the_differences_between_the_message/","z0cccccc","2021-07-14","What are the differences between the message, nonce, path and privateKey?","Hi,

I'm trying to use the crypto-js library (https://www.npmjs.com/package/crypto-js). In the example it using the variables of message, nonce, path and privateKey. Whats the difference between all of them?

Thanks","crypto",0,0,0,0.5,0,0,0,14
"61","https://www.reddit.com/r/crypto/comments/oiqs5z/australian_crypto_comm_userenthusiast/","EmergencyTop3672","2021-07-12","Australian crypto comm user/enthusiast","CIPHR the most popular encrypted service over the last 4 years or so have decided to pull out of the  Australian market after the ANOM pandemic leaving everyone without anyway to commincate securely, before ciphr it was phantom secure pop, would love to hear some ideas on how to solve our current problem any suggestions or alternative methods that weren't set up  by the authorities. there's currently a big whole in the Australian market that is desperate to be filled! ORif that's not possible would appreciate being pointed in the right direction","crypto",0,0,0,0.5,0,0,0,16
"62","https://www.reddit.com/r/crypto/comments/nufi2r/what_is_a_good_alternative_to_bitlocker/","cybercupcakes","2021-06-07","what is a good alternative to bitlocker?","I am currently looking for some encryption tools for my personal pc since I have recently had to store some sensitive files on it.  


I wanted to use bitlocker but was put off by the fact they give police officers backdoor access. is there any encryption software that does not have backdoor access that will allow me to encrypt drives or folders?","crypto",0,0,0,0.5,0,0,2,12
"63","https://www.reddit.com/r/crypto/comments/nd75px/are_there_established_codes_that_would_fit_the/","MosaicIncaSleds","2021-05-15","Are there established codes that would fit the description 'hidden in plain view'?","In the spirit of [The Man Who Was Thursday](https://en.m.wikipedia.org/wiki/The_Man_Who_Was_Thursday) probably spooks of 2021 already have various clearances and act for more than one agency. Add the Terrorism laws and rubber hose cryptography can be as common in the West as in Iran or Syria.

So an encrypted message that shows up as gibberish is only going to tease some people to find out more.

I remember reading years ago of people writing letters and the hidden message could be found by reading every second line of the letter. That can be a pain to generate and it can also draw attention when (given the example above) odd numbered lines can be very short or too long compared with the even numbered lines.

Or about people writing the letter only on one side of the page, while using some sort of invisible ink on the back side for the actual message.

Do you know less medieval methods of 'hidden in plain sight' messages? Are there sites that collect this sort of techniques?","crypto",0,0,0,0.5,0,0,0,14
"64","https://www.reddit.com/r/crypto/comments/n3sv4a/anoma_blog_ferveo_a_distributed_key_generation/","minbunny","2021-05-03","[Anoma Blog] Ferveo: A Distributed Key Generation (DKG) Scheme for Front Running Protection","","crypto",0,0,0,0.5,0,0,0,2
"65","https://www.reddit.com/r/crypto/comments/q4zffw/cyph_encrypted_messenger/","binaryfor","2021-10-10","Cyph - Encrypted Messenger","","crypto",0,0,0,0.38,0,0,1,43
"66","https://www.reddit.com/r/crypto/comments/pfqz0e/what_does_it_mean_that_openpgp_is_an_internet/","The_How_To_Linux","2021-09-01","What does it mean that ""openpgp is an internet standard""?","Hello, recently i asked [https://www.reddit.com/r/crypto/comments/pbywh4/what\_is\_the\_difference\_between\_pgp\_and\_openpgp/](https://www.reddit.com/r/crypto/comments/pbywh4/what_is_the_difference_between_pgp_and_openpgp/)

and someone replied ""openpgp is an internet standard""  


i am a complete beginner with cryptography, but what does that mean? what does that mean that ""openpgp is an internet standard"" and pgp isn't?  


what is an internet standard? who sets and creates internet standards? how does something become an internet standard? why does it become and internet standard? why did openpgp become and internet standard?   


thank you.","crypto",0,0,0,0.46,0,0,1,65
"67","https://www.reddit.com/r/crypto/comments/npwdyd/how_to_be_secure_for_brutesattacks/","Educational-Bet-2028","2021-06-01","How to be secure for brutes/attacks","Hello, I want to be secure even if the police would try to get into my hard drive. Now Im not sure if BitLocker would be enough or if I should switch to another Programm. Thanks Im advance","crypto",0,0,0,0.4,0,0,0,11
"68","https://www.reddit.com/r/crypto/comments/np5xk0/encryptdecrypt_whatsapps_incoming_and_outgoing/","Help_A_Newbie","2021-05-31","Encrypt/decrypt whatsapp's incoming and outgoing messages?","I want to be able to **encrypt/decrypt** the messages from whatsapp so that I can communicate with the **API** directly. I've seen this being done on the repo [WhatsApp-Decryption-CheckPoint](https://github.com/romanzaikin/BurpExtension-WhatsApp-Decryption-CheckPoint/blob/master/helper/parser.py)

The *problem* is that it's on python**2** and it's been abandoned. I'm also using burpsuite to capture the packets.

Can anyone guide me upon how to do this on python3 on the most simplistic way possible?","crypto",0,0,0,0.44,0,0,0,9
"69","https://www.reddit.com/r/crypto/comments/nnp09w/secure_voice_communications_a_great_project_lost/","markruffolo","2021-05-29","Secure voice communications, a great project, lost in the ether&","","crypto",0,0,0,0.4,0,0,0,2
"70","https://www.reddit.com/r/crypto/comments/nk632q/encrochat_drug_dealer_arrested_and_identified_by/","jasonborne886","2021-05-24","EncroChat - Drug dealer arrested and identified by a picture of his hand which was digitally analyzed for finger prints","[https://www.theguardian.com/food/2021/may/24/feeling-blue-drug-dealers-love-of-stilton-leads-to-his-arrest](https://www.theguardian.com/food/2021/may/24/feeling-blue-drug-dealers-love-of-stilton-leads-to-his-arrest)

&amp;#x200B;

Is EncroChat actually true encryption or is it just using a sort of hash?

&amp;#x200B;","crypto",0,0,0,0.4,0,0,0,6
"71","https://www.reddit.com/r/crypto/comments/nggdai/zacastle_strong_az_ciphers/","nheka","2021-05-19","ZaCastle - Strong A-Z ciphers","Seeing not many reliable A-Z ciphers that are not broken out there.  I put together a small collection of A-Z block ciphers based on modern constructions.  It includes one authenticated cipher.  I offer it under the Creative Commons license.  Do what you wish with it.  The project is mostly for fun.

If there are other comparable A-Z ciphers out there, I'd be interested to know of them.

[https://github.com/pvial00/ZaCastle](https://github.com/pvial00/ZaCastle)","crypto",0,0,0,0.38,0,0,0,8
"72","https://www.reddit.com/r/crypto/comments/ngbrog/could_a_statecontrolled_cryptocurrency_be_used_to/","jckonln","2021-05-19","Could a state-controlled cryptocurrency be used to break encryptions?","Yes, I know this sub is not about cryptocurrencies. This is about encryption security. 

I had a thought about this, but Im not an expert in cryptography nor cryptocurrency. Could a state-controlled cryptocurrency, like the digital yuan, be used by the state for code breaking and hacking foreign (or domestic) adversaries? 

Im wondering if its possible for a state to encounter an encryption it cant crack in a reasonable time frame so it breaks the possibilities into blocks and assigns them to miners. The crypto is really just a way of doing a distributed brute force attack on an encryption and the miners are doing the work by trying their block of possibilities. Whichever miner is the lucky one that finds the solution collects the mining fee. The miners wouldnt know that they were actually hacking on behalf of the state. So, is it possible?","crypto",0,0,0,0.47,0,0,0,25
"73","https://www.reddit.com/r/crypto/comments/nc3rqj/how_to_get_textpassword_from_hash/","Ramseesthe4th","2021-05-14","How to get text/password from hash?","Hi,
I am trying solve this Security challenge by trying to crack this password . 

Challenge description:
we got this corrupted hash password from a Pcap file with a note (
password = sha-1(hash-result)).

HASH: 77be5d24ed2e3e590045e1d67e8450d2799c19f48ede46804a8734e287df120f

I was able to decrypt this Hash,it turned out to be a SHA-256,and the text is :

s3cr3tpassword

I dont know how to move from here. 
I tried subtracting the hash with the password,tried applying sha1 for each and subtract them. Both were wrong answer for the challenge. 
Any tips on how to process after cracking the hash?

Links:

https://cybertalents.com/challenges/cryptography/hash3rror

I","crypto",0,0,0,0.43,0,0,0,13
"74","https://www.reddit.com/r/crypto/comments/mu8guf/a_furrys_guide_to_cryptocurrency/","Soatok","2021-04-19","A Furrys Guide to Cryptocurrency","","crypto",0,0,0,0.49,1,0,1,17
"75","https://www.reddit.com/r/crypto/comments/mg5now/whats_the_best_crypto_settings_for_gpg/","prajwalkoirala23","2021-03-30","What's the best crypto settings for GPG?","Hey,

Can you guys please explain it to me like if I was a 6 years old boy on what the difference is between these methods?

```
   (1) Curve 25519
   (3) NIST P-256
   (4) NIST P-384
   (5) NIST P-521
   (6) Brainpool P-256
   (7) Brainpool P-384
   (8) Brainpool P-512
   (9) secp256k1
```
Please let me know what's the most secure, speed isn't really a huge factor.","crypto",0,0,0,0.4,0,0,0,7
"76","https://www.reddit.com/r/crypto/comments/p70ju9/simple_image_encryptdecrypt/","f00kew","2021-08-18","Simple Image encrypt/decrypt","","crypto",0,0,0,0.46,0,0,1,20
"77","https://www.reddit.com/r/crypto/comments/ouk28q/the_last_refuge_of_the_criminal_encrypted/","a_titkov","2021-07-30","The last refuge of the criminal: Encrypted smartphones","","crypto",0,0,0,0.44,0,0,1,40
"78","https://www.reddit.com/r/crypto/comments/onmz4w/a_consortium_led_by_global_satellite_company_ses/","Aerothermal","2021-07-19","A consortium led by global satellite company SES will create a roadmap and infrastructure to mitigate cyber threats by using satellite Quantum Key Distrubution. It's called LuxQCI: The Luxembourgs Quantum Communications Infrastructure project (LuxQCI) | Business Wire (13th July 2021)","","crypto",0,0,0,0.45,0,0,0,12
"79","https://www.reddit.com/r/crypto/comments/ntiw30/do_you_think_using_veracrypt_on_windows_is/","[deleted]","2021-06-06","Do you think using Veracrypt on Windows is unsafe/unsecure?"," If someone uses Veracrypt on Windows, opens their Veracrypt container, does what they need to do with the contents of the container, then dismounts, then runs a ""clean cache"" programme and wipes free space afterwards then are they ssafe in that no one can found out the contents of their container's files? 

And also what is the current estimate on how long it would take to crack a Veracrypt container with 8-9 char password? I read somewhere 3 months. Is it right?","crypto",0,0,0,0.43,0,0,1,12
"80","https://www.reddit.com/r/crypto/comments/nsq0qe/how_do_i_use_secure_pseudo_random_generator_in_c/","BruhMoment2215","2021-06-05","How do i use Secure Pseudo Random Generator in C# with seed","","crypto",0,0,0,0.43,0,0,1,14
"81","https://www.reddit.com/r/crypto/comments/mt532m/from_onekey_cryptography_to_twokey_now_family_key/","GiddonS","2021-04-18","From one-key cryptography to two-key, now family key cryptography.","[https://eprint.iacr.org/2021/458](https://eprint.iacr.org/2021/458)   Fifty years ago the biggest change in cryptography took place: One-Key Cryptography evolved into Two-Keys Cryptography. Life in cyber space owes its existence to this revolution. A recent publication takes cryptography a step further: 'Family Key Cryptography': a remarkable proposition: interchangeable keys. Different keys that do the same thing. Now it's time for imagination to flourish and identify new capabilities that are based on this evolution in key count. Someone will make a small fortune from a far reaching application based on this new paradigm.","crypto",0,0,0,0.38,0,0,0,7
"82","https://www.reddit.com/r/crypto/comments/mn12w4/diffiehellman/","Elliot0103","2021-04-08","Diffie-hellman","Hi every one

I just want to hear if there is someone who has a graph of how long it takes to solve diffie-hellman in relation to the size of the key.","crypto",0,0,0,0.4,0,0,0,5
"83","https://www.reddit.com/r/crypto/comments/mjux8i/oc_code_art_i_created_hashmaster_and_reverse/","balcopc","2021-04-04","[OC] [Code Art] I created HashMaster and Reverse HashMaster","Trying to find a home for my creation.   [HashMaster](https://hashmaster.blyons.repl.co/) is the most minimalistic  approach with maximum results.  

[HashMaster 1.0.5](https://preview.redd.it/ky16w0hyb5r61.png?width=354&amp;format=png&amp;auto=webp&amp;s=30bac041980645bf03153af5c2ad6139be5eabfe)","crypto",0,0,0,0.36,0,0,0,8
"84","https://www.reddit.com/r/crypto/comments/m6ty7f/how_does_pgp_work_compared_to_btc_sig_address/","cryptomann1","2021-03-17","How does PGP work compared to BTC sig address?","If you want to sign a message, BTC has become a good way to do this, since the blockchain is decentralized, so you just have to worry about having the private key to sign the public address you use to sign a message.

However, with PGP I see that stuff is hosted in places, so you depend on some centralized server hosting the right files (when I want to verify a Tails .iso for instance, I have to download some file, then it connects to some server to check the signature... no idea what's going on behind the curtain but isn't the BTC method better? I've never used PGP because BTC seems to get the job done, however I would like to know if im missing something.","crypto",0,0,0,0.4,0,0,0,14
"85","https://www.reddit.com/r/crypto/comments/p4ipzw/maybe_yall_can_help_me_find_the_right_tools/","nelletsre","2021-08-14","Maybe yall can help me find the right tools","","crypto",0,0,0,0.38,0,0,0,36
"86","https://www.reddit.com/r/crypto/comments/oid4vr/what_image_or_images_implies_crypto_to_you/","A_solo_tripper","2021-07-11","What image (or images) implies crypto to you?","I am writing a book dealing with cryptography. I want the book cover to include something that looks cryptic in nature.","crypto",0,0,0,0.36,0,0,0,15
"87","https://www.reddit.com/r/crypto/comments/oexqxb/tricitizen_uncensored_tox_network_chat_on_android/","BorderTrader","2021-07-06","TriCitizen: Uncensored Tox network chat on Android","[https://play.google.com/store/apps/details?id=com.tricitizen.wellness](https://play.google.com/store/apps/details?id=com.tricitizen.wellness)

TriCitizen gets you smoothly onto the Tox network on Android, an uncensored peer-to-peer messaging network.","crypto",0,0,0,0.25,0,0,1,8
"88","https://www.reddit.com/r/crypto/comments/msu62t/opinion_on_casa_multisig/","Scheroxx","2021-04-17","Opinion on Casa Multisig?","Hey,  I use ate the moment a ledger to store cryptos. My problem is to store my seed phrase. I have no safe place to sleep well. 

I found Casa multisig. It seems for me that this kind of storage is very safe. BUT I have trouble to destroy my seed phrase letter and trust only Casa if I should lose my ledger wallet. 

Has someone experience with Casa can tell me more about the safety to store BTC? Would be awesome.","crypto",0,0,0,0.4,0,0,0,11
"89","https://www.reddit.com/r/crypto/comments/m64ysu/why_session_cant_be_trusted/","craigevil","2021-03-16","Why Session can't be trusted","https://getsession.org/session-protocol-explained/","crypto",0,0,0,0.36,0,0,0,5
"90","https://www.reddit.com/r/crypto/comments/nhrtzn/utopia_messenger_umessenger_key_features/","cmstrump","2021-05-21","Utopia Messenger (uMessenger) - key features &amp; advantages","uMessenger is one of the key components of the Utopia ecosystem: [Utopia Messengers key features](https://utopiap2p.medium.com/utopia-messengers-key-features-79fe9b77ab41)

uMessenger will play the same role for the free Internet ecosystem that the popular messengers today play for the World Wide Web. Moreover, uMessenger interface will be familiar to anyone who used other messengers. However, unlike them, uMessenger will be completely secure and anonymous. And its not just about end-to-end 256-bit encryption. More importantly, the messenger is completely decentralized. - there is simply no center where these keys are stored.","crypto",0,0,0,0.36,0,0,0,13
"91","https://www.reddit.com/r/crypto/comments/n7aaic/made_an_xor_encryption_is_it_secure/","[deleted]","2021-05-07","made an XOR encryption, is it secure?","the xor: https://raw.githubusercontent.com/2421a4f1fd43dfb4f8225325c/binary-xor/main/xor.sh

is this secure? not for anything important.","crypto",0,0,0,0.38,0,0,0,64
"92","https://www.reddit.com/r/crypto/comments/mvtvl5/is_there_a_judgeless_blockchain_transaction_system/","juniorleatherman","2021-04-22","Is there a judgeless blockchain transaction system?","Is there a blockchain which allows you to perform transactions in following fashion:

1. I want to purchase an NFT resource
2. I send the NFT owner my payment as an encrypted transaction
3. I receive partially encrypted NFT(so i know i'm not getting scammed, and i know seller didn't only finish part of the work, say random 80% is encrypted. i obviously should be able to view about 20% of continuous chunks of said resource)
4. I approve the transaction, and both NFT and my payment are decrypted simultaneously, or i cancel the transaction and NFT goes back to the owner and my money goes back to me.

Because, as i understand it, right now if i pay someone with bitcoin i still need 3rd party arbitration.","crypto",0,0,0,0.4,0,0,0,3
"93","https://www.reddit.com/r/crypto/comments/rybzyt/bulk_create_btc_pub_wallet_addresses_from_sha256/","my_name_1","2022-01-07","Bulk create BTC pub wallet addresses from SHA256","Is there any tool that can generate pub btc wallet addresses from multiple SHA256 entries?

Terminal/CommandPrompt?","crypto",0,0,0,0.23,0,0,1,4
"94","https://www.reddit.com/r/crypto/comments/o8vtmb/how_would_you_go_about_training_an_ai_to_create_a/","TrainSudden","2021-06-27","How would you go about training an AI to create a new cryptographic scheme?","What data do you feed it? Is there a way you could set its target function to be something that was faster than simply trying to break the cipher? 
Note that this can be as theoretical as you want. Im interested in the larger concept as well as applications of this topic","crypto",0,0,0,0.3,0,0,1,10
"95","https://www.reddit.com/r/crypto/comments/o2pmg2/a_onetime_pad_variant_without_the_key/","RentedWiryValley","2021-06-18","A One-Time Pad variant without the key distribution problem","","crypto",0,0,0,0.33,0,0,1,44
"96","https://www.reddit.com/r/crypto/comments/mbeaai/edward_snowden_has_a_keynote_speech_today_at_the/","-0-jaSE-0-","2021-03-23","Edward Snowden has a keynote speech today at the Priv8 Conference!","","crypto",0,0,0,0.31,0,0,0,4
"97","https://www.reddit.com/r/crypto/comments/r1pu34/aes_512bit_encryption_or_an_equivalent/","ElectricallyLocked","2021-11-25","AES 512-bit encryption (or an equivalent)","Specifically, I'm wondering whether someone on this subreddit can point me in the right direction when it comes to AES 512-bit encryption, it's been 20 years now since it's predecessor was first conceived and my standards are high. The first reference to AES 512 I found was on a forum post made in 2004, and to this day there is still nothing that formally offers this, an equivalent, or anything measurably stronger. I've seen plenty of people insisting 256-bit is enough for anyone's needs through dozens of forums and reddit posts, going on about this will not change my mind. My view is that waiting until it is cracked can only spell disaster. Quite frankly I don't think we're going to know if Quantum computing manages to crack it until it's too late, why aren't we constantly innovating when it comes to superior encryption, why do we settle for what we have? Can we really accurately with complete certainty say it absolutely cannot be broken within our lifetimes? Are we really going to be that arrogant about it?

To be clear, I am not looking for an argument, or to be reminded that I'm insane for even thinking I would need such high level encryption. I'm only interested in companies, services, websites or software that provides this level and equivalency of encryption currently, even if they aren't completely vetted or officially recognized yet. I will settle for anything stronger than AES 256 bit. The purpose for this if one must know is that I wish to encrypt and upload ""container"" files that contain simple but sensitive text onto the cloud for safe keeping, and I want to ensure that they are future proof well beyond the current standard. Please provide me with anything of constructive relevance to what I am looking for, thank you.","crypto",0,0,0,0.35,0,0,1,44
"98","https://www.reddit.com/r/crypto/comments/nxdu5t/is_it_safe_to_resuse_one_time_pad_keys_for/","Semradrid","2021-06-11","Is it safe to resuse one time pad keys for personal use?","I'm not sending messages to anyone I'm just encrypting and writing down my numerous passwords on a piece of paper, I'm familiar with many of the classical ciphers but it seems OTP is the one most considered secure so I chose it, is it ok to  reuse the key in full or in part for encryption?

The key is something like a sentence for example, ""The boy is running home"" I use however many letters are needed in the password so if it's three letters I'll only use ""the"" from the key,  if it's five in length the key would be ""thebo"" and so on. Offcourse I convert everything to numbers beforehand. I know you're not supposed to reuse the keys but I figured since it's for personal use and the messages are short I could use it, the only reason I'm using the same phrase/key is for easy remembrance otherwise I would have to individually create (and store/remember) a different key for every password.","crypto",0,0,0,0.18,0,0,1,19
"99","https://www.reddit.com/r/crypto/comments/mrohp7/if_you_use_oauth2_in_native_apps_beware/","emasculine","2021-04-15","If you use OAUTH2 in native apps, beware","the app has the potential to steal your credentials

[https://tools.ietf.org/html/rfc8252](https://tools.ietf.org/html/rfc8252)","crypto",0,0,0,0.35,0,0,0,21
"100","https://www.reddit.com/r/crypto/comments/o3j2lz/does_a_cipher_being_information_theoretically/","RisenSteam","2021-06-19","Does a cipher being information theoretically secure preclude it from being semantically secure?","This question came about from a discussion in another thread. 

https://www.reddit.com/r/crypto/comments/o2unzg/coin_flip_is_secure_for_encryption/h2bne5f/  

But since the other thread seems to be now deleted, i am creating a new thread for it.

Say there is a cipher which is information theoretically secure. Does being Information theoretically secure preclude the cipher from being semantically secure? 

Information theoretic security does not reveal any information about the plaintext. Semantic security reveals negligible information. Since semantic security is a weaker guarantee, wouldn't it mean that fulfilling the stronger guarantee automatically fulfills the weaker guarantee?","crypto",0,0,0,0.18,0,0,1,8
"101","https://www.reddit.com/r/crypto/comments/npotyt/private_blockchain/","RLimo","2021-06-01","Private Blockchain","hey can somebody explain me how to create a private blockchain for a company, and which technology I need? I need to know to make a cost-benefit analysis","crypto",0,0,0,0.28,0,0,0,33
"102","https://www.reddit.com/r/crypto/comments/np22ls/can_anyone_test_how_secure_my_custom_encryption/","[deleted]","2021-05-31","Can anyone test how secure my custom encryption is, because I need to put it on a software.","The encryption use C#.

Encryption Algorithm:

&amp;#x200B;

            public static string Encrypt(string data, string key)
            {
                var HexListData = new List&lt;string&gt;(BitConverter.ToString(Encoding.ASCII.GetBytes(data)).Split('-')).ToList();
                var HexListKey = new List&lt;string&gt;(BitConverter.ToString(Encoding.ASCII.GetBytes(key)).Split('-')).ToList();
    			var alg = new List&lt;string&gt;();
                foreach (var XorKey in HexListKey)
                {
    				Random rnd = new Random(int.Parse(XorKey,NumberStyles.HexNumber))
    				HashSet&lt;int&gt; candidates = new HashSet&lt;int&gt;();
    				for(int top = 0;top &lt; 256;top++)
    				{
    					if(!candidates.Add(random.Next(top + 1)))
    					{
    						candidates.Add(top)
    					}
    				}
    				List&lt;int&gt; result = candidates.ToList();
    				for (int i = result.Count - 1;i &gt; 0; i--)
    				{
    					int k = random.Next(i + 1);
    					int tmp = result[k];
    					result[k] = result[i];
    					result[i] = tmp;
    				}
    				var alg = (from i in result select i.ToString(""X2"")).ToList();
                    string XorCompare = XorKey;
                    for (int i = 0; i &lt; HexListData.Count; i++)
                    {
                        XorCompare = alg[int.Parse(XorCompare, NumberStyles.HexNumber)];
                        HexListData[i] = (int.Parse(XorCompare, NumberStyles.HexNumber) ^ int.Parse(HexListData[i], NumberStyles.HexNumber)).ToString(""X2"");
                    }
                }
                return String.Join("""", HexListData);
            }
            public static string Decrypt(string Data, string key, List&lt;string&gt; alg)
            {
                var DataLenght = Data.Length / 2;
                var HexListData = new List&lt;string&gt;(Enumerable.Range(0, Data.Length / 2).Select(i =&gt; Data.Substring(i * 2, 2)));
                var HexListKey = new List&lt;string&gt;(BitConverter.ToString(Encoding.ASCII.GetBytes(key)).Split('-')).ToList();
                var alg = new List&lt;string&gt;();
                foreach (var XorKey in HexListKey)
                {
    				Random rnd = new Random(int.Parse(XorKey,NumberStyles.HexNumber))
    				HashSet&lt;int&gt; candidates = new HashSet&lt;int&gt;();
    				for(int top = 0;top &lt; 256;top++)
    				{
    					if(!candidates.Add(random.Next(top + 1)))
    					{
    						candidates.Add(top);
    					}
    				}
    				List&lt;int&gt; result = candidates.ToList();
    				for (int i = result.Count - 1;i &gt; 0; i--)
    				{
    					int k = random.Next(i + 1);
    					int tmp = result[k];
    					result[k] = result[i];
    					result[i] = tmp;
    				}
    				var alg = (from i in result select i.ToString(""X2"")).ToList();
                    string XorCompare = XorKey;
                    for (int i = 0; i &lt; HexListData.Count; i++)
                    {
                        XorCompare = alg[int.Parse(XorCompare, NumberStyles.HexNumber)];
                        HexListData[i] = (int.Parse(XorCompare, NumberStyles.HexNumber) ^ int.Parse(HexListData[i], NumberStyles.HexNumber)).ToString(""X2"");
                    }
    
                }
                var Empty = String.Empty;
                foreach (var i in HexListData)
                {
                    Empty += Char.ToString((char)int.Parse(i, NumberStyles.HexNumber));
                }
                return Empty;
            }

Here is a few sample:

58F89FD84D8CEFDC60040A80C5799E51B8464BADFF8E48CE4D1200D4E2AC6B

FA382F72F0462E6FEAECF9436A3919098ED468BEE89143129A95E34ADA87A89C76

6EF641FD1240BB5589FAA29C48E44AF738123831F798B86AF8504C1909258ADA17F24F88E43A8DE25F6BB9FF504F7B

all of them have different key

&amp;#x200B;

&amp;#x200B;","crypto",0,0,0,0.41,0,0,0,28
"103","https://www.reddit.com/r/crypto/comments/s79w98/i_want_to_know_if_the_cipher_i_made_has_any/","reditposter","2022-01-18","i want to know if the cipher i made has any vulnerabilities btw its based on Vigenère and rickroll","i made a Vigenère style cipher based on the rick roll i would like to know if it has any vulnerabilities

in it

aka rick cipher 2.0 now Vigenère

im not asking for anyone to crack it, im asking if you can check if it has vulnerabilities

if you dont believe me that this is  Vigenère here is the python script: 

    import time
    
    def rickgenere(pt, k):
        d={'A':0, 'B':1, 'C':2, 'D':3, 'E':4, 'F':5, 'G':6, 'H':7, 'I':8, 'J':9, 'K':10, 'L':11, 'M':12, 'N':13, 'O':14, 'P':15, 'Q':16, 'R':17, 'S':18, 'T':19, 'U':20, 'V':21, 'W':22, 'X':23, 'Y':24, 'Z':25}
        d1={0:'never ', 1:'gonna ', 2:'give ', 3:'you ', 4:'up ', 5:'NEVER ', 6:'GONNA ', 7:'let ', 8:'YOU ', 9:'down ', 10:'Never ', 11:'Gonna ', 12:'turn ', 13:'around ', 14:'and ', 15:'desert ', 16:'You ', 17:'NEver ', 18:'GOnna ', 19:'tell ', 20:'a ', 21:'lie ', 22:'AND ', 23:'hurt ', 24:'YoU ', 25:'rickroll'}        
        ct=""""
        j=0;
        for i in range(len(pt)):       
           if(pt[i]!=' '):
                   if(j&lt;len(k)):
                       ct=ct+d1[(d[pt[i]]+d[k[j]])%26]
                   else:
                       j=j%len(k)
                       ct=ct+d1[(d[pt[i]]+d[k[j]])%26]
                   j=j+1
           else:
                continue
        print (ct)
        
        
    ptxt=input(""Enter the plain text : "")
    key1=input(""Enter the key : "")
    ptxt=ptxt.upper()
    key1=key1.upper()
    rickgenere(ptxt, key1)      
    print(""The program will close in 180 seconds so you can copy and paste"")
    time.sleep(180)

cipher text:

    down give around AND give AND GOnna down tell NEver let GONNA GOnna let rickrolldown GONNA lie and GOnna GONNA YoU YOU NEver down tell GONNA around GOnna let rickrolland AND and NEver gonna Never desert a","crypto",0,0,0,0.2,0,0,0,7
"104","https://www.reddit.com/r/crypto/comments/rozm8a/how_do_i_sign_my_own_certificate_with_a_ca_key/","XiPingTing","2021-12-26","How do I sign my own certificate with a CA key?","The reason I care about the specific signing algorithm (secp256r1 SHA256) is that I have just written my own HTTPS server and have only implemented a few cryptographic functions (rather than rolled my own OpenSSL...)

I have a certificate from a certificate authority (letsencrypt) and a secp256r1 key. I want to add my own certificate-key pair to the chain, and sign the certificate (SHA256 hashed) with the CA secp256r1 key. What do I type into openssl exactly?

&amp;#x200B;

If the secp256r1 CA key is '`ca.key`' then I think it will be something close to:

    openssl req -x509 -new -key ca.key -out ca-ca.pem -outform pem -sha256
    openssl ecparam -out host1.key -name secp256r1 -genkey
    openssl req -new -nodes -key host1.key -outform pem -out host1.req -sha256
    openssl ca -keyfile ca.key -cert ca-ca.pem -in host1.req
      -out ca-host1-cert.pem -md sha256 -outdir .

But this isn't exactly right and I don't know how to diagnose the problem.","crypto",0,0,0,0.35,0,0,1,5
"105","https://www.reddit.com/r/crypto/comments/mmtiu3/engineers_are_on_the_brink_of_breaking_a_massive/","aScottishBoat","2021-04-08","Engineers Are On The Brink of Breaking a Massive Encryption Barrier","https://www.inverse.com/innovation/human-hand-encryption-study","crypto",0,0,0,0.1,0,0,0,4
"106","https://www.reddit.com/r/crypto/comments/o1o9c4/a_generic_approach_to_creating_memoryhard_hash/","RentedWiryValley","2021-06-17","A generic approach to creating memory-hard hash functions","","crypto",6,6,0,0.88,0,0,1,5
"107","https://www.reddit.com/r/crypto/comments/nv01ob/sm4_cipher/","ToTamir","2021-06-08","SM4 cipher","I was reading about SM4 cipher. SM4 encode 128-bit block size with 128-bit key in 32 rounds with simple operations (xor, shift, S-box). Is there a block cipher which can code smaller block size and also is similarly complex?","crypto",4,4,0,0.68,0,0,2,28
"108","https://www.reddit.com/r/crypto/comments/npqhrt/key_lifetime_recommendations_for_amount_of_use/","coding_luke","2021-06-01","key lifetime recommendations for amount of use","Hi all! I recently came across recommendations for the lifetime of a key by NIST, such as SP 800-57 Part 1, that are all based on a time range. Are there also other recommendations based on the amount of key usage? Thanks a lot!","crypto",6,6,0,0.76,0,0,0,23
"109","https://www.reddit.com/r/crypto/comments/no5hux/finding_a_career_in_cryptography/","Drop_the_Bas","2021-05-30","Finding a career in cryptography","So, my girlfriend just finished her master degree in security and cryptography, and she would really be interested in doing hands on cryptography as her job.

She has no idea what kind of jobs/companies to look for or approach to find a job in this field. Do you guys have any advice what kind of jobs she could apply/look for?

Only very few mention crypto (mostly government).","crypto",7,7,0,1,0,0,0,22
"110","https://www.reddit.com/r/crypto/comments/ngegzi/made_something_new/","sudonim_13","2021-05-19","Made Something New","I don't know if this belongs here, but I tried something new with already available algorithms and made something (I don't know if I should call it a cryptosystem)... But long story short, I was able to encrypt request body sent from client with symmetric key (AES) that was dynamically generated for each request (New private key for new request in same session) and similarly decrypt it in the same fashion on the server....

&amp;#x200B;

&amp;#x200B;

Anyways I have attached github repo, I made a miro diagram and tried to explain in the best way what I did... I wanted you guys' opinion on this and if any attacks are possible as I am still fairly new to the cryptography.

The main motivation behind this is,
I'm not sure about this, but I did some research with web app attacks, where I found a particular attack of intercepting a network... Burp suite was the tool used ig...

So I thought it would be better if we encrypt stuff at application layer locally on both sides...no network involved and hence I started working on it...and somehow got symmetric encryption working between client n server without anyone in the middle knowing it...

It generates different set of parameters for every request so I thought should be good enough...


I thought about taking you guys' opinion on it since I'm fairly new to crypto and finding it amazing...


&amp;#x200B;

PS: PR-Pass is also a tool Me and my friend made which generates passwords on the go based on input given.

&amp;#x200B;

[GitHub](https://github.com/sudonims/blockchain-voting/tree/master)



Edit: Added Use Case as mentioned in one of the comments","crypto",7,7,0,0.68,0,0,0,27
"111","https://www.reddit.com/r/crypto/comments/nd5e58/entropy_of_a_correlated_random_variable/","foobartoofar","2021-05-15","Entropy of a Correlated Random Variable","I don't think my question has any use in theory but I am still curious. 

Let's say we have two random variables of bit-size n A and B and we define a new random variable C as A XOR B. In other words, we sample a and b from A and B, and c is calculated as a XOR b. Let entropies H(A) = h1 and H(Y) = h2 where h1, h2 &lt; n. I am curious about H(C). My intuition tells me that H(C) is bounded as:

max(h1, h2) &lt;= H(C) &lt;= h1 + h2

How can we prove this? Also, can we derive a method to calculate the entropy systematically for any function f, not just XOR.

&amp;#x200B;

Thanks.","crypto",5,5,0,0.86,0,0,0,5
"112","https://www.reddit.com/r/crypto/comments/n927q1/a_writeup_on_the_pohlighellman_algorithm/","RisenSteam","2021-05-10","A write-up on the Pohlig-Hellman algorithm","I am not from a Math background, so it took me a lot of time to understand the Pohlig Hellman algorithm. Each line in any text had at least 2 things I didn't understand and had to go searching for more info. So at the end, I decided to document the algorithm in great detail with detailed explanations for each step - sort of like an ELI5 for PH.   

Here is a link - https://risencrypto.github.io/PohligHellman/   

I am pretty sure there are mistakes  - so please feel free to point it out - that's the main reason I am posting it here.","crypto",7,7,0,1,0,0,0,12
"113","https://www.reddit.com/r/crypto/comments/n3vj24/signature_validation/","BigBeerBelly-","2021-05-03","Signature validation","Hey! I'm new to this whole crypto world and I'm confused about digital signatures. How can someone validate my signature without my private key? If the validation is able to tell if my signature is valid with the use of my public key, signature and transaction data, wouldn't it also be able to tell what is my private key? 


Thanks to anyone who responds!","crypto",6,6,0,0.88,0,0,0,23
"114","https://www.reddit.com/r/crypto/comments/mzv1q6/can_someone_explain_an_existential_forgery_attack/","Natural_Dragonfly","2021-04-27","Can someone explain an Existential Forgery Attack against RSA Digital Signature?"," Hi Everyone,

I am in cryptography class and I'm having a hard time understanding the Existential Forgery Attack and the textbook isn't helping either. Can anyone explain it to me?

I appreciate any help or examples you can give me!","crypto",7,7,0,0.9,0,0,0,8
"115","https://www.reddit.com/r/crypto/comments/myxvc0/how_mathematically_intense_can_theoretical/","FinancialNaiveCat","2021-04-26","How mathematically intense can theoretical cryptography get?","I've been seeing a few well answered questions on here asking about how much math you need to know for a career in cryptography but they were basically asking whether you could do cryptography without too much math. What about the opposite? Do you think there's a place for ""intense"" math in cryptography? Adding to that, what was the most mathematically intense cryptography paper you've seen? 

I understand that ""mathematically intense"" is vague term, feel free to define it any way you want.","crypto",5,5,0,0.86,0,0,0,16
"116","https://www.reddit.com/r/crypto/comments/mqnmva/quick_question_on_ecc_generators_and_number_of/","anonXMR","2021-04-14","Quick question on ECC generators and number of possible keys","Can one consider the order of the generator for a particular curve (be it a prime or non-prime curve), to represent the number of possible public keys the system can offer?","crypto",5,5,0,0.74,0,0,0,18
"117","https://www.reddit.com/r/crypto/comments/mpngqh/looking_for_solution_for_revoking_anonymous/","BinSegfault","2021-04-12","Looking for solution for revoking anonymous signatures","Hi guys,

&amp;#x200B;

I'm currently working on a problem where multiple people can sign documents - let's call them signers - and give them to end users such that they can validate documents amongst each other. The way this exchange is handled is through a server\*. In order to allow the validation to function offline, the signer securely authenticates to the server and asks the server to sign with a root certificate. Users will have the public key of said root certificate offline - this is a core requirement, we can't just ship new public keys for new signers on demand in general.

Now the issue is that I'd like to revoke certain signer's signed documents if they turn out to be malicious without different users knowing whether they have had their documents signed by the same signer. I.e. I can't simply give signer's an individual key since then user's could compare to see if they have been signed by the same person. I understand that this will require users to go online and communicate with the server but the assumption is that they will eventually do that and be able to fetch information about revoked signers. To solve this problem I started looking at anonymous signatures and was wondering if that was the way to go or if someone had a better idea of how to solve this problem.  


&amp;#x200B;

\*= End user documents will be encrypted with the user's public key before being sent off","crypto",6,6,0,1,0,0,0,18
"118","https://www.reddit.com/r/crypto/comments/mll17h/i_need_some_assistance/","Stud_CS","2021-04-06","I need some assistance.","I am very interested in learning about crypto and all the things involved with it, but I dont know where to start looking or anything. Maybe someone can point me into a direction?","crypto",6,6,0,0.81,0,0,0,11
"119","https://www.reddit.com/r/crypto/comments/ml4x3a/educational_resources/","gaimsta12","2021-04-06","Educational Resources","Im in my last year of a mathematics degree and recently we dipped out toes in RSA during an algebra class and I was blown away. I've been trying to learn more, but most of the online information is less technical than I'd like (For example, before we studied RSA we established the theory behind groups, order, etc rather than just explaining RSA itself). Are there any decent textbooks or resources I can use for my own study? Cheers","crypto",7,7,0,1,0,0,0,7
"120","https://www.reddit.com/r/crypto/comments/m1cvus/new_in_developing_where_to_start/","MrDanAr","2021-03-09","new in developing, where to start?","Hi everyone, I am looking to start programming on crypto so i was wondering if someone could give any advice or resource to start developing and gaining knowledge to produce something. Thank you for sharing and answering, have a nice day :)","crypto",6,6,0,0.64,0,0,0,14
"121","https://www.reddit.com/r/crypto/comments/m0rj8v/different_categories_of_cryptographic_hash/","Villian97","2021-03-08","Different categories of cryptographic hash functions and popular attacks on them","I'm a computer science student currently working on my graduation project. The project is about exploiting collision in hash functions. The basic idea is I'm going to classify hash functions into categories and then pick one candidate per each category and apply a hash collision attack (or several) to see what are the results and conclude/generalize . I only managed to find 4 categories:

&amp;#x200B;

1. Merkle-Damgard Construction: The most common construction used for building cryptographic hash functions (e.g. MD5, SHA-1, SHA-2)
2. HAIFA Construction: A modern alternative to Merkle-Damgard (hash functions: BLAKE)
3. Sponge Construction: I don't much about it except for the fact that SHA-3 was based on this construction
4. Merkle Tree: Also know as hash tree which is a (binary) tree data structure (hash functions: BLAKE3)

Those are the constructions I could find. I don't know if there exits any other constructions I'm not aware of. If so, please link them all here and maybe give a short explanation about them if possible. Furthermore, I'm really struggling with finding collision attacks. I read about 20ish papers and only a handful are proper attacks that explain everything and could indeed find a collision. Of course I'm talking about already broken hash functions even though my project primary goal is to see why some attacks would work on a certain construction/hash function but fail on the other. I'll update the post and link the attacks I could find when I get home. I just want to say I'm by no means an expert in cryptography. Heck, I only know a thing or two about this field so hopefully some of you could guide me.

Thanks in advance!

&amp;#x200B;

Edit: Those are the attacks I found:

For MD5: 

1. [Finding MD5 Collisions on a Notebook PC Using Multi-message Modifications](https://eprint.iacr.org/2005/102.pdf) (pdf)
2. [Tunnels in Hash Functions: MD5 Collisions Within a Minute 1)](https://eprint.iacr.org/2006/105) (eprint)
3. [Fast Collision Attack on MD5](http://www.win.tue.nl/hashclash/fastcoll.pdf) (pdf)

For SHA-1: 

1. [SHA-1 is a Shambles](https://eprint.iacr.org/2020/014.pdf) (pdf)
2. [SHAttered](https://shattered.io/) (as someone linked in the comments) 

These are the attacks I could find. There are other major papers such as Wang et al. on MD5 but it doesn't describe the attack so I left it out. ","crypto",6,6,0,1,0,0,0,15
"122","https://www.reddit.com/r/crypto/comments/suo0ss/requesting_feedback_security_setup_how_to/","privacythrow_58732","2022-02-17","Requesting feedback: Security setup - how to remember two secure passwords?","Hey folks. I have been reading this sub for about a week now and I'm familiar with the usual terms. Now, I'm looking for some feedback on my setup because there is one topic that I didn't find a lot of information about.

I live in a country where I, as a scientist, unfortunately need to protect my online identify and my data from unauthorized access. Where I live, search warrants by corrupt police departments are some what reasonable to expect (if rare), even without doing anything questionable or illegal online. There is a certain amount of risk associated with doing research in my part of the world.

In short: I need to protect both my hard drives and my online accounts.

The worst case **attack vector** would be a corrupt law enforcement (think police, not NSA/CIA) with reasonable equipment to hammer on my VeraCrypt drive.

One positive aspect: I cannot, by law, be forced to give out the password(s). Let's ignore the 5 $ wrench attack in this case.

To do this, I want to use **VeraCrypt** to encrypt the drives and a password manager such as **Keepass(XC)** so that I can have different passwords for every online account. So in my mind I need **two secure passwords**, one for VeraCrypt, one for Keepass password manager.

In the time of GPU farms and hashcat attacks I obviously need those passwords to be secure (100 bits?). And for obvious reasons I do not want those passwords to be identical, because if I catch a keylogger then my VeraCrypt password would also be at risk whenever I enter my Keepass password.

Now for the question: How do I manage to setup two secure passwords with high entropy and how do I remember them?

My idea was using a secure and random ""base"" password (such as ""ot75bdoq03?$POTQ"") with uppercase, lowercase, numbers and symbols. This base would be identical for both passwords and give me a basic protection from simple attacks by increasing the character pool. I would just have to hammer this into my brain somehow, but it should be possible. When I have to enter this password every day it should be possible to remember this.

And then I could add to that a list of eight (?) words from a random dictionary, for example the EFF long word list to make both passwords unique, example:

    Keepass:    ot75bdoq03?$POTQethersalvaginguprightpulsesultryutmostdollhouseproofread
    VeraCrypt:  ot75bdoq03?$POTQsmallpaprikapantyhoseplantunairedgolfculturegigahertz

Both of these passwords have 77 bits from the ""base"" and 103 (log2(7778^8)) bits of entropy from the words following it. Now, assuming the worst case scenario, my Keepass password gets compromised by malicious software and the ""base"" (""ot75bdoq03?$POTQ"") of the password is known, the additional words on the VeraCrypt should still be ""good enough"" for prevent hashcat attacks, right?

Does this seem like a reasonable approach?

How do I make sure I don't forget these things, as writing them down on paper is generally a bad idea.

And no, switching to Linux is not an option in this case, unfortunately. And using hardware tokens such as NitroKey seems pointless as they could be taken / compromised / lost during a search.","crypto",5,5,0,0.78,0,0,0,5
"123","https://www.reddit.com/r/crypto/comments/sp82mc/shared_ecc_key_using_ecdh/","anonXMR","2022-02-10","Shared ECC key using ECDH","Hello, is it viable, to agree a shared key via ECDH (using x25519), then hashing the agreed point (x-coordinate) and the two people can use it as a shared ECC key, so they can both issue signatures?","crypto",5,5,0,1,0,0,1,9
"124","https://www.reddit.com/r/crypto/comments/smnjiz/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-02-07","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",3,3,0,0.67,0,0,1,3
"125","https://www.reddit.com/r/crypto/comments/rz4okd/how_to_encrypt_files_using_pgpgpg/","masm33","2022-01-08","How to encrypt files using PGP/GPG?","Hi,

So, I sent a query to apple and they asked me to send them a video on it using their PGP keys, and they have given some links guiding on how to encrypt that file which I'd be sending. I have tried google, youtube and I am having no clue how to encrypt the video file and send them. How can I do that? Kindly help!

What they sent: Information on using our Product Security PGP Key to encrypt sensitive information can be found at [https://support.apple.com/HT201214](https://support.apple.com/HT201214).

Information on using Mail Drop to send large files can be found at [https://support.apple.com/kb/PH2629](https://support.apple.com/kb/PH2629).

Thanks in advance!","crypto",5,5,0,0.6,0,0,1,5
"126","https://www.reddit.com/r/crypto/comments/rponmg/perfect_square_nist_implementation/","archie_bloom","2021-12-27","perfect square NIST implementation","Actually I'm implementing in python the Digital Signature Standard from NIST (FIPS 186-4)
In the appendix C.4, we need to check if a number 'c' is a perfect square. There is the pseudo-code: 
```
1. Set n, such that 2n &gt; C e 2(n1).
2. m = în/2ù.
3. i = 0.
4. Select X0, such that 2m &gt; X0 e 2(m1).
5. Repeat
5.1 i = i + 1.
5.2 Xi = ((Xi1)2 + C)/(2Xi1).
Until (Xi)2 &lt; 2m + C.
6. If C = ð Xi û 2, then
status = PERFECT SQUARE.
Else
status = NOT A PERFECT SQUARE.
76
7. Return status 
```
This algorithm seem to be slow because of all this steps. There is the function that I've wrote: 
```
def perfect_square(c):
    return int((c**(1/2))**2) == c
```
So I don't understand why the pseudo-code have so many steps when I can do it in a one-line code. It is better to do it like that ? I need to understand the reason of those steps","crypto",4,4,0,0.67,0,0,1,16
"127","https://www.reddit.com/r/crypto/comments/rlbto8/text_encryption_software_for_encrypting_notes/","Sagitta969","2021-12-21","Text encryption software for encrypting notes","Hi, everyone!

I've searched the forum for a similar topic, but I couldn't find one. Say I want to encrypt only text, like notes in a text file. Is there some sort of ""industry standard"" software for this? I know there is a myriad of websites that can do that or that I could simply encrypt the entire text file with an archive manager or a program such as Axcrypt, but I was wondering whether there is a trustworthy program that allows you to encrypt just text, not the entire file. So far, I've only managed to find ""Paranoia Text Encryption"", but the web doesn't have much to say about its security or trustworthiness.

Thanks for the feedback.","crypto",4,4,0,0.84,0,0,1,9
"128","https://www.reddit.com/r/crypto/comments/ra4qqf/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-12-06","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",4,4,0,0.76,0,0,1,1
"129","https://www.reddit.com/r/crypto/comments/qhy1mm/how_did_this_person_manage_to_extract_all_the_rsa/","[deleted]","2021-10-28","How did this person manage to extract all the RSA prime numbers in this writeup?","So, I've been looking at writeups regarding a CTF which just ended a few days ago (ASIS CTF to be exact), and as of now I've been looking at [this one specifically](https://github.com/hjklien/writeups/tree/main/2021/ASIS%20CTF%20Quals/Madras) for a while.

I've been researching quite alot about it, regarding the extended euclidean algorithm and the like, but unfortunately I find myself unable to wrap my head around as to how they managed to get ""a"", ""b"", and ""c"" out of essentially...*nothing*.

I doubt brute force to get a foothold was done, since....large prime numbers. So I assume there's some sort of mathematical approach/trick used which I am not yet aware of. Can anyone help explain to me how this was done?

(Beginner to crypto, so apologies if the question seems extremely stupid.)","crypto",4,4,0,0.84,0,0,1,70
"130","https://www.reddit.com/r/crypto/comments/qgrjnk/what_problem_solves_qkd_quantum_key_distribution/","llaannoo","2021-10-27","What problem solves QKD (Quantum Key Distribution)?","Using exotic hardware to make it harder for Eve to tapwire? Is the higher price worth it?

Alice can send a key to Bob, but she cannot verify whether Bob received the Key or if Eve received it: If an Attacker controls the channel where the key is sent AND the public channel where Alice and Bob check their measurements, then Alice and Bob require some sort of digital signature or an authenticated classical channel. This signature or this authenticated classical channel rely on classical cryptography afaik and require some pre-shared key anyway BEFORE the quantum channel is used for key distribution. And since we need this pre-shared key, the whole QKD is useless, because why don't we just use this pre-shared key for communication, why using QKD?

The only advantage of QKD is, that it is harder and more expensive to tapwire the communication, but is this a good argument for the installation of this expensive solution? Are there better/cheaper solutions to avoid tapwiring?

The employed technology in QKD might be useful for the transmission of already encrypted data by classical cryptography, but not for key distribution imo.

I'm interested in your thoughts.

edit: typos","crypto",5,5,0,0.78,0,0,1,78
"131","https://www.reddit.com/r/crypto/comments/qdd921/vanity_public_key_grinding_as_unoutsourcable/","advanderveer","2021-10-22","vanity public key grinding as unoutsourcable proof-of-work","First off: I know this sub is not about cryptocurrencies. But I wanna look at proof-of-work as a general cryptographic primitive (e.g. protection against DDOS, sybils, etc). Not as a means just to build block chains.

I'm experimenting with a proof-of-work that cannot be outsources. Or at least provides a clear incentive not to do so. There is some research in that area (e.g: [https://ieeexplore.ieee.org/abstract/document/8476876/](https://ieeexplore.ieee.org/abstract/document/8476876/)) but the solutions have tradeoffs and are complicated.

Instead, the simples thing I could come up with is the work of finding a private key that pairs to a public key where the public key starts with a certain number of zeros (the difficulty). The intuition is that this process can not be outsourced because it would reveil the private key to whoever is being paid to do the work. It also assumes that finding such a pk/sk pair is difficult. If not, public-key crypto would be fundamentally broken. 

Yet I found some discussions around bitcoin vanity addresses that seem to suggest there are ways to outsource the finding of public key addresses in a trustless way:

\- [https://bitcointalk.org/index.php?topic=81865.msg901491#msg901491](https://bitcointalk.org/index.php?topic=81865.msg901491#msg901491)  
\- [https://en.bitcoin.it/wiki/Split-key\_vanity\_address](https://en.bitcoin.it/wiki/Split-key_vanity_address)  
\- [https://crypto.stackexchange.com/questions/60239/elliptic-curve-and-vanity-public-keys](https://crypto.stackexchange.com/questions/60239/elliptic-curve-and-vanity-public-keys) 

Does this mean my naive idea is indeed broken? Are there any way to counter this ""split-key"" approach?","crypto",5,5,0,0.73,0,0,1,93
"132","https://www.reddit.com/r/crypto/comments/q4vyd5/symmetry_point_of_elliptic_curves/","anonXMR","2021-10-09","Symmetry point of elliptic curves","Ive seen many elliptic curves drawn over finite fields in toy examples. 

They always have a symmetry on the Y axis. 

If I define a curve over a small prime like 113, this symmetry point is about half way up the Y axis at ~56. 

In production elliptic curves, does the symmetry point exist at the 0/origin point of the Y axis or instead (as I think) about the point fieldOrder/2 on the Y axis?","crypto",5,5,0,0.79,0,0,1,58
"133","https://www.reddit.com/r/crypto/comments/pyj719/how_are_hsms_involved_in_tls_connections/","Cicucium","2021-09-30","How are HSMs involved in TLS connections?","When a HSM is used for securing a server certificate or the CA of an intercepting proxy, is it only used during the TLS handshake and for authentication? Or is it also used for encryption/decryption, ephemeral key generation ...","crypto",6,6,0,1,0,0,1,49
"134","https://www.reddit.com/r/crypto/comments/plnruq/do_you_think_that_a_bachelors_degree_in_physics/","aembra","2021-09-10","Do you think that a bachelor's degree in physics is worth attaining for post-quantum crypto?","I'm particularly curious about the answer to this question because I'm approaching a time in my life where I can choose to do a physics double major on top of math. On one hand, four years of study seems a little excessive but on the other hand how is it possible to do post quantum crypto research without knowing any quantum theory? How do people usually go about this and how does it compare to doing a double major in computer science? Would doing a double major in computer science still be more favorable if you wanted to do pq-crypto research?","crypto",5,5,0,0.78,0,0,1,30
"135","https://www.reddit.com/r/crypto/comments/pjuxat/how_to_extend_operations_from_numbers_to_larger/","ImpressiveWord","2021-09-07","How to extend operations from numbers to larger ""objects"" in cryptographic implementations?","Posted this to crypto.stackexchange but no answers :( Hopefully you all can help...

I'm implementing the PSI-CA protocol defined in [Fast and Private Computation of Cardinality of Set Intersection and Union (Figure 1, Page 5)](https://www.ics.uci.edu/~gts/paps/psi-ca.pdf), and I have it (more-or-less) working. My biggest issue is that I only have it working for int64_t types, and nothing else. Ultimately I'd like to compare strings or even arbitrary objects. So I figure I'll have to have an object expose functionality to serialize/hash itself, but then what? How do I extend this algorithm to multi-byte computations?

For example, if I want to use SHA-512 hashes instead of integers, during certain operations, say `","crypto",4,4,0,0.75,0,0,1,19
"136","https://www.reddit.com/r/crypto/comments/pjpfsr/kmstats_a_tool_for_qualifying_pseudorandomrandom/","nheka","2021-09-07","kmstats - A tool for qualifying pseudo-random/random datasets","[https://github.com/pvial00/kmstats](https://github.com/pvial00/kmstats)

kmstats is a tool I've created to qualify sets of data as pseudo-random or random.  It's eventually meant to be a replacement for people that use \`ent\` and is entirely it's own beast incorporating various statistical tests and individual thresholds per test.  It's original design parameters are similar to NIST's NIST SP-800-90B in that it qualifies approximately 1 megabyte of data although I hope to expand this to qualify any length of text.

The tool is still experiemental but very usable.

kmstats comes in 2 binaries (kmstats256 for binary data) and (kmstats26 for A-Z data).","crypto",4,4,0,0.64,1,0,1,29
"137","https://www.reddit.com/r/crypto/comments/opykm2/secret_password_that_requires_multiple_keys_to/","TSLPrescott","2021-07-23","Secret password that requires multiple keys to decrypt","This is the best place I could think of to ask this, and unfortunately my search terms are so vague that it'll never pop up when I search for it.

I seem to remember a program/""encryption"" method that you could choose how many passwords were generated, and how many were needed to decrypt the text.

For a general example, you could enter the text string ""the password is password"" and then generate 3 codes, which would end up being ""fj73abbn4nkdao"" ""jfbn38a9vxvci"" and ""vbn4397anb."" You could then select how many of them were needed to actually unlock the original text, and you would plug those codes into the program for it to ""decrypt"" them.

I seem to remember it being named after an Indian guy but I don't quite remember if that's the case. I recall seeing it on a YouTube video about some sort of ARG, but I don't remember which one. It was years ago.","crypto",5,5,0,0.73,0,0,1,19
"138","https://www.reddit.com/r/crypto/comments/oo6jq8/research_topics_ideas/","thrualongway","2021-07-20","Research Topics - Ideas!","Hi all,
Im pursuing a Masters in Cybersecurity and exploring a couple of different options regarding a research topic for my thesis. Ive a few topics (haphazardly written on a sticky note!) but just reaching out to the wider community to see if anyone has any topics they have noted in the last year or so that has piqued their interest, or any topics that seem interesting?

Thanks a lot in advance!","crypto",5,5,0,0.86,0,0,1,21
"139","https://www.reddit.com/r/crypto/comments/oj8byb/a_simple_algorithm_to_generate_session_key_id_and/","hacking_stuff","2021-07-13","A Simple Algorithm to generate session key id and encrypt using RSA","Hi all,

I am asked to design a simple algorithm to generate session key id and encrypt the session key using RSA. is there any link which help me in this? I am going to use 2 prime number for RSA and perform the mathematical calculation on this.
I would not to use library supported by python. 
Is there a way to generate session key id?
Please kindly advise. thank you","crypto",4,4,0,0.67,0,0,0,23
"140","https://www.reddit.com/r/crypto/comments/ob7otn/is_chachapoly1305_an_etm_scheme/","anonXMR","2021-06-30","Is chacha-poly1305 an ETM scheme?","Does chacha use encrypt then Mac?","crypto",4,4,0,0.84,0,0,1,19
"141","https://www.reddit.com/r/crypto/comments/o9ym5t/journal_recommendation/","AcrossTheUniverse","2021-06-29","Journal recommendation","Hi, I'm looking for a small journal to try to publish a paper, nothing too fancy. Thanks!","crypto",5,5,0,0.78,0,0,1,11
"142","https://www.reddit.com/r/crypto/comments/nvgc16/excel_2016_encryption/","Icy_Remote2110","2021-06-08","Excel 2016 encryption","Hi,

I need to get inside a password encrypted Excel 2016 workbook containing a number of embedded / inserted documents (likely a mix of .xlsx, .pdf and .docx). 

I don't need to see the contents of the Excel (i.e. the cells) other than the embedded documents. Is there any way I can access these embedded documents without knowing the password to the file, i.e. does the encrypted workbook also encrypt embedded objects? If not, is there any way I can at least see the names of the embedded files e.g. by opening the Excel as a ZIP file?

Thank you in advance","crypto",4,4,0,0.84,0,0,1,3
"143","https://www.reddit.com/r/crypto/comments/nvfk68/given_two_vectors_a_and_c_not_necessarily_binary/","antichain","2021-06-08","Given two vectors A and C (not necessarily binary), how to create a vector B s.t. XOR(A, B) = C?","The title basically says it all - I'm not entire sure this is solvable. I have two vectors A and C and I want to create some vector B such that the relationship between the mutual information I(A,B ; C) is purely synergistic (i.e. XOR(A, B) = C).

The catch is that A and C are not binary vectors: they run from 0-3 for A and 0-4 for C.

EDIT - I'm actually not entire sure this is possible if A and C are already correlated, since A will always disclose information about C, regardless of the structure of the other variable.","crypto",5,5,0,0.65,0,0,1,17
"144","https://www.reddit.com/r/crypto/comments/nq7klm/started_learning_and_confused_about_something/","iceking8113","2021-06-01","Started learning and confused about something","I just recently learned about RSA and Diffie-Hellman key exchange. I had a problem understanding something. If the point besides authenticate is to keep secrecy,  wouldn't sending a message with your private key to ensure authentication make the message readable to the public since the public key is well public?","crypto",5,5,0,1,0,0,0,9
"145","https://www.reddit.com/r/crypto/comments/np4msi/new_idea_for_block_cipher/","kaeding","2021-05-31","new idea for block cipher","I'm posting this here for two reasons:

1. To get comment on the algorithm
2. To create a record of the idea, in case it is used in the future.

&amp;#x200B;

**A Modest Proposal for a New Block-Cipher Structure Based on Choices via the Key**

&amp;#x200B;

Substitutions and permutations are the basic building blocks of most ciphers. We suggest a cipher structure in which the input is not processed in a fixed manner. Rather, the bits of the key instruct the cipher whether to substitute or permute the elements of the data. In such a cipher, the block size is determined by the size of the permutation table. The key length is completely variable.

At the end of this document we provide a Python script for a demonstration cipher in which the substitution and permutation use the same box. Behold, ladies and gentlemen: There is nothing up my sleeve. The entries in the box are taken from the hexadecimal representation of À3 by reading until we find each new value that is not already in the table. For each bit in the key, a 0 indicates that a substitution will be performed, while a 1 indicates a permutation. Since our table contains one of each possible value for a single byte, the block size of this demonstration cipher is 256 bits, or 32 bytes. The demo cipher encrypts or decrypts a single block, and can be incorporated into an encryption mode such as CBC or counter mode in order to handle data of other lengths.

Because of its simplicity, a cipher of this type should be easy and fast to implement in hardware. As it is processed in encryption or decryption, data is simply sent to one or the other function as the bits of the key are iterated.

We do not cryptanalyze the cipher ourselves for two important reasons. First, it is never a good idea to analyze ones own work due to inherent biases. Second, we simply lack the competence to do so. We suspect that differential cryptanalysis would be powerless, since an attacker would not know a priori the actual encryption process, which depends on the key.

&amp;#x200B;

**Demonstration program**

\`\`\`

 pi = (""243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89"" +

""452821E638D01377BE5466CF34E90C6CC0AC29B7C97C50DD3F84D5B5B5470917"" +

""9216D5D98979FB1BD1310BA698DFB5AC2FFD72DBD01ADFB7B8E1AFED6A267E96"" +

""BA7C9045F12C7F9924A19947B3916CF70801F2E2858EFC16636920D871574E69"" +

""A458FEA3F4933D7E0D95748F728EB658718BCD5882154AEE7B54A41DC25A59B5"" +

""9C30D5392AF26013C5D1B023286085F0CA417918B8DB38EF8E79DCB0603A180E"" +

""6C9E0E8BB01E8A3ED71577C1BD314B2778AF2FDA55605C60E65525F3AA55AB94"" +

""5748986263E8144055CA396A2AAB10B6B4CC5C341141E8CEA15486AF7C72E993"" +

""B3EE1411636FBC2A2BA9C55D741831F6CE5C3E169B87931EAFD6BA336C24CF5C"" +

""7A325381289586773B8F48986B4BB9AFC4BFE81B6628219361D809CCFB21A991"" +

""487CAC605DEC8032EF845D5DE98575B1DC262302EB651B8823893E81D396ACC5"" +

""0F6D6FF383F442392E0B4482A484200469C8F04A9E1F9B5E21C66842F6E96C9A"" +

""670C9C61ABD388F06A51A0D2D8542F68960FA728AB5133A36EEF0B6C137A3BE4"" +

""BA3BF0507EFB2A98A1F1651D39AF017666CA593E82430E888CEE8619456F9FB4"" + 

""7D84A5C33B8B5EBEE06F75D885C12073401A449F56C16AA64ED3AA62363F7706"" +

""1BFEDF72429B023D37D0D724D00A1248DB0FEAD349F1C09B075372C980991B7B"" +

""25D479D8F6E8DEF7E3FE501AB6794C3B976CE0BD04C006BAC1A94FB6409F60C4"" +

""5E5C9EC2196A246368FB6FAF3E6C53B51339B2EB3B52EC6F6DFC511F9B30952C"" +

""CC814544AF5EBD09BEE3D004DE334AFD660F2807192E4BB3C0CBA85745C8740F"" +

""D20B5F39B9D3FBDB5579C0BD1A60320AD6A100C6402C7279679F25FEFB1FA3CC"" +

""8EA5E9F8DB3222F83C7516DFFD616B152F501EC8AD0552AB323DB5FAFD238760"" +

""53317B483E00DF829E5C57BBCA6F8CA01A87562EDF1769DBD542A8F6287EFFC3"" +

""AC6732C68C4F5573695B27B0BBCA58C8E1FFA35DB8F011A010FA3D98FD2183B8"" +

""4AFCB56C2DD1D35B9A53E479B6F84565D28E49BC4BFB9790E1DDF2DAA4CB7E33"" +

""62FB1341CEE4C6E8EF20CADA36774C01D07E9EFE2BF11FB495DBDA4DAE909198"" +

""EAAD8E716B93D5A0D08ED1D0AFC725E08E3C5B2F8E7594B78FF6E2FBF2122B64"" +

""8888B812900DF01C4FAD5EA0688FC31CD1CFF191B3A8C1AD2F2F2218BE0E1777"" +

""EA752DFE8B021FA1E5A0CC0FB56F74E818ACF3D6CE89E299B4A84FE0FD13E0B7"" +

""7CC43B81D2ADA8D9165FA2668095770593CC7314211A1477E6AD206577B5FA86"" +

""C75442F5FB9D35CFEBCDAF0C7B3E89A0D6411BD3AE1E7E4900250E2D2071B35E"" +

""226800BB57B8E0AF2464369BF009B91E5563911D59DFA6AA78C14389D95A537F"" +

""207D5BA202E5B9C5832603766295CFA911C819684E734A41B3472DCA7B14A94A"" +

""1B5100529A532915D60F573FBC9BC6E42B60A47681E6740008BA6FB5571BE91F"" +

""F296EC6B2A0DD915B6636521E7B9F9B6FF34052EC585566453B02D5DA99F8FA1"" +

""08BA47996E85076A4B7A70E9B5B32944DB75092EC4192623AD6EA6B049A7DF7D"" +

""9CEE60B88FEDB266ECAA8C71699A17FF5664526CC2B19EE1193602A575094C29"" +

""A0591340E4183A3E3F54989A5B429D656B8FE4D699F73FD6A1D29C07EFE830F5"" +

""4D2D38E6F0255DC14CDD20868470EB266382E9C6021ECC5E09686B3F3EBAEFC9"" +

""3C9718146B6A70A1687F358452A0E286B79C5305AA5007373E07841C7FDEAE5C"" +

""8E7D44EC5716F2B8B03ADA37F0500C0DF01C1F040200B3FFAE0CF51A3CB574B2"" +

""25837A58DC0921BDD19113F97CA92FF69432477322F547013AE5E58137C2DADC"" +

""C8B576349AF3DDA7A94461460FD0030EECC8C73EA4751E41E238CD993BEA0E2F"" +

""3280BBA1183EB3314E548B384F6DB9086F420D03F60A04BF2CB8129024977C79"" +

""5679B072BCAF89AFDE9A771FD9930810B38BAE12DCCF3F2E5512721F2E6B7124"" +

""501ADDE69F84CD877A5847187408DA17BC9F9ABCE94B7D8CEC7AEC3ADB851DFA"" +

""63094366C464C3D2EF1C18473215D908DD433B3724C2BA1612A14D432A65C451"" +

""50940002133AE4DD71DFF89E10314E5581AC77D65F11199B043556F1D7A3C76B"" +

""3C11183B5924A509F28FE6ED97F1FBFA9EBABF2C1E153C6E86E34570EAE96FB1"" +

""860E5E0A5A3E2AB3771FE71C4E3D06FA2965DCB999E71D0F803E89D65266C825"" +

""2E4CC9789C10B36AC6150EBA94E2EA78A5FC3C531E0A2DF4F2F74EA7361D2B3D"" +

""1939260F19C279605223A708F71312B6EBADFE6EEAC31F66E3BC4595A67BC883"" +

""B17F37D1018CFF28C332DDEFBE6C5AA56558218568AB9802EECEA50FDB2F953B"" +

""2AEF7DAD5B6E2F841521B62829076170ECDD4775619F151013CCA830EB61BD96"" +

""0334FE1EAA0363CFB5735C904C70A239D59E9E0BCBAADE14EECC86BC60622CA7"" +

""9CAB5CABB2F3846E648B1EAF19BDF0CAA02369B9655ABB5040685A323C2AB4B3"" +

""319EE9D5C021B8F79B540B19875FA09995F7997E623D7DA8F837889A97E32D77"" +

""11ED935F166812810E358829C7E61FD696DEDFA17858BA9957F584A51B227263"" +

""9B83C3FF1AC24696CDB30AEB532E30548FD948E46DBC312858EBF2EF34C6FFEA"" +

""FE28ED61EE7C3C735D4A14D9E864B7E342105D14203E13E045EEE2B6A3AAABEA"" +

""DB6C4F15FACB4FD0C742F442EF6ABBB5654F3B1D41CD2105D81E799E86854DC7"" +

""E44B476A3D816250CF62A1F25B8D2646FC8883A0C1C7B6A37F1524C369CB7492"")

&amp;#x200B;

class choice\_cipher():

&amp;#x200B;

def fill\_box(self):

box = \[\]

point = 0

while len(box) &lt; 256:

next = pi\[point:point+2\]

point += 2

if next not in box:

box.append(next)

for i in range(256):

box\[i\] = int(box\[i\],16)

[self.box](https://self.box) = box\[:\]

&amp;#x200B;

def int\_to\_bits(self,x:int,length:int):

bits = \[\]

for \_ in range(length):

bits.append(x%2)

x //= 2

return bits\[::-1\]

&amp;#x200B;

def block\_to\_bits(self,block:bytes):

x = int.from\_bytes(block,'big')

return self.int\_to\_bits(x,len(block)\*8)

&amp;#x200B;

def bits\_to\_int(self,bits:list):

x = 0

for b in bits:

x \*= 2

x += b

return x

&amp;#x200B;

def bits\_to\_block(self,bits:list):

return self.bits\_to\_int(bits).to\_bytes(len(bits)//8,'big')

&amp;#x200B;

def \_\_init\_\_(self,keybytes:bytes):

self.key = self.block\_to\_bits(keybytes)

self.fill\_box()

&amp;#x200B;

def substitution(self,block:bytes):

result = b""""

for x in block:

result += [self.box](https://self.box)\[x\].to\_bytes(1,'big')

return result

&amp;#x200B;

def inverse\_substitution(self,block:bytes):

result = b""""

for x in block:

result += self.box.index(x).to\_bytes(1,'big')

return result

&amp;#x200B;

def permutation(self,block:bytes):

bits = self.block\_to\_bits(block)

newbits = \[\]

for i in range(256):

newbits.append(bits\[[self.box](https://self.box)\[i\]\])

return self.bits\_to\_block(newbits)

&amp;#x200B;

def inverse\_permutation(self,block:bytes):

bits = self.block\_to\_bits(block)

newbits = \[\]

for i in range(256):

newbits.append(bits\[self.box.index(i)\])

return self.bits\_to\_block(newbits)

&amp;#x200B;

block\_size = 32 # bytes (256 bits)

&amp;#x200B;

def encrypt(self,data:bytes):

block = data\[:\]

for bit in self.key:

if bit == 0:

block = self.substitution(block)

else:

block = self.permutation(block)

return block

&amp;#x200B;

def decrypt(self,data:bytes):

block = data\[:\]

for bit in self.key\[::-1\]:

if bit == 0:

block = self.inverse\_substitution(block)

else:

block = self.inverse\_permutation(block)

return block

&amp;#x200B;

if \_\_name\_\_ == ""\_\_main\_\_"":

from sys import argv

if len(argv) == 1:

print(""usage: choice\_cipher.py encrypt|decrypt key data"")

print(""key and data should be in hexadecimal"")

print(""data must be exactly 32 bytes"")

else:

key = bytes.fromhex(argv\[2\])

data = bytes.fromhex(argv\[3\])

if len(data) != 32:

raise Exception(f""block size must be 32 bytes (found {len(data)})"")

cipher = choice\_cipher(key)

if argv\[1\]\[:3\] == ""enc"":

result = cipher.encrypt(data)

elif argv\[1\]\[:3\] == ""dec"":

result = cipher.decrypt(data)

\`\`\`

&amp;#x200B;","crypto",5,5,0,0.78,0,0,0,32
"146","https://www.reddit.com/r/crypto/comments/n85itg/small_blocksize_ciphers_ecb_kpa_attacks/","Froski101","2021-05-09","Small Block-Size Ciphers, ECB, KPA Attacks?","I understand what SWEET32 etc have shown about small block (64-bit and smaller) ciphers in CBC mode, specifically that ciphertext blocks reveal the xor of plaintext blocks, from which point knowing either plaintext would yield the other. In ECB, repeated blocks correspond 1:1 with repeated plaintext, but as far as I'm aware, give no information on the actual nature of those contents. For block ciphers like Blowfish that have sufficient diffusion, are there any KPA (not CPA, no Oracle) attacks that might achieve partial plaintext recovery? Also, I'm on the assumption that a 128-bit keysize and Blowfish's confusion are sufficient to prevent key recovery, but please correct me if I'm wrong on that.","crypto",5,5,0,1,0,0,0,14
"147","https://www.reddit.com/r/crypto/comments/n6pgv1/aes_asynchronous_encryption/","Bigbillyboyy","2021-05-07","AES Asynchronous Encryption","I am trying to understand how this operates if I have data coming in on RS232 Asynchronous that data looks at follows

Start bit : 8bit Data : Stop bit

If the data is then encrypted using AES 128bit encryption how does this work?

Is just the data added to the 128bit block and then encrypted? Or are the start and stop bits encrypted along with the data?

Any help would be appreciated","crypto",6,6,0,1,0,0,0,15
"148","https://www.reddit.com/r/crypto/comments/n2xazg/what_is_looking_to_be_the_best_post_quantum/","OverRatedProgrammer","2021-05-02","What is looking to be the best post quantum signature scheme for blockchain tech?","I really like SPHINCS+ but the signature sizes are insanely impractical for blockchain tech imo. (I'm not sure how QRL uses xmss? Maybe because they have low transactions?)
CRYSTALS-DILITHIUM is better but still pretty high. 
Falcon and Rainbow seem to be the lowest signature sizes but I'm least familiar with them.

Do we need to wait for more innovation with lower sizes before these PQC solutions can start being used in production? Will there ever be more efficient sizes or will it be a compromise that we need to eventually make?","crypto",5,5,0,0.73,0,0,0,7
"149","https://www.reddit.com/r/crypto/comments/n2s3xz/interesting_topics_in_cryptography/","Natural_Dragonfly","2021-05-01","Interesting topics in Cryptography?","Hi Everyone!

I'm looking into doing cryptography/cybersecurity research as an undergrad and I wanted to ask you all what topics do you think I should look into? In my class, we just finished learning about Digital Signatures, RSA, and Diffie-Hellman Key Exchange which I found really interesting. Also, what type of math should I brush up on besides modular arithmetic and the Euclidean Algorithm?

I appreciate your opinions and any advice you can give me!","crypto",6,6,0,1,0,0,0,9
"150","https://www.reddit.com/r/crypto/comments/n1oni1/how_should_the_secp256k1_parameters_be_applied_in/","Kent305","2021-04-30","How should the secp256k1 parameters be applied in literal calculations?","How would the curve parameters be applied in real life when solving for **x** in the discrete log problem?

 These are the secp256k1 parameters;

&gt;  **p =** **FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFC2F**  
&gt;  
&gt;The base point G in compressed form is:   
&gt;  
&gt;**G = 02 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798**   
&gt;  
&gt;and in uncompressed form is:   
&gt;  
&gt;**G** = **04 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 483ADA77 26A3C465 5DA4FBFC 0E1108A8 FD17B448 A6855419 9C47D08F FB10D4B8**   
&gt;  
&gt;Finally the order n of G and the cofactor are:  
&gt;  
&gt; **n = FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B BFD25E8C D0364141**   
&gt;  
&gt;**h = 01**   
&gt;  
&gt;Wallet Parameters (Public key) :   
&gt;  
&gt;**A (uncompressed)= 042834d5c5245111b414f173079ce88c496609dddf8aae5dc4ffcfa6a3dd4475afba06f5c919a1d6ea0c1ccf3d62eee2090928fb554879c72b2ce19f7f40585425**  
&gt;  
&gt;**A = (compressed) = 032834d5c5245111b414f173079ce88c496609dddf8aae5dc4ffcfa6a3dd4475af**  
&gt;  
&gt;**Address = 1JNC3iaxA95NbWrSro5me2BM27wohuucKD**

&amp;#x200B;

For example;  **A= g\^a mod p.**

One major difficulty is taking a look at the Public key when both the compressed and the uncompressed values are bigger than **P** itself. I tried applying a **02** to bring it below P but it led to another address. 

I used This to verify: [https://iancoleman.io/bitcoin-key-compression/](https://iancoleman.io/bitcoin-key-compression/)

What can be done about this?","crypto",5,5,0,1,0,0,0,4
"151","https://www.reddit.com/r/crypto/comments/mknzue/discussion_about_a_decentralised_and_distributed/","MarcusOrlyius","2021-04-05","Discussion about a decentralised and distributed accurate timing system.","Last night, I was thinking about how cellular automata propogate by updating all states at some given event, for example, every second. This is a beat - a pulse - a cycle - a regularly recurring event. It's a timing event for a system. The second is defined based on hyperfine splitting, etc. The physical world is governed by such accurate timing events. This led me to what I consider to be a significant understanding.

When it comes to decentralsied and distributed systems such as blockchain platforms, these accurate timing systems don't exist from what I can tell and there's no way to measure time with significant accuracy.

It also seems to me that blockchains themselves could function as such timing systems with blocks playing the role of beats. For example, the goal for the bitcoin blockchain is to create a new block every 10 minutes. You could say that the blockchain has a pulse of 1 beat per 600 seconds on average. This kind of simulates a heartbeat - a timing system with a variable beat. It can speed up and slow down and ""resting"" will return it to normal. What these distributed systems need is a blockchain equivalent to a fixed rate timing system like hyperfine splitting as opposed to a variable one.

So, what I'm hoping to achieve with this post is to hopefully start a discussion about this subject. Is it possible to create a blockchain type system with incentives but with a fixed rate block creation?

Is such a system even necessary or could creating blocks more quickly have the same effects, for example, 1000 blocks per second instead of 1 block per 600 seconds? What are the limitiation, etc?","crypto",5,5,0,0.69,0,0,0,8
"152","https://www.reddit.com/r/crypto/comments/mi1xus/post_quantum_finalist_comparisons/","TylerDTA","2021-04-01","Post Quantum Finalist Comparisons","Hello all, 

I am starting a masters program looking at the PQC finalists in the PKE field. I was wondering if anyone knew of any resources that directly compared the four finalists. Hardware based comparisons would be an added bonus, but any comparisons between them would be appreciated. 

Thanks","crypto",4,4,0,0.84,0,0,0,9
"153","https://www.reddit.com/r/crypto/comments/mf74s5/idea_for_testing_cipher/","[deleted]","2021-03-28","Idea for testing cipher","I was toying with my own cipher design, and I wanted a way to test how good it was. I came up with the following idea:

* generate a block of random data
* make an identical copy of that block, but flip a single bit
* encrypt both blocks separately
* generate XOR between the two ciphertexts
* feed the result in a random test suite such as DieHarder or TestU01.

Repeat the procedure on each of the bit positions. If it fails any of tests, the encryption is poor. Obviously, passing the test is not a guarantee that the cipher is good. It can only show bad ones. The nice part is that it can be done by amateurs such as myself.","crypto",5,5,0,0.86,0,0,0,6
"154","https://www.reddit.com/r/crypto/comments/mdrgu2/fetu_public_key_distrubution_hardness_evaluation/","nheka","2021-03-26","Fetu Public Key Distrubution - Hardness Evaluation","Hello,

I've been working on various Diffie-Hellman variant prototypes for a while now.  I've come across this construction that is able to resist DLP attacks.  However, since I'm unable to solve for either the secret private key or the shared secret derived using other methods, I thought I would see how others evaluate the hardness of this group based math problem.

There is documentation and Python code examples on Github, if anyone wants to try it out.  I appreciate any time spent in this effort.  Thanks!  [https://github.com/pvial00/FetuPKD](https://github.com/pvial00/FetuPKD)","crypto",6,6,0,0.8,0,0,0,12
"155","https://www.reddit.com/r/crypto/comments/mctxhw/symmetric_encryption_of_large_file_api_decision/","anonXMR","2021-03-25","Symmetric encryption of large file, API decision","If I need to encrypt a large file, should I use:

https://libsodium.gitbook.io/doc/secret-key_cryptography/secretbox

or 


https://libsodium.gitbook.io/doc/secret-key_cryptography/secretstream


More generally is there a reason to prefer one or the other?

Thank you.","crypto",4,4,0,0.84,0,0,0,7
"156","https://www.reddit.com/r/crypto/comments/t4cn3f/gnu_taler_an_anonymous_taxable_payment_system/","binaryfor","2022-03-01","GNU Taler: An anonymous, taxable payment system using modern cryptography","","crypto",5,5,0,0.73,0,0,1,0
"157","https://www.reddit.com/r/crypto/comments/t3tsxo/provably_secure_turingcomplete_fhe_fully/","Mircea85","2022-02-28","Provably Secure, Turing-Complete FHE [Fully Homomorphic Encryption] based on SKREM-like ciphers (assuming SKREM-like ciphers' claim of being provably secure holds)","So.. rough problem objective-statement:  Alice has algorithm M she whishes to keep secret. Bob has data D=x he wishes to keep secret. Bob wants to know r=M(x). Alice wants to give bob the answer to M(x). How to do this, so that neither Bob learns anything more about M other that M(x)=r, and Alice learns nothing \[useful\] about x \[so not even M(x)\]?  


Here's how to do it based on SKREM-like ciphers idea.

  
**Update4** \[**important; Turing Complete Fully Homomorphic Encryption\]**. So.. idea: Bob generates a truly random G. Then Bob chooses random key k and computes DECR\[x XOR k\](G), both value-wise and in the sense of formulas over the bits of x: x0, x1.. . So f1(x0 x1 .. ) = b1, f2(x0 x1 .. ) = b2 and so on. \[Now, conjecture: f\_1 f\_2 .. will be essentially randomly chosen functions over |x| bits\]. Awesome. Now, he sends some of these functions to Alice.. lets say l such functions (Alice asks for ""a few, not many, but no just 1"").. as many as she needs.. but no more than t\^2 (with running time M = O(t)). Now.. Alice runs the classical ""let me guess some value of x from a boolean formula f1(x)=b"" algorithm, involving 3-CNF expansion: guess x\_m1=b1 then simplify formula accordingly, then x\_m2=b2 and so on, until you get a contradiction. Say she chooses the order of m1, m2 .. in some truly random arbitrary way. She will, whp \[as per SKREM security claims\] get to a contradiction after a not-too-large-but-not-trivial-number of steps. Now, she has a new formula, B1(x\_m1 x\_m2 ... x\_mk)= NOT(x\_m1 XOR b1) AND NOT(x\_m2 XOR b2) AND .. = FALSE. In fact , she has l such boolean functions: B1, B2.. B\_l. Cool. Now, say she wants to have Bob then compute some boolean circuit C(x). Now, having B1,..,Bl with known value when evaluated over x (namely 0) \[and thus NOT B1, NOT B2, .. with known value 1\], she can pepper the circuit C(x) with arbitrary random new branching nodes and conditions, applying DeMorgan rules also randomly for a number of steps down the expression tree.. for example, say C(x) = C1 AND (C2 OR NOT C3). She can write for instance M2(x) = \[C1 AND \[C2 XOR B1\]\] OR \[(C2 OR NOT B3) AND C3 AND B2\]. In fact, before peppering, she can also derive new functions herself over B1 , B2 ... . For example, by combining B1..B\_l randomly with each other, applying DeMorgan rules and negations randomly, and then, using the result (or negating the expression if opposite truth value wanted). This process is somewhat reminiscent of how SAT =p=&gt; 3-CNF-SAT reduction is done, introducing extra variables. Also, C(x) is further altered randomly.. for example (C2 OR NOT B3) can be further altered using factoring out elements from B3 and C2 and applying DeMorgan. So Alice now has a nice new M2 boolean circuit, such that M2(x)=C(x). However, she knows nothing about x itself!!!! \[by security claim of SKREM\].

She sends M2 to Bob. M2(x) = C(x) \[but M2(y)=arbitrary\]. Now Bob, looking at M2, will not know not even what the functions B1..Bn Alice used where \[since she got them by choosing m1, m2, .. randomly\].. much less so, by looking at circuit M2.. be able to differentiate say, ""what is a term from C(x)"" and ""what is a term from some B(x)"". Now, M2(x)=C(x) for sure, by construction.. however M2(y) will have an arbitrary value.. in fact \[intuition here:\] if there are sufficiently many B1,..Bl, then M2(y) will be basically random wrt to M2(x) - very unlikely that say B1(y) is correlated in some way to B7(x). So now Bob can learn C(x), by computing M2(x)... however, he is left clueless about what C(y) might be..

So this solves FHE including CMPZ. Convert Turing Machine M to Boolean Circuit C. Then apply Update4 protocol-algorithm above to obtain M2 to be send to Bob. Alice learns nothing about x, and Bob learns nothing about M... \[except that M(x)=M2(x)\].

**Am I missing something, or did I just solve Turing-Complete, unbreakable Fully Homomorphic Encryption? \[assuming of course security claim of SKREM holds as claimed\]**.. To me it seems pretty clear that ""SKREM is secure"" =&gt; Update4 is a secure Turing-complete FHE scheme. Thoughts?","crypto",2,2,0,0.57,0,0,1,12
"158","https://www.reddit.com/r/crypto/comments/sqgc8g/is_there_an_implementation_of_ssss_where_shares/","6538327","2022-02-12","Is there an implementation of SSSS where shares can be specified?","Is there a version or implementation of SSSS that lets some or all of the the shares be chosen by the user? I travel internationally a lot and I'm trying to devise a sort of worst case scenario recovery tool, something I can tuck away online somewhere which would give access to critical information in a scenario where you've lost access to your normal devices/papers/etc. It would contain things like a scan of a passport, key phone numbers, an emergency credit card number and backup 2FA codes.

Since this is something I likely will access very infrequently (if ever) I don't especially want to rely on a single password that I might not remember when I need it. My thought was to use SSSS or something like it to list 20 questions, things I know very well but which nobody else does, and which collectively would be extremely secure (things like ""the song xxxx and I danced to"" or ""the book from the bus ride""). I know I could just concatenate the answers together and make a very long passphrase for a veracrypt volume but I thought SSSS would let me build in a forgiveness factor so I only need to get maybe 17 of the 20 questions right to unlock it.

The implementations I've seen of SSSS such as [passguardian.com](http://passguardian.com/) create the shares for you and perhaps that's the only way it \*can\* work. But I'm hoping there's a version where that's not the case and where it can instead use 20 plain text words/phrases as the shares? The only alternative I can think of would be to generate thousands of additional fake shares to go along with the 20 real ones, put them all in a table along with thousands of corresponding answers and store it in such a way that I can look up the right answers and then copy the corresponding share. That might work pretty well where the answers are things like last names, movies, books or songs where there are existing lists of thousands of possible answers but it does make storing it all online somewhere tougher.

Grateful for any suggestions and sorry if this is not an appropriate type of question here. Thanks!","crypto",4,4,0,1,0,0,0,3
"159","https://www.reddit.com/r/crypto/comments/socpg3/simple_protocol_for_authentic_license/","zerozerosix006","2022-02-09","Simple protocol for authentic license request/response","Hey guys!

I propose a simple protocol and I am interested in your feedback. I highly suspect that the protocol is well-known and has a special name, but I could not find any references. I came up with the following protocol and I think it fulfills the requirements.

# Prerequisites (this is given and won't change)

We have software **A** which we want to license, which means we want to monetize the usage. Therefore we use a license-server and a client **B** which is able to check-out licenses for the software **A**. If a user opens **A**, **A** should tell **B** to check-out a license (**A** itself is not able to do so). If there is a valid license available, **B** checks out the license and tells **A** to go ahead, otherwise **B** tells **A** to terminate.

# Task (this implementation is up to me)

To make sure the user cannot replace **B** with a simple program which always tells ""yeah go ahead"", I was given the task to come up with a protocol which prevents any simple ""oops we 'accidentally' replaced the license-checking software"" and forces malicious users to commit fraud.

## I have the following:

**A** and **B** both share a secret key `K`

1. If **A** requests a license, it sends a message `M`, which consists of the necessary license information and a **nonce**, and a message authentication code `H` (build out of of `M` and `K`).
2. **B** validates `M` with the MAC `H` and, if `M` is valid, attempts to check out the license. Depending on the success of doing so, **B** sends back an answer `A`, which consists of either `""success""` or `""failed""` and the **nonce** (or a new one?), together with a MAC (build out of `A` and `K`).
3. **A** validates `A` and proceeds accordingly with the answer of **B**.

## My thoughts

Here I try to explain how I have come up with the protocol.

* I don't need a confidential communication, but I need an authentic one and of integrity.
* The **nonce** is necessary, otherwise one could replace the license information in the request message `M` with the license information of a cheaper license. Or every response `A` could be replaced with a `""success""` (the user checks out a valid license once, records the successful answer from **B** (together with the MAC) and then replaces **B** with a similar software which always returns the successful answer with the right MAC).
* I don't think I need the same nonce for the request and for the response.

# Open questions

* Is this a common protocol? Are there references for this protocol? Or is there a more secure one?
* Is it sufficient for the nonce to be a timestamp or should I go with a cryptographically secure random number (e.g. UUIDv4)?
* How to store a secret in an application is a whole separate topic, and it seems there is no straight up answer how to do it right (if one should do it in the first place). I strongly depends on the risk model and of the circumstances. I have asked a similar question [here](https://www.reddit.com/r/cryptography/comments/sar7sd/storing_password_on_machine_for_an_application/). But here, the two applications have to store the secrete key `K`. Should this key be hard-coded, or should it be generated somehow?

I gladly take advice and feedback from you guys! Thank you!

## My previous attempt (not necessary to read)

My very first implementation was a pure security-through-obscurity one. I did not know much about cryptography. After I have implemented the bad code I begun to read up on cryptography and it became one of my most favorite topics in CS and programming.","crypto",2,2,0,0.6,0,0,1,6
"160","https://www.reddit.com/r/crypto/comments/sgynvs/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-01-31","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",4,4,0,0.83,0,0,1,0
"161","https://www.reddit.com/r/crypto/comments/s3udy4/whos_hiring/","ECPairingsOnTheNight","2022-01-14","Who's hiring?","Please state the location and include REMOTE, INTERNS and/or VISA when that sort of candidate is welcome. When remote work is not an option, include ONSITE.

Please only post if you personally are part of the hiring companyno recruiting firms or job boards. Only one post per company. If it isn't a household name, please explain what your company does.

Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job.","crypto",5,5,0,0.55,1,0,0,4
"162","https://www.reddit.com/r/crypto/comments/qskry4/is_it_possible_to_create_dynamic_api_keys/","smoke4sanity","2021-11-12","Is it possible to create Dynamic API Keys?","So I'm trying to create a decentralized public API, which anyone can call as long as they have paid some fee. This is a blockchain type application, so the API (and anyone else for that matter) can see the list of paid subscribers). The challenge is how to provide an API key to subscribers.

I'm thinking of creating a dynamic signature, for example subscribers use their private key and sign some message, and the API would use their public key to confirm they are on the list of approved users. Am I right to think this is possible, before I spend time looking into this deeper? Is there an alternate way I should be looking into for digital signature verification?","crypto",4,4,0,0.61,0,0,1,73
"163","https://www.reddit.com/r/crypto/comments/ot10yb/why_are_banking_pins_4_numbers/","cryptomann1","2021-07-28","Why are banking PIN's 4 numbers?","I have bank accounts in a variety of different banks and all of them in order to get cash out off the ATM require a 4 number PIN. Isn't this insanity? I mean a modern GPU can probably crack this in seconds according to the computerphile video on cracking passwords. I don't get it.

Then to log in, some sites require an alphanumberical password. For example, in one account I have, it asks for a 4 to 6 alphanumerical characters (max) which is also unsafe.

Another bank has a 4 PIN number again. It has that type of dynamic numpad sort of thing where the numbers change each time, however the correct PIN remains the same.

What im missing here?  
","crypto",6,6,0,0.75,0,0,1,46
"164","https://www.reddit.com/r/crypto/comments/ommtgp/is_there_a_javascript_implementation_of_chacha20/","flyingorange","2021-07-18","Is there a Javascript implementation of Chacha20 which I can run in the browser?","I'd like to write a website which receives data from the server and the data is encrypted (the server doesn't know what it is). It would need to be decrypted inside the browser.

I wasn't able to find anything on the internet. The Javascript implementations seem to be written for the server-side","crypto",5,5,0,1,1,0,1,29
"165","https://www.reddit.com/r/crypto/comments/okyo7b/bitlocker_do_not_have_recovery_key_anymore/","bizrkartendiankirt","2021-07-15","Bitlocker - do not have recovery key anymore","Hey guys, I have a problem.

I have a laptop and want to clone my windows on a new ssd. My windows is encrypted with bitlocker.

Now I wanted do start an os from an usb stick and had to change the boot order in the bios and from UEFI to LEGACY.

But after that I thougt about firstly decrypting my ssd and afther that, cloning my windows to the new ssd.

So I wanted to boot in my normal windows again and now it wants my recovery key. But I do not find it anymore. I have only the normal password.

What can I do? Can I set the bios settings to standard and then start windows with my normal bitocker password again (without recovery key)?

I ask because I installed windows on a new ssd now and use the laptop. the old ssd is removed.","crypto",3,3,0,0.67,0,0,0,26
"166","https://www.reddit.com/r/crypto/comments/oiu3qz/the_gentle_ask/","Mahiazomzom","2021-07-12","The Gentle Ask","Cryptography is one of the most cited, used and discussed topic of today's world. So, the knowledge of cryptography is very much necessary today. Is there anyone to inform me about cryptography? I am a beginner here.","crypto",4,4,0,0.61,0,0,0,19
"167","https://www.reddit.com/r/crypto/comments/ogziwb/ransomware_encrypted_files/","Rhyede","2021-07-09","Ransomware encrypted files","Hey there,

I've got a virus that encrypts files with the extension zzla, it's a DJVU ransomware, is there any way for decrypting?

I also have sets of files crypted/not crypted, any way of reverse engineering?

Any help is greatly appreciated.

An article that I found about the virus here:
https://www.google.com/amp/s/howtofix.guide/zzla-virus-file/amp/

Thanks a lot for your time.","crypto",4,4,0,0.75,0,0,1,18
"168","https://www.reddit.com/r/crypto/comments/of6dl1/bls_aggregate_signature_performance/","[deleted]","2021-07-06","BLS aggregate signature performance","Is there any way to improve it's performance? Using [https://github.com/filecoin-project/bls-signatures](https://github.com/filecoin-project/bls-signatures), it took a full minute to verify 10000 signatures, which for my use case is far too long. However, aggregating signatures to save storage space is also quite important.","crypto",4,4,0,1,0,0,1,13
"169","https://www.reddit.com/r/crypto/comments/oek5bh/what_does_point_format_negotiation_vs_single/","recovering-skeptic","2021-07-06","What does ""Point Format Negotiation"" vs ""Single Point Format"" mean in the context of TLS 1.3?","The TLS 1.3 RFC lists some of the major differences between TLS 1.3 and previous versions of TLS. One of them is this:

&gt; Elliptic curve algorithms are now in the base spec, and new
signature algorithms, such as EdDSA, are included. TLS 1.3
removed **point format negotiation** in favor of a **single point format**
for each curve.

https://datatracker.ietf.org/doc/html/rfc8446#section-1.2

I understand the first sentence well enough, but I'm having a hard time understanding what the second sentence means. Specifically, what the difference is between ""Point Format Negotiation"" and ""Single Point Format"" in this quote.","crypto",4,4,0,1,0,0,1,25
"170","https://www.reddit.com/r/crypto/comments/oc8li1/client_puzzle_protocols_as_countermeasure_against/","0xfffffg","2021-07-02","Client Puzzle Protocols as Countermeasure Against Automated Threats to Web Applications","","crypto",4,4,0,1,0,0,1,20
"171","https://www.reddit.com/r/crypto/comments/obgmcv/generate_ecdsa_public_key_from_modulus/","Snoo-94705","2021-07-01","Generate ECDSA Public Key from Modulus","I have a modulus, secp112r1, ""0412773CB6BB2E5504AEA45871D2F30E0232FFDBDA55BD6D5E937B5635"".  How do I derive the public key from this so that I can verify a signature?","crypto",4,4,0,0.71,0,0,1,29
"172","https://www.reddit.com/r/crypto/comments/o41x8t/my_otp_management_and_assessment_command_line/","rosietastic","2021-06-20","My OTP management and assessment command line tool (""er"") and dynamic library (""libenoch"") for Linux written in C.","","crypto",4,4,0,0.75,0,0,1,12
"173","https://www.reddit.com/r/crypto/comments/o2vocu/filefolder_encryption_for_android_offline/","Sven_Bent","2021-06-18","File/folder encryption for android (offline)","Hey. Sorry if im misposting

Is there any free recommended file or folder encryption for  the android platform ?

looking for something that offers both AES and CHACHA20 if possible. and with a decent to good KDF.","crypto",5,5,0,0.86,0,0,1,2
"174","https://www.reddit.com/r/crypto/comments/ntrxtc/rsa_question_for_a_noob_like_me/","Giunco171","2021-06-06","RSA question for a noob like me","So, i was solving an  exercise  where the solution required the use of the following thing:

(2\^x) mod n = 2\^(x mod phi)

&amp;#x200B;

i really can't figure out why this thing works, i was wondering if someone in this subreddit could help me. ALso if there is some paper online that explain this and things similar to this. 

&amp;#x200B;

P.S 

n=p\*q

phi=(p-1)\*(q-1)

where p and q are primes.","crypto",6,6,0,0.99,0,0,2,5
"175","https://www.reddit.com/r/crypto/comments/np7fyv/simple_encryption_challenge_help/","Satday","2021-05-31","Simple Encryption challenge help.","I'm trying the simple babyencryption from HTB in python:


    def encryption(msg):
     ct = []
     for char in msg:
         ct.append((123 * char + 18) % 256)
     return bytes(ct)

From my understanding, the char will be converted to its ascii value and the maths will be applied. I think i need to use the ord() function here instead of just char var.

I've been trying to get reverse the equation and came to this:

    (256//cypher_text) = (123*y) +18

    cyphter_text -18 = (123*y) +18 -18

    cypher_text = 123*y

    y = cypher_text / 123

Any hints?","crypto",5,5,0,0.73,0,0,0,11
"176","https://www.reddit.com/r/crypto/comments/nlr2fo/darpa_dprive_methodology/","JonThePilot","2021-05-26","DARPA DPRIVE methodology","I was looking at the DARPA DPRIVE project: [https://www.darpa.mil/news-events/2021-03-08](https://www.darpa.mil/news-events/2021-03-08)

When looking through the proposal they are suggesting that increasing the arithmetic word size in hardware will lead to dramatic increases in performance.  Maybe I'm missing something but for several schemes that are out there today I'm not sure how this would help.

From looking at the tables at the back of the homomorphic encryption ""standard"" [https://homomorphicencryption.org/standard/](https://homomorphicencryption.org/standard/)

It seems that the size of the ciphertext modulus is well under 1000 bits for most parameter sets. With the RNS implementations of most schemes where the ciphertext modulus is the product of several smaller primes where do 1000 bit multipliers come into play to help with performance?  I'd think many more smaller multipliers would provide more performance for the same area.  

For BFV I can potentially see how a wide multiplier would help, but the DPRIVE project says that BGV must be implemented.  Can anyone help fill in what I'm missing?  Thanks!","crypto",4,4,0,1,0,0,0,11
"177","https://www.reddit.com/r/crypto/comments/nkn9cc/proof_that_the_content_of_an_encrypted_message/","creatinavirtual","2021-05-25","Proof that the content of an encrypted message matches a hash without decryptying the message","We have two actors: Bob and Alice. 

1. Bob writes a plaintext secret and computes the hash of the message, which is displayed for anyone to test whether the decrypted message is the original.
2. Bob encrypts the plaintext with his private key and the public key of Alice (so that Alice can decrypt the message with her private key). Alice can decrypt the message and check if the hash of the original matches Bob's published hash. However, is there any way by which a middle man (say for instance a central server that serves the encrypted message from Bob to Alice) can verify that the content of the cypher matches the hash published by Bob without decrypting or having access to the the secret message?","crypto",5,5,0,1,0,0,0,7
"178","https://www.reddit.com/r/crypto/comments/ni2ofg/ecdh_vs_dh/","anonXMR","2021-05-21","ECDH vs DH","In ECDH, we select our secret values to be 2256, like any private key for 256-bit ECC.

In standard DH, what is the size of the secret integer (not the shared secret), is it any number up to the group mod size? does it need to be prime?","crypto",4,4,0,1,0,0,0,7
"179","https://www.reddit.com/r/crypto/comments/nhmibv/likely_stupid_question_about_eddsa_in_libsodium/","anonXMR","2021-05-21","Likely stupid question about EdDSA in libsodium","I've been learning about EdDSA and how it differs from ECDSA internally.

I like that it's deterministic by default etc.
However, I'm confused on one point...


I understand of course, that private keys in ECDSA and EdDSA schemes are just numbers that we scalar multiply by the curves generator to obtain a public key.

That said looking at this diagram:http://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/warner/files/2011/11/key-formats.png

When one generates a crypto_sign_keypair in libsodium, are we actually generating a `seed` as per that diagram or are we generating the private key used later in the process and reverse it to get the seed?","crypto",4,4,0,0.75,0,0,0,14
"180","https://www.reddit.com/r/crypto/comments/nh5soe/i_have_a_question_about_keys/","DasmeJR","2021-05-20","I have a question about keys","I recently made a cipher that has lots of keys, and I was wondering if 8000 to the power of 8000 keys was good enough to encrypt something, its a word-to-number encryptor.","crypto",3,3,0,0.55,0,0,0,21
"181","https://www.reddit.com/r/crypto/comments/nepyty/cryptology_eprint_archive_report_2021641_hydra/","wzhang_nodox","2021-05-17","Cryptology ePrint Archive, Report 2021/641, Hydra: Succinct Fully Pipelineable Interactive Arguments of Knowledge","New acct to not dox my regular acct- 

If anyone is interested in secure computation check out the preprint!

[https://eprint.iacr.org/2021/641](https://eprint.iacr.org/2021/641)","crypto",5,5,0,0.78,0,0,0,1
"182","https://www.reddit.com/r/crypto/comments/narik7/spelling_rules_for_substitution_cipher_decoder/","HeyoGuys","2021-05-12","spelling rules for substitution cipher decoder?","i know it's already been done, but i just want to make a simple little substitution cipher solver in python for fun. 

before i venture near pattern analysis, i wanted to set some ground rules for english spelling. so far, i have 

-99% of the time u follows q

-e is in every word

can anyone think of some others?","crypto",4,4,0,0.84,0,0,0,17
"183","https://www.reddit.com/r/crypto/comments/n3bmg4/aes_encryption_question/","Bonelessbonles","2021-05-02","AES Encryption question","Can someone explain why AES encryption is unaffected by Known plain-text attacks?","crypto",3,3,0,0.81,0,0,0,26
"184","https://www.reddit.com/r/crypto/comments/mvk928/child_public_key_and_child_private_key_for_better/","yan-dev","2021-04-21","Child Public Key and Child Private Key for better Security?","Hello Everyone, 

Since the database leak of Facebook, Ledger (and countless of other companies) it got bothered me so much that scammer is abusing the users telephone number, e-mail, living address etc. (and I'm part of the victim too).

I'm a developer myself and I was always bothered that e-mail and telephone number were mostly stored in plain text. And I have already an idea how to solve it in theory, but I'm not quire sure yet how to solved it in practice.

This theory idea which I have is heavily inspired from [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) and [RSA PEM Keypair](https://rietta.com/blog/openssl-generating-rsa-key-from-command/): 

How about we create a single key pair ""public key"" and ""private key"". public key can be stored in server for encrypting purpose while private key must be secured either in paper or in a offline machine - as long attacker can't access it.

With public key / private key - which is the main key - you can generate multiple child public key and child private key which can be used to encrypt / decrypt individual values. **Important is that those child keypair (child public key and child private key) can't be generated in a same place!**  


As example usage:  


I create child public key from seed 1 and now I encrypt the value ""+0123456789"", which becomes to ""ABCDEF"" - Without child private key, you can't decrypt it back. The encrypted value ""ABCDEF"" is now stored in database and hence it can't be read anymore.

Now I need to get in touch with this customer per telephone number. So I would take out the encrypted value ""ABCDEF"" of the customer, put it into a always-offline machine and then I decrypt it with the child private key with the seed of 1. This value now shows ""+0123456789"" which I can contact to the customer now.

Now lets assume database got leaked + the attacker managed to decrypt the value ""ABCDEF"" because he has access to the child private key (seed 1) - He can't still decrypt other telephone numbers because it uses different child private key (seed n).   
The only way to get all decrypted value, the attacker need to get the ""Private Key"" in order to generate ""Child Private Key"". Hence ""Private Key"" should be kept secret as possible. Just like cryptocurrency hardware wallet is doing it - you can get public address, but NOT private address!  


Encrypting E-Mail is - in my opinion - also worth it to do and I would use username for logins instead of E-Mail. However for marketing purpose it may be less ideal. Same goes for living address or even credit card number?

\-----  
Please correct me if I'm missing something here for the security flaw or if this method already exists out here. (Or maybe a better one?)  


Here is the visual graph of my idea: [https://drive.google.com/file/d/1EM5ii0ZjBcY6K4puYWfN0kME0-J-5Fqu/view?usp=sharing](https://drive.google.com/file/d/1EM5ii0ZjBcY6K4puYWfN0kME0-J-5Fqu/view?usp=sharing)  


Of course now the question is... if this can be done in practice?

&amp;#x200B;

Thank you for your time by reading this!

&amp;#x200B;

\- Yan","crypto",5,5,0,0.78,0,0,0,18
"185","https://www.reddit.com/r/crypto/comments/mu48id/darkcastle_v13_libsodium_integration_and/","nheka","2021-04-19","DarkCastle v1.3 - libsodium integration and Curve25519","[https://github.com/pvial00/DarkCastle](https://github.com/pvial00/DarkCastle)

DarkCastle is an authenticated file encryption program meant to provide secure communication between two parties.

For those following DarkCastle over the past few years, I decided to deviate from the architecture of algorithms entirely developed by myself.  With the release of version 1.3, libsodium has been integrated to provide Curve25519 keys instead of the custom variant RSA algorithm that was previously implemented.  The secret keys are symmetrically encrypted and protected with a passphrase.  - Note:  DarkCastle is an educational and experimental project and should not be used for production purposes.

&amp;#x200B;

Use at your own risk!","crypto",4,4,0,0.63,0,0,0,10
"186","https://www.reddit.com/r/crypto/comments/mc2qeb/how_to_implement_chosen_prefix_collison_attack/","hadiashafiq","2021-03-24","How to implement Chosen Prefix Collison attack","I am trying to learn MD5 Collison attacks and I saw hashclash to construct a collision through Chosen Prefix Collison but I cannot find a basic tutorial or even a blog how this attack works.
Does anyone have video or an article so I can know how this works for a beginner level??","crypto",4,4,0,1,0,0,0,2
"187","https://www.reddit.com/r/crypto/comments/mbmlci/sha3_in_r/","UroDoc1984","2021-03-23","SHA-3 in R","I'm working on an application of hashing algorithms, and I was wondering if there is an easy way to apply SHA-3 in R (or SAS, Stata, etc). I see that OpenSSL provides SHA and SHA-2, but I don't see where SHA-3 has been made available. I understand that SHA-2 has not yet been broken, so this is a valid fallback, but I would like to use SHA-3 if possible. Apologies if total newbie question; I'm very new to applied cryptography/cybersecurity.","crypto",3,3,0,0.72,0,0,0,6
"188","https://www.reddit.com/r/crypto/comments/ma57os/certificate_transparency_log/","janniksf","2021-03-21","certificate transparency log","Why might a certificate with an SCT not appear in any certificate transparency log?   
Does it occur if you use OCSP stapling to deliver the SCTs, and the website operator is not configured to support OCSP stapling?","crypto",3,3,0,0.81,0,0,0,4
"189","https://www.reddit.com/r/crypto/comments/syyn1e/which_hashing_function_is_good_enough_for_session/","Climax708","2022-02-22","Which hashing function is good enough for session IDs?","","crypto",3,3,0,1,0,0,0,2
"190","https://www.reddit.com/r/crypto/comments/r9qfyd/how_to_solve_an_sp_system_manually/","ProfessorInMaths","2021-12-05","How to solve an SP system manually.","My friend and I have been sending each other puzzles and ciphers. This time, my friend sent me 4 messages:  


The first and second messages were encrypted (the first being 870 characters long and the second 760 characters). The third and fourth messages were the first and second messages decrypted.  


He told me that it was encrypted with a Substitution-Permutation cipher, and that the encryption was S-&gt;P-&gt;S. Also, the block size is 10, I am not sure what that is referring to. The characters are a to z, the comma, the full stop, the apostrophe and the space, i.e. 30 characters total.  


My goal is to find the substitution and the permutation, i.e. Find the key given the original and encrypted.  


Does anyone have any idea on how I can solve this without using a computer?","crypto",4,4,0,0.62,0,0,1,3
"191","https://www.reddit.com/r/crypto/comments/r076t9/releasing_the_cracken_a_data_driven_approach_for/","shmulikamar","2021-11-23","Releasing the Cracken - A Data Driven Approach for Password Generation","","crypto",2,2,0,0.56,0,0,0,41
"192","https://www.reddit.com/r/crypto/comments/qoqjop/this_week_in_console_we_interviewed_basile_simon/","binaryfor","2021-11-07","This week in Console we interviewed Basile Simon. Basile created a project called The Digital Evidence Preservation Toolkit to help his journalist friends in Belarus fight against Lukashenko! I thought /r/crypto might be interested :), since it uses cryptography to preserve the collected evidence :)","","crypto",3,3,0,0.62,1,0,1,52
"193","https://www.reddit.com/r/crypto/comments/qm429p/veslocker_hardwaregrade_pin_security_api/","vesvault","2021-11-03","VESlocker: Hardware-grade PIN security API","Hardware grade PIN bruteforce protection using a split encryption key

[https://veslocker.com](https://veslocker.com)

&amp;#x200B;

https://preview.redd.it/dzkmpalk1gx71.png?width=756&amp;format=png&amp;auto=webp&amp;s=146ee712e57154213d63429099c9edf05c30e72e","crypto",5,5,0,0.73,0,0,1,83
"194","https://www.reddit.com/r/crypto/comments/p0qjok/encrypting_preknow_text_with_aes_and_then_hashing/","OmegaArmadilo","2021-08-09","Encrypting pre-know text with AES and then hashing it for use as a password, overall security?","Hello crypto community, this is my first post here so sorry if i missed anything.

confusing title i know, let me break the steps here.This is my method of generating some secure passwords mixing known algorithms already accepted as secure so no new systems here. I was wondering about best practises and possible weaknesses it might have - improvemets to be done.

1rst A know text by both the ""attacker"" and me gets fed into the padding scheme.2nd the result of that is encrypted using AES with a totally random password(the best randomness i can get using secure methods for crypto and many digits)3rd the encrypted now bytes are salted and Hashed  with either PBKDF2, bcrypt or scrypt4rth The result of the hash turn into characters using base85 and i used as a password.

Yeah i know it is completely weird as a sytem but it provides a convinience for me and that's why i chose it.Now my questions, What would be a good padding scheme to use in the first step? obvisously i rely on the randomness of AES-256 encrypted data for security here(with a very good password), the random password is to guard against list based attacks, the hash after that is to make bruteforcing a random pass from a TB/sec to waaay less as they are slow hashes. My thinking here is that the 2nd step outputs something almost random and that fed into the 3rd step guarantee an almost random pass in the end.

Between PBKDF2, bcrypt or scrypt is there a clear choice for my case? my reasearch showed each have pros and cons.Is base85 from the pseudo-random output of the hash predictable(could be base64 i figured more digits=more combinations)?Should i change it to something else?I am not going for perfect security against hackers or something here just a good overall system to use(this one is easy to use).I know i can use password managers or 2FA which is a better solution but right now i am asking about this one, and about the theory not implementation attacks such as keyloggersmemory search etc.

Thank u for your time

&amp;#x200B;

Edit1: As other pointed out in the comments what i am trying to achieve here is a deterministic password manager(thanks to  [jmw74](https://www.reddit.com/user/jmw74/)  and  [GibbsSamplePlatter](https://www.reddit.com/user/GibbsSamplePlatter/) for giving me the correct name for it)","crypto",1,1,0,0.55,0,0,1,42
"195","https://www.reddit.com/r/crypto/comments/oobmpc/prepare_an_ssdequipped_laptop_for_sale_data_safety/","MicroBoy4441","2021-07-20","Prepare an SSD-equipped laptop for sale (data safety)","Greetings!

Laptop owner, about to sell it.

Data currently on the disk: passwords - KeepassXC, minor files - one of a little bigger value, I really mean it, some private photos (!!) and videos. Since keepassXC already encrypts, Im only worried about the .docs, jpgs, .avis.

I have no knowledge when it comes to data erasing. Please, do not laugh.

I was suggested:

1. Prepare important files copies
2. GParted -&gt; remove all the partitions
3. Prepare giant partition covering the entire SSD (except GRUB menu), install random Linux distro checking the ""Encrypt"" option before installation -&gt; see if it boots up properly and asks for passphrase
4. (NO CLUE WHICH IS BETTER)  DBAN wipe/Bruce Schneier wipe/German Vsitr wipe/US DoD wipe
5. Install the ""final"" OS  -&gt; sell

Would that provide me with some nice data safety?

Thanks in advance dear /crypto users! :)","crypto",4,4,0,0.67,0,0,1,25
"196","https://www.reddit.com/r/crypto/comments/ol3cp3/cryptographically_time_stamp_everything/","NCGThompson","2021-07-15","Cryptographically time stamp everything","I am referring to the type of time stamp that proves some data existed at or before a certain point of time.

TL;DR: It cant hurt and its cheap to time stamp everything, so you might as well. Different methods can be combined, for best-of-all. Merkle Trees!

Actually, that summary was all I needed to say.","crypto",2,2,0,0.59,0,0,0,30
"197","https://www.reddit.com/r/crypto/comments/ol0jap/crypto_identification_schemes_list/","r0n1n2021","2021-07-15","Crypto Identification schemes list?","Hi there!
Im trying to find an online list of Identification schemes - not auth schemes. 
Any experts have a good link?
Thanks in advance.","crypto",3,3,0,0.8,0,0,0,15
"198","https://www.reddit.com/r/crypto/comments/ogle8k/is_blake2b_with_a_length_of_160_bits_considered/","[deleted]","2021-07-09","Is Blake2b with a length of 160 bits considered secure for my use case?","I'm making a merkle tree that could have multiple billions of leaves in it. By my calculation, if all bitcoin mining was magically changed to blake2b (and blake2b is 3x faster than sha256), then it would take around 1 billion years to produce a collision. Does this seem right?","crypto",3,3,0,1,0,0,1,27
"199","https://www.reddit.com/r/crypto/comments/ofn686/does_the_order_of_fields_in_ssl_certificates/","aim4r","2021-07-07","Does the order of fields in SSL certificates matter ?","We have a VPN setup wherin user access is secured via SSL certificates. Recently, we have observed an issue with newly renewed certificates not being recognised by the VPN Firewall. While investigating, I noticed that the order of the fields in new certificates has changed (as you can see in the screenshot below, comparing an old certificate to a new one).

Does anyone know if the order of fields is of any importance ? Is there a standard that dictates the correct or recommended order ?

https://preview.redd.it/gbsywfqemt971.png?width=809&amp;format=png&amp;auto=webp&amp;s=86368699b835891ccb5ec4e1ce4c3976ad57f4f7","crypto",3,3,0,1,0,0,1,13
"200","https://www.reddit.com/r/crypto/comments/ofdobc/vaulthsm_report_the_way_to_confirm_whether_the/","hardenedvault","2021-07-07","VaultHSM report: The way to confirm whether the Smart Card (J3H145) supports RFC-6979 ECDSA implementation","","crypto",3,3,0,1,0,0,1,5
"201","https://www.reddit.com/r/crypto/comments/o9hz61/index_of_coincidence_vs_letters_frequency/","iamromand","2021-06-28","Index of coincidence vs letters frequency","Not sure that this belongs here, but also where else to post. I have a question related to the two topics above. If this is not belong, I'd be happy for help where can I post it.

I want to detect some pattern of low-effort texts. Assume that I have the following texts:

1. ""Assume that I have the following text. Assume that I have the following text. Assume that I have the following text. Assume that I have the following text. Assume that I have the following text. Assume that I have the following text.""
2. asdfasdfsdfsdfdsfsasdfasdfasdfasdf

What would be the best way to detect something like this? I though about [Index of coincidence](https://en.wikipedia.org/wiki/Index_of_coincidence) and [letters frequency](https://en.wikipedia.org/wiki/Letter_frequency). In the end I would like some index number to indicate how confident is the algorithm that the text is not low-effort (of course based on the capabilities of the algorithm).

Should I implement both, or one is better than the other in this case, and will suffice in this case? Maybe there is a way to find if multiple substrings are used? Or some other index that is easy to implement and gives a similar indication?

P.S. I'm not looking into ML or complex algorithms, as this should be a basic ""firewall"", and then the texts will be checked manually anyway.","crypto",3,3,0,0.8,0,0,1,13
"202","https://www.reddit.com/r/crypto/comments/o4ilmi/what_is_enough_to_qualify_for_good_plausible/","sigaloid","2021-06-21","What is enough to qualify for good plausible deniability?","I was thinking of writing a small utility that would allow you to add a KeePassXC/KDBX 4 entry that contains an attachment with its own KDBX database as an attachment. Even if you don't want to store a plausibly-deniable entry, you can still use the utility to add junk data / a KDBX database with a randomly-generated key (that gets subsequently destroyed). This would provide plausible deniability since technically you could have just opted for a destroyed key. 

Then I realized this is kind of pointless, since it's not built into the password manager spec or any clients, the existence of that attachment is essentially just as guilt-inducing as having encrypted data in there, since of course it's possible it was just randomly generated, but it's far more likely that you did it yourself. 

Is there any point to having this setup?","crypto",3,3,0,1,0,0,1,7
"203","https://www.reddit.com/r/crypto/comments/o217qx/pgp_decryption_how_to_output_entire_message/","[deleted]","2021-06-17","PGP decryption, how to output entire message including surrounding text?","Let's say, for example, I feed the source of an email to PGP. It will decrypt and output the PGP blocks within it. How can I output the entire source with the decrypted parts inline?

&lt;cleartext A&gt;&lt;PGP block&gt;&lt;cleartext B&gt;

&lt;cleartext A&gt;&lt;decrypted block&gt;&lt;cleartext B&gt;

I can write a script to do this but I was thinking maybe there's already a simple / elegant solution.

Thanks","crypto",3,3,0,0.8,0,0,1,18
"204","https://www.reddit.com/r/crypto/comments/nzvwng/recommendations/","-klex","2021-06-14","Recommendations","What are some good books for the theoretical aspects of cryptography?","crypto",3,3,0,1,1,1,1,10
"205","https://www.reddit.com/r/crypto/comments/nrie7w/question_about_public_private_key_cryptography/","noelexecom","2021-06-03","Question about public private key cryptography","Is it possible to encrypt a message ""m"" in a way so that given some arbitrary (finite) set of public keys, any single one of them can decrypt it? 

I also want that for every message the size when encrypted remains bounded under the number of public keys that it is encrypted with.","crypto",3,3,0,1,1,0,0,8
"206","https://www.reddit.com/r/crypto/comments/mndled/gpg_23_was_released_curveed25519_by_default_and/","[deleted]","2021-04-09","GPG 2.3 was released. Curve/ed25519 by default and support for OCB mode.","","crypto",13,13,0,1,0,0,0,15
"207","https://www.reddit.com/r/crypto/comments/mkjbzb/anonymous_credentials_stateoftheart/","elaroc","2021-04-05","Anonymous Credentials [State-of-the-art]","I have been recently exploring the space of anonymous credentials given the need to a privacy-preserving Digital Green Passport and i want to ask what is the state-of-the-art in the space. I went through [Anonoymous Credentials Light](https://dl.acm.org/doi/10.1145/2508859.2516687) which is quite interesting but involves multiple concepts. Also i have been through some papers addressing revocation but still i haven't seen any practical implementation or deployment of such a system.

I also went through [verifiable credentials](https://www.w3.org/TR/vc-data-model/) which is a W3 proposal with ZKP capabilities but it doesn't address revocation as far as i read.

Is there anyone actively working on anonymous credentials that can provide some papers or resources i can go through?","crypto",12,12,0,0.79,0,0,0,11
"208","https://www.reddit.com/r/crypto/comments/szm9kz/determinative_aead_and_key_wrapping/","hangonreddit","2022-02-23","Determinative AEAD and Key Wrapping","Can someone please help me understand this [Tink documentation](https://github.com/google/tink/blob/master/docs/PRIMITIVES.md#deterministic-authenticated-encryption-with-associated-data)? 

Deterministic AEAD primitive (Deterministic Authenticated Encryption with Associated Data, DAEAD) provides encryption with a deterministic property: encrypting the same data always yields the same ciphertext. Such encryption is useful e.g. for key wrapping

Why would deterministic encryption be useful for key wrapping? And why would key wrapping need any special encryption other than what we normally do for data (i.e. AEAD)?

Thanks.","crypto",11,11,0,0.87,0,0,1,3
"209","https://www.reddit.com/r/crypto/comments/sv2y6d/ripemd160_a_disater_in_the_making_thanks_to/","AcostaJA","2022-02-17","RIPEMD160 a disater in the making (thanks to openssl 3 developers)","The issue, OpenSSL 3 developers decided given RIPEMD160 is too old and weak (they are right on this), it has to be deprecated once for all, but by rendering access to it by applications quite cumbersome, so most applications that rely on system provided default ripemd160 (as many python scripts) shall switch to legacy ssl provider, and heres is the complicated part, is not as simple, even may require to download and compile from source Openssl 3 followed by special directives.

Its clear RIPEMD160 is old, and unsafe, its know , so is often used in combination with other hash algorithms (as does bitcoin with P2PKH address, there is no way to change RIPEMD160 in P2PKH specification without an very complicated hardfork).

It is an sad situation when as many apps (and developers) not aware this hash provider is not available, not just has to enable alternative methods (bitcoin did long time ago, but only those that rely on official system libraries), also means open the doors to: RCE s and other dangers product of switching mechanisms.

All this situation is really sad, as open doubts on the future and convenience of the opensource or open standards, that are not open to the community comments.

The path selected by openssl 3' developers, rise eyebrows to not few researchers.

I fixed the issue with an 3rd party Ripemd160 provided by some bitcoin developers.

I was aware of the issue when I begin testing Ubuntu 22 beta (it moves to openssl 3), not an ideal situation as it will force coders to audit an old piece of code before integrating into they legacy apps.

Take provisions, fellow cyphers.","crypto",11,11,0,0.76,0,0,0,19
"210","https://www.reddit.com/r/crypto/comments/sjr5dl/estimating_the_bit_security_of_pairingfriendly/","giacomopope","2022-02-03","Estimating the Bit Security of Pairing-Friendly Curves","","crypto",11,11,0,0.88,0,0,1,0
"211","https://www.reddit.com/r/crypto/comments/pq0m42/a_little_help_with_montgomery_ladder/","anonXMR","2021-09-17","A little help with Montgomery ladder implementation","Hi folks,

I'm trying to implement Montgomery ladder, just for learning/fun.

I using Swift, as it's a simple language.

Based on the Cryptohack guidance it should be:

Input: P in E(Fp) and an l-bit integer k = £ 2i ki where kl-1 = 1
Output: [k]P in E(Fp)

1. Set (R0, R1) to (P, [2]P) 
2. for i = l - 2 down to 0 do
3.   If ki = 0 then
4.      Set (R0, R1) to ([2]R0, R0 + R1)
5.   Else:
6.      Set (R0, R1) to (R0 + R1, [2]R1)
7. Return R0


So as a basic pseudocode I did:

    func montgomeryLadder(point p: Point, scalar k: (Int)) -&gt; Point {
        var r0 = p
        var r1 = Point(p.x*2,p.y*2)
        var k0 = k
        while(k0 &gt; 1) {
            k0=k0/4
            if(k0==0){
                r0 = (r0.x*2, r0.y*2) //should be double
                r1 = (r0.x+r1.x, r0.y+r1.y) //should be add
            } else {
                r0 = (r0.x+r1.x, r0.y+r1.y) //should be add
                r1 = (r1.x*2, r1.y*2) //should be double
            }
        }
        return r0
    }

    func pointAddition(point1 p1: Point, point2 p2: Point) -&gt; Point {
        var a = (p2.y - p1.y)/(p2.x - p1.x) % P // &lt;-- like this, mod per line?
        //x3 = B±2 - A - x1 - x2 % P
        //y3 = ±(x1 - x3) - y1 % P
        return (thePoint)  
    }

So the questions I have are:

1. Am I doing this loop right? I'm interpreting it as ""take 2 bits from the number on each loop"", which is why I divide by 4.

2. When I do the add implementation, I am supposed to do all calculations mod the prime P, so does that look something like the above in ```func pointAddition```?

3. Is the ""B"" value in the above add implementation supposed to be the ""B"" co-efficient from the curve equation?



Thank you for your time and sharing your knowledge!","crypto",12,12,0,1,0,0,1,61
"212","https://www.reddit.com/r/crypto/comments/passyg/another_stupid_ed25519_question/","anonXMR","2021-08-24","Another stupid Ed25519 question","Hi folks,

I've been reading about the differences between PureEdDSDA and HashEdDSA.

I understand why we need the hash first variant, as described here:

""The main motivation for HashEdDSA is the following storage issue (which is irrelevant to most well-designed signature applications). Computing the PureEdDSA signature of M requires reading through M twice from a buffer as long as M, and therefore does not support a small-memory InitUpdate-Final interface for long messages. Every common hash function H0 supports a smallmemory Init-Update-Final interface for long messages, so H0 -EdDSA signing also supports a small-memory Init-Update-Final interface for long messages.""


Though, looking at the process for EdDSA I don't see why it's necessary to have a ""buffer as long as M""? (where M is the message)...

Isn't the process just:

1. compute the nonce as HASH(nonce_key || message)
2. compute the commitment R = [nonce]G with G the generator of the group.
3. compute the challenge as HASH(commitment || public_key || message)
4. compute the proof S = nonce + challenge × signing_key
the signature is (R, S)

Where is the need to hold the full message in memory there? The hashing process doesn't need it right?","crypto",13,13,0,0.88,0,0,1,41
"213","https://www.reddit.com/r/crypto/comments/paoxp1/programmers_dont_understand_hash_functions/","Soatok","2021-08-24","Programmers Dont Understand Hash Functions","","crypto",10,10,0,0.65,1,0,1,26
"214","https://www.reddit.com/r/crypto/comments/paoexb/greta_gated_rotor_encryption_table_algorithm_card/","nheka","2021-08-24","GRETA (Gated Rotor Encryption Table Algorithm) - Card Cipher","Inspired by the design of the SIGABA rotor machine, I have devised a card cipher (GRETA S) that is designed to be more secure than Bruce Schneier's Solitaire.

GRETA S involves a lot of deck stepping or rotation (removing the top card and placing it in the rear, not your rear) and is inspired by William Friedman et al.  However, there is no need to know any math as all operations are either stepping or substitution look up.

I have penned a (52!) strength of the cipher and hope it lives up to that.  Happy rotor stepping!

Documentation:  [https://github.com/pvial00/GRETA/blob/master/docs/GRETA%20S%20Card%20Cipher.pdf](https://github.com/pvial00/GRETA/blob/master/docs/GRETA%20S%20Card%20Cipher.pdf)

Python simulation:

[https://github.com/pvial00/GRETA](https://github.com/pvial00/GRETA)","crypto",12,12,0,0.84,0,0,1,23
"215","https://www.reddit.com/r/crypto/comments/odxtp1/some_questions_about_ssltls/","zxaq15","2021-07-05","some questions about SSL/TLS","I'm reading the SSL section in the book(Computer Networking Top down approach).

&amp;#x200B;

1. there are two nonces in the ssl handshake process. those are used to prevent connection replay attack. I wonder if nonces are also used to generate PMS(pre master secret).
2. How exactly is PMS created? it's generated from server's public key? like someFunction(publicKey)? 
3. the book says after generating MS(master secret), then MS is sliced up to generate two encryption keys and two MAC keys. so two encryption keys are the same??  
as far as I know, because of computing resource they should use symmetric key after generating MS using asymmetric key. but if two encryption keys are different, it doesn't make sense.","crypto",11,11,0,0.87,0,0,1,24
"216","https://www.reddit.com/r/crypto/comments/o925sy/how_does_document_signing_work_in_practice/","patrickd314","2021-06-27","How does document signing work in practice?","My understanding of document signing is (1) I hash the document, (2) I encrypt the hash with my private key (3) I send the plaintext document and the encrypted hash to the recipient, who (4) uses my public key to decrypt the hash, and (5) does their own hash of the document, then compares that  with the decrypted one. If it compares, they know that the message was sent by the owner of the private key, and that it is unchanged.

But, if I'm online, and someone sends me something resembling Docusign, all I do is click ""sign here"" in a couple of places and send it back. No evidence of keys, public or private, nor any effort to ensure that it's me.  How is that secure and reassuring to the document recipient?","crypto",11,11,0,0.76,0,0,1,19
"217","https://www.reddit.com/r/crypto/comments/o8ky8c/bit_strength_symmetric_ciphers/","anonXMR","2021-06-26","Bit strength symmetric ciphers.","Hi,

Is AES (in GCM) with 256 bit keys actually 256bit strong? Or is there a reducing attack?

How about chacha20?


Thank you.","crypto",12,12,0,0.93,0,0,1,25
"218","https://www.reddit.com/r/crypto/comments/njhg5v/since_when_have_ciphers_besides_otp_been_immune/","apokrif1","2021-05-23","Since when have ciphers (besides OTP) been immune to known-plaintext attacks?","Since when have ciphers (besides one-time pad) been immune to simple known-plaintext attacks (i.e., with only a known plaintext-ciphertext pair, or a handful of them)?","crypto",12,12,0,0.84,0,0,0,33
"219","https://www.reddit.com/r/crypto/comments/nhxapn/sha256_incorrect_output_when_the_length_is_more/","[deleted]","2021-05-21","sha256 incorrect output when the length is more than 56","I'm trying to learn each step of sha256, so I wrote a code with python that uses the binary strings instead of math operations to fully understand it.

The code works fine when the input is less than 56 characters but when it's equal or more than 56 characters the output is incorrect:

For exmaple when the input is:

\`ba7816bf8f01cfea414140de5dae2223bda12ae1a5324sfdserew3ra\`

instead of \`1caa150674ab1aed030dc69f9b86dbcbc412e6e1dd20344eeaa21687acae7789\`

I get \`8492782cc396d4454980c9b63f127c5730da7d838822f8f37b1c7705d2630b88\`

Code:

[https://replit.com/@MainSilent/sha256](https://replit.com/@MainSilent/sha256)","crypto",11,11,0,0.79,0,0,0,17
"220","https://www.reddit.com/r/crypto/comments/ndebst/one_key_to_rule_them_all_recovering_the_master/","trot-trot","2021-05-16","One key to rule them all: Recovering the master key from RAM to break Android's file-based encryption","","crypto",10,10,0,0.86,0,0,0,6
"221","https://www.reddit.com/r/crypto/comments/mop94j/is_hash_funcion_an_asymmetrical_cryptography/","LandOf7","2021-04-11","Is hash funcion an asymmetrical cryptography?","Hi, I'm trying to learn more about cryptography used online and the different cryptography techniques. I read that symmetrical and asymmetrical cryptography are the two main way of encrypting. Then I read about end to end, hash funciont, quantum cryptography. Are these other types or could them be classified in symmetrical and asymmetrical. 

I also don't really understand the difference between encryption and encoding. Could they be used as synonyms?","crypto",12,12,0,0.66,1,0,0,15
"222","https://www.reddit.com/r/crypto/comments/mhz1me/textbook_rsa_attack_using_many_ciphertexts/","FinancialNaiveCat","2021-04-01","Textbook RSA attack using many ciphertexts knowing only e, and the bit-length of p, q","Say Alice sends n ciphertexts to Bob encrypted with the same modulus (N) and the same encryption exponent e. Eve eavesdrops on the conversation and retrieves all these ciphertexts. Ciphertexts aren't all unique (there is some repetition) and there is no padding. Eve also knows e and the bit-length of both p,q. Can Eve recover the modulus N? Can she recover plaintext? If so how?

For some values let's say: bit-length for both p,q is 512; e = 65537 and Eve has captured over 200 ciphertexts. 

I thought about the common modulus attack but couldn't make it work because the encryption exponent is the same. What do you guys think?","crypto",10,10,0,0.92,0,0,0,8
"223","https://www.reddit.com/r/crypto/comments/q9xb2x/how_do_i_use_xof_shake_and_cshake_in_openssl_cli/","finlaydotweber","2021-10-17","How do I use XOF (SHAKE and cSHAKE) in openssl CLI and JavaScript","I am learning about hash functions and I just read about XOF (namely shake and cShake). 

I will like to test this functions out by myself but I can't seem to find how to use it via the OpenSSL CLI or using a JavaScript library.

The JavaScript library I am using is https://github.com/paulmillr/noble-hashes but it does not seem to support XOF.

So how do I use XOF (SHAKE and cSHAKE) in openssl CLI and JavaScript?","crypto",10,10,0,0.79,0,0,1,75
"224","https://www.reddit.com/r/crypto/comments/pppu37/promoting_misuseresistance_in_paseto_libraries/","sarciszewski","2021-09-17","Promoting Misuse-Resistance in PASETO Libraries","","crypto",10,10,0,1,0,0,1,24
"225","https://www.reddit.com/r/crypto/comments/pppak6/best_approach_for_requiring_two_keys_to_compute_a/","fromYYZtoSEA","2021-09-17","Best approach for requiring two keys to compute a symmetric key?","I need to build an app that contains data that is encrypted (with AES, but that's irrelevant). The data will be decrypted inside a web browser requiring a combination of two keys:

1. A key that is only known to the user, such as a passphrase (let's call it `Ku`)
2. A key that is stored inside a server and is provided to the browser only after having verified certain credentials (`Ks`)

The problem I'm trying to solve is that no party (user or server) should be able to decrypt the data with only one of the two keys. Only the browser should be allowed to decrypt the key after the user typed a passphrase (which is not sent to the server) and has received the half of the key from the server (after having authenticated themselves).

`Ku` is a passphrase that is user-defined; this is hopefully strong enough (with enough entropy). `Ks` can be generated randomly, and for example be a long-enough string (such as 32 random bytes, possibly encoded as base64).

There are two ideas I am considering and would like your thoughts on them:

1. Use a key that is `KDF(Ku || Ks)`, that is: concatenate the two keys (as simple strings) and then use a KDF to derive a symmetric key. (`Ks` in this case could be base64-encoded - it would still be 256 bit of entropy)
2. Use a (static) ECDH to perform a key agreement. In this case, `Ks` would be the server's private key. `Ku` is the user's private key that is wrapped using a passphrase (that is: the user's passphrase is converted to a key with a KDF, then we use AES-KW as per RFC-3394 to wrap the private EC key).

Thoughts on the above? Or, is there a better option?

(As for KDF, that will likely be Argon2id, but any strong KDF should work)","crypto",11,11,0,1,0,0,1,38
"226","https://www.reddit.com/r/crypto/comments/oph365/hidden_volumes_whats_the_consensus_nowadays/","cryptomann1","2021-07-22","Hidden volumes: what's the consensus nowadays?","I remember being told to not use hidden OS volumes on Veracrypt because it was just dumb unless you are dealing with an computer illiterate. But say some government goes full on communist/nazi and wants your coins. Kicks your door and starts checking for stuff where you could store coins. What do we know?

\-Full disk encryption: They can 5$ wrench your ass or they will be more polite and just put you in jail and throw the key until you decrypt.

\-Full disk encryption with hidden OS: They can easily know there is a hidden volume

\-Hidden volume in a Veracrypt container: Will this do the trick? can do they know you are hiding something?

\-You could always upload to some online service but this opens many additional risks: like they knowing you bought such a service, accessed it, or they going bankrupt/getting bought by your favorite 3 letter agency and exposing your data/any other data loss/hack that's not your fault because you don't control the servers. Also the bad feeling of permanently leaving a copy of your data somewhere else even if encrypted, you never know. Now with digital coins being a thing the incentive to bruteforce on everything is insanely higher compared to in the past. It's like seeking for treasures.

What can be done in terms of plausible deniability these days? people are getting stopped on airports and stuff forced to decrypt and they make dumps of your drives. That's not fun. We need to be 3 steps ahead with these guys.

My conclusion is that full disk encryption is a liability because you either decrypt or you don't.

With volumes, you can hide them. However, forensics have tools which as far as I know can detect a vera hidden volume even if very well hidden inside other files, but at least that's better than a plain ""enter password"" situation by just turning on the computer.

And then if they found the file we have hidden volumes, this could save you assuming it really works and they cannot claim you are hiding something.

So having said that and considering any other possible scenarios, what's the best way to go about this?","crypto",11,11,0,0.79,0,0,1,26
"227","https://www.reddit.com/r/crypto/comments/ojguri/how_to_calculate_ecc_over_a_finite_field/","jedi1026","2021-07-13","How to calculate ECC over a finite field?","I want to calculate the `y` value for the given equation y^(2) = x^(3) \+ 7 (the one that bitcoin uses) over a finite field of 37. given the `x` value i want to find the value of `y`.

As of now i'm doing the following:

1. I calculate x^(3) and then take mod 37 (i don't think it's necessary to take mod 37 in this step as i'm doing the same in the next step)
2. add that to 7 and then take mod 37 again.
3. and then calculating square root of the result.

obviously something's wrong atleast in the 3rd step so can someone help me calculate this over a finite field? and also i've seen that some online calculators skip through some integers and won't allow me to put in that specific number. Why is that? Thank you in advance.","crypto",11,11,0,0.88,1,0,0,24
"228","https://www.reddit.com/r/crypto/comments/ob69sc/thinking_about_it_i_wonder_how_easily_gea2_or/","yuhong","2021-06-30","Thinking about it, I wonder how easily GEA2 or KASUMI can be implemented in a FPGA","For example for a 64-bit brute force attack.","crypto",10,10,0,0.92,0,0,1,17
"229","https://www.reddit.com/r/crypto/comments/o13x02/latticebased_anonymous_credentials/","elaroc","2021-06-16","Lattice-based anonymous credentials","I am currently starting a research work on lattice-based anonymous credentials and i am looking for lattice-based crypto experts to work together. Drop me a message on chat if you are interested.","crypto",10,10,0,0.78,0,0,1,12
"230","https://www.reddit.com/r/crypto/comments/nrcwmw/age_using_ssh_keys_instead_of_native_keys/","xkcd__386","2021-06-03","age using ssh keys instead of native keys","(Note: See update 2 days later, at the end)

The man page says: `This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient.`

I know *in general* ""more complex"" means ""possibly less secure because complexity [etc etc]"".  Is there anything more concrete than that I should worry about if I use `age` with ed25519 ssh keys.

I would prefer not to use native keys because they are unprotected.  In nearly 2 decades of using ssh and nearly 1 of using gpg I don't recall ever having had an unprotected key on disk and I'm not about to start now.

(For those who are going to suggest the hack in https://github.com/FiloSottile/age/issues/86, you lose the ability to decrypt STDIN by using that hack, and decrypting STDIN is very much something I need in my (proposed) workflow).

**Update (2 days later)**: While trying to incorporate age into my scripts, I remembered I already had a script called `kpass` that wraps over `keepassxc` and something called ""Secret Service Integration"", which I was using to supply passwords to `mutt`, `borg`, etc.

`keepassxc` already has all my secrets except ssh keys, so I just added the last line of the age identity file as a *password* to a new entry called `age` in `keepassxc`.  Using `age -d -i &lt;(kpass age)` then does exactly what I need.  This way I can unlock it when I unlock `keepassxc`, and it gets locked either manually, or on a timeout, or on screen lock.

TLDR: `keepassxc` and ""secrets integration"" act like an ""agent"" for age, making the lock/unlock be out of band from the actual decryption operation.","crypto",10,10,0,0.78,0,0,0,24
"231","https://www.reddit.com/r/crypto/comments/mw0pu2/demystifying_aggregatable_distributed_key/","minbunny","2021-04-22","Demystifying Aggregatable Distributed Key Generation (DKG)","","crypto",11,11,0,1,1,0,0,11
"232","https://www.reddit.com/r/crypto/comments/mrkevj/any_underlying_reason_for_similarity_between/","orangejake","2021-04-15","Any underlying reason for similarity between Block Cipher and Neural Network design?","I know the title makes this seem like a fairly crank-y question --- I both have no reason to think there is any fundamental connection, and have been idly wondering this for a while. Note that I do not work with block ciphers often, so feel free to tell me if I am completely off base.

A standard way to build a block cipher is by iterating some round function, which is generally written as some combination of:

1. A linear layer (which provides ""confusion"")
2. A non-linear transformation (which provides ""diffusion"")

I think there is usually an explicit third step here which changes the subkey used for the particular round --- I will ignore this though, as it makes my analogy worse (I think). Anyway, the above round function is iterated enough to get a comfortable security margin --- often if the number of rounds is reduced, there exist attacks.

Neural networks are a well-known technique to achieve universal function approximation. They are generally written by repeating some construction, which is a combination of:

1. A linear layer
2. (fixed) A non-linear ""activation function""

I do not understand this area much, but my impression is that this construction is iterated enough to get a ""good enough"" function approximation.

What I find so odd about these two paradigms are about how ""opposite"" their goals are --- block ciphers are trying to produce functions which are quite far from being ""continuous"" in any sense, while neural networks are being used to approximate arbitrary continuous functions.

Anyway, the question is whether there is any formal connection between the above two design paradigms, or if it is just a coincidence (which seems perfectly plausible).","crypto",11,11,0,0.77,0,0,0,15
"233","https://www.reddit.com/r/crypto/comments/m7sub2/how_secure_is_it_to_take_an_arbitrary_256_bytes/","Jetto_fr","2021-03-18","How secure is it to take an arbitrary 256 bytes secret key for a schnorr like identification protocol ?","I'm thinking of a practical way of get ride of sharing secret with the verifer to be identified.
 
By practical I mean you can easily remember the secret.

The idea would be to take the sha256 of the secret as a secret key, and use group based cryptographic system to convince the vérifier I know it.

Would it work ?","crypto",9,9,0,0.77,0,0,0,13
"234","https://www.reddit.com/r/crypto/comments/subrd3/uniting_the_linux_randomnumber_devices/","atoponce","2022-02-17","Uniting the Linux random-number devices","","crypto",8,8,0,0.91,0,0,0,1
"235","https://www.reddit.com/r/crypto/comments/scbbhx/made_a_sticky_on_rcryptography_want_your_advices/","aidniatpac","2022-01-25","Made a sticky on r/cryptography - want your advices for resources and thoughts on it","This is the sticky which acts as the wiki equivalent of r/crypto. I am sure i must have forgotten important topics and have little resources to advise by myself, so any help for newcomers to cryptography is welcome.

https://www.reddit.com/r/cryptography/comments/scb6pm/information_and_learning_resources_for/","crypto",11,11,0,0.92,0,0,1,0
"236","https://www.reddit.com/r/crypto/comments/s8uasi/representation_of_small_order_points_in_curve25519/","foonoxous","2022-01-20","Representation of small order points in Curve25519","All curve points of Ed25519 (x, y) can be represented in Curve25519 (u, v) using the `u` coordinate and a sign bit, except for the neutral element / point at infinity, which has no representation. For everything else the conversion is `u = (1 + y) / (1 - y)` but for that particular Ed25519 point (0, 1) there is a division by zero.

I note that existing implementations (sodium, monocypher) do not produce any error when this happens, but instead simply return zero because their invert functions return zero, and then anything multiplied by that is zero. `u = 0` however is the point of order 2, and converting that back to Ed25519 yields (0, -1).

So far I have ignored the sign, but inverting the sign of those two small order points has no effect because the x coordinate of both of them is is zero.

Another sensible-looking option for the point at infinity would be `u = -1` which is not a curve point, and which also causes a division by zero on the birational equivalence.

My question is what would be the most appropriate presentation for these two points using the `u` coordinate alone? If both used 0, the sign bit could be used to separate them but this needs a special case in sign handling. If the point at infinity was -1, both points would be unique and the sign doesn't matter.

Is there any way to make the Montgomery ladder (based on sodium/ref10 code, projective coordinates) work with both of these points? I'm observing quite erratic behaviour with the value `u = 0`, while I would expect it to produce the point at infinity for any odd scalar and itself for any even scalar value. Ed25519 scalarmult works fine with these points too, and Montgomery also seems OK with any other point.","crypto",8,8,0,0.8,0,0,1,8
"237","https://www.reddit.com/r/crypto/comments/rfcmq0/success_criteria_of_using_nist_statictical_test/","Suspicious-Net2452","2021-12-13","Success criteria of using NIST statictical test suite with the outputs of TRNGs","Im trying to design a TRNG on FPGA. Im testing my design using NIST statistical test suite downloaded from [https://csrc.nist.gov/CSRC/media/Projects/Random-Bit-Generation/documents/sts-2\_1\_2.zip](https://csrc.nist.gov/CSRC/media/Projects/Random-Bit-Generation/documents/sts-2_1_2.zip)

I generate test vectors containing 5 million bits and test them as 10 bitstreams. I made many different designs and repeated these tests 100 times for each design. When I fail any of the test types in the suite, I consider the test completely unsuccessful. When I evaluate test results in this way, my maximum success rate is 96%, so 96 out of 100 tests are completely successful. Failed tests are generally Non-overlapping template test.

I tried adding Conditioning and used AES and different HASH algorithms for it. Using AES and HASH outputs didn't change the test results either.

Also, the design has passed the IID and AIS31 tests.

My questions:

1- Is this method an accurate way to evaluate whether the design is a bad source? Does a good source have to pass 100% on these tests?

2- Does not being completely successful in these tests indicate that a design is a bad source? If so, is there a rate for it?

3- If AES and HASH outputs fail at the same rate, does it indicate that there may be a bug in the test suite?","crypto",8,8,0,0.8,0,0,2,7
"238","https://www.reddit.com/r/crypto/comments/r5oveh/fheorg_meetup_optical_computing_for_fhe/","randhindi","2021-11-30","FHE.org meetup | Optical computing for FHE","Dear all,

The next [FHE.org](https://FHE.org) meetup will be on December 21st, at 6pm Paris time. Registration is free: [https://www.meetup.com/fhe-org/events/282266103](https://www.meetup.com/fhe-org/events/282266103)

[Optalysis](https://optalysys.com/) will be presenting their work on using optical computing to accelerate FHE.

We will be hosting the meetup on our community discord directly, so you'll be able to participate and chat live with the speaker!

See you there,

Rand","crypto",9,9,0,1,0,0,1,0
"239","https://www.reddit.com/r/crypto/comments/qajjzs/monthly_cryptography_wishlist_thread/","AutoModerator","2021-10-18","Monthly cryptography wishlist thread","This is another installment in a series of monthly recurring cryptography wishlist threads.

The purpose is to let people freely discuss what future developments they like to see in fields related to cryptography, including things like algorithms, cryptanalysis, software and hardware implementations, usable UX, protocols and more.

So start posting what you'd like to see below!","crypto",11,11,0,1,0,0,1,64
"240","https://www.reddit.com/r/crypto/comments/oz2pcn/published_an_implementation_of_cl_signature/","elaroc","2021-08-06","Published an implementation of CL Signature schemes and anonymous credentials on github","I have published an [implementation](https://github.com/ahasikos/CL_Signatures) of the signatures and anonymous credentials schemes of the paper ""[Signature Schemes and Anonymous Credentials from Bilinear Maps](https://link.springer.com/chapter/10.1007/978-3-540-28628-8_4)"".

The code in written in C and it built on top of the [miracl-core](https://github.com/bryk-io/miracl-core) library. There is *some work pending* but for those who are familiar with the scheme it should be straightforward to follow.

Any comments or feedback is appreciated. If anyone wants to contribute feel free to ping me.","crypto",7,7,0,0.83,0,0,1,23
"241","https://www.reddit.com/r/crypto/comments/oqt9eh/what_is_currently_the_most_secure_verifiable/","NCGThompson","2021-07-24","What is currently the most secure Verifiable Delay Function for randomness beacons?","Say an election for US Senator ends in a tie. I want to break the tie, by allowing many parties to contribute randomness to a seed that is run through a VDF to get a winner.

The Senate election requires an extremely high degree of public trust, all while being a high value target for attackers. However, the VDF is a somewhat new technology, and not necessarily deserving of that trust.

Whatif anyVDF algorithm can be trusted to hold against both side channel* and mathematical attacks.

*I see an algorithm as resistant to side channel attacks if I dont have to code it from scratch. If the VDF is based on already implemented primitives, or has been used in production itself, then it would be relatively easy to make an implementation resistant to side channel attacks. I dont trust myself to role my own crypto.","crypto",10,10,0,0.86,0,0,1,32
"242","https://www.reddit.com/r/crypto/comments/onkuye/ehat_to_do_with_aes128_key_of_length_15_ascii/","zulumvar","2021-07-19","Ehat to do with AES-128 key of length 15 ASCII characters?","&amp;#x200B;

I'm trying to decrypt an encrypted h264 I-frame, and I was given the a of length 15 ASCII charchters, is this even valid?

Should not it be of length 16, so the binary representation would be 128 bits?

If it is valid, what is the common practice in such cases? what can I do?","crypto",8,8,0,0.69,1,0,1,19
"243","https://www.reddit.com/r/crypto/comments/od4z9n/using_compromised_algorithms/","in_conexo","2021-07-03","Using compromised algorithms.","I often hear people say that a certain organization has compromised the ECC curve P-384. The idea is not without merit; but, why would they &lt;themselves&gt; use it, if it had a vulnerability?

Considering who they are, and that they have released vulnerabilities in the past; it stands to reason that they hold onto some of them, in order to abuse them. That said, it would be pretty stupid if they didn't secure themselves against these known vulnerabilities (they don't just do intelligence, after all; they also have to help secure &lt;certain&gt; systems).

So I guess the real question is: could a vulnerability in the P-384 curve be countered?","crypto",9,9,0,0.85,0,0,1,23
"244","https://www.reddit.com/r/crypto/comments/ntt15p/where_are_n_and_e_represented_in_the_certificate/","elchucknorris300","2021-06-06","Where are N and e represented in the certificate details for a site using RSA?","When I look at the details for of a certificate using RSA (via my web browser), I'm having trouble understanding how to get e and N out of it.  For example the (~~wikipedia~~) [https://www.bing.com/](https://www.bing.com/) certificate shows:

Public key:  RSA (2048 bits)

30 82 01 0a 02 82 01 01 00 dc 28 2e 3f ee 94 7f 11 af ee ab 3d b1 dd 6b a7 91 a3 f7 82 fd 25 b5 4c 8d ec d4 d9 13 1d c2 05 e1 75 e0 c8 d1 8c 55 bb 47 e5 2b 5b 49 f5 df 1b 3a 56 4e 8a 69 81 3a 5e a3 1e 91 dc f9 df 43 d6 30 c0 43 09 cd bc c5 b2 fb c8 50 ac 42 ac ec e6 99 21 01 f5 a3 0b f2 5f 8e c6 7f 59 f3 b8 b2 06 d8 d5 61 76 8a 96 09 a8 41 00 db f1 b6 16 6c 9e cd 1d 64 af ea 60 e3 f4 6f ed f7 b8 58 9d 95 4c 7e a2 6c 59 40 45 4a b0 2e e5 69 41 a2 9f fe d5 a4 3e fb 62 8a d8 f3 5d a8 07 6d e2 aa 58 f0 b6 d3 4c d5 14 28 87 08 65 6e 61 91 a9 f8 fd 34 8c a9 a5 3f a2 0d 93 1d a8 1c d0 9f 09 a3 bc 3b ee 49 d9 f0 0d b8 38 9c 41 48 14 0f 20 ed 4e 93 94 a9 c6 e7 16 15 60 d1 db 9e e0 9b 00 bc 8a 06 d1 07 d7 5b f3 9b 0c 1e b2 2f a7 2c 33 0b 6a 75 90 f3 9f 79 cf b1 14 50 f1 bd f3 93 94 c1 96 48 c5 02 03 01 00 01

Public key Paramaters:  05 00

Is the first one N and the second one e?  I see 05 00 for a LOT of sites, actually I see that for EVERY site I've looked at that uses RSA.  Any insight on this would be appreciated.","crypto",9,9,0,0.85,0,0,2,15
"245","https://www.reddit.com/r/crypto/comments/nrdpu1/security_of_ntrubased_fheschemes/","3553x","2021-06-03","Security of NTRU-based FHE-Schemes?","So I've been reading that attacks on NTRU-based FHE-schemes were found and that these schemes are no longer used as a result. This can be read up on Wikipedia ([https://en.wikipedia.org/wiki/Homomorphic\_encryption](https://en.wikipedia.org/wiki/Homomorphic_encryption)) and Ilaria Chillotti also mentioned something similar in a talk about TFHE.

However, the Homomorphic Encryption Security Standard ([http://homomorphicencryption.org/wp-content/uploads/2018/11/HomomorphicEncryptionStandardv1.1.pdf](http://homomorphicencryption.org/wp-content/uploads/2018/11/HomomorphicEncryptionStandardv1.1.pdf)) lists NTRU-based FHE schemes YASHE and LTV. 

This makes me wonder, why would the standard include these schemes if they were broken? The attacks were published in 2016 if I'm not mistaken and the standard is from 2018. Are there mitigations in place for these attacks or how could this be explained?","crypto",9,9,0,0.85,0,0,1,11
"246","https://www.reddit.com/r/crypto/comments/nmkmt0/diffie_hellman_key_exchange_rendered_key_size/","D1CCP","2021-05-27","Diffie Hellman Key Exchange - Rendered Key size","I have a foundational understanding of how the key exchange works, i.e., Alice' Private Key + Bob's Public Key = Bob's Private Key + Alice Public Key 

Both private/public keys are usually very large -- 2048 bit, 3072 bit, etc but yet in symmetric keys are much smaller -- 128 bit, 160 bit, 256 bit etc. 

**What I don't fully understand:** what is the process of combining Alice' Private Key + Bob's Public Key to produce that resulting symmetric key? Is it simply multiplying Alice' Private Key with Bob's Public Key? If so, wouldn't the resulting symmetric key be much larger (bit size) than the private or public keys themselves? Wouldnt it be 2048 bit x 2048 bit? What am I missing?","crypto",10,10,0,0.82,0,0,0,19
"247","https://www.reddit.com/r/crypto/comments/nev54m/using_a_password_to_derive_a_secret_key_to_use/","Drownt","2021-05-17","Using a password to derive a secret key to use with AES encryption of text","I am working on creating a program that prompts the user for a password input, derives a key from that password, then uses the key with AES to encrypt whatever text. I was thinking about using PBKDF2 to derive the secret key from the password.

From what I understand, PBKDF2 takes 5 main inputs: hash function, password, salt, # of iterations, and key length. Further, AES takes 3 main inputs: key, IV, and text.

Ideally, to decrypt the text, the user would input their password and PBKDF2 would derive the secret key and AES would try to decrypt it; if it is successfully decrypted and coherent then yay, but if it is a jumble or random crap then it didn't work.

So my question is if there is a way to only require a password (and not the salt, # of iterations, or IV) and be able to securely encrypt and decrypt text? Is there a way that the salt, # of iterations, and IV can be stored somewhere secure? Like possibly in the cipher text, then the program could fetch those variables from the cipher text and use them along with the password to decrypt?

I'm not not new to programming, but I am to cryptography and encryption. So please correct me if I have any understanding of PBKDF2 or AES wrong or if there is an easier/simpler way to go about this.","crypto",8,8,0,0.8,0,0,0,14
"248","https://www.reddit.com/r/crypto/comments/nbjq71/chachapoly_from_command_line/","chaplin2","2021-05-13","ChaCha-Poly from command line","I am looking for a Linux command line tool to encrypt files with a symmetric key and with authentication using ChaCha20-Poly1305.

Does anyone know a good program?","crypto",7,7,0,0.78,1,0,0,28
"249","https://www.reddit.com/r/crypto/comments/ml8n71/provably_secure_ciphers/","Z5DK9","2021-04-06","Provably secure ciphers","Hi,

Are there provably secure ciphers besides One-Time Pad? According to the internet, AES is not.

Thanks.","crypto",9,9,0,0.78,0,0,0,58
"250","https://www.reddit.com/r/crypto/comments/mkpa8k/naked_public_keys_over_tls/","emasculine","2021-04-05","Naked public keys over TLS?","I understand that there is the ability to use naked public keys (ie, without a certificate) with TLS. I know you could spoof this with a self-signed certificate, but i'd like to use them directly. 

Does anybody know like the section of the RFC, or maybe how they are described? I'm having trouble googling for it because it is positive that i much be thinking certs when I'm not.","crypto",10,10,0,1,0,0,0,19
"251","https://www.reddit.com/r/crypto/comments/mjwi21/any_symmetric_crypt_function_that_doesnt_error/","sniperganso","2021-04-04","any symmetric crypt function that doesn't error out on failed decrypt?","Hello!

so I had this idea of encrypting some of my files and storing them publicly online in case I lose my devices, but I have this belief that anything that can be downloaded and brute-force tested locally without a rate limiter can be cracked (especially with today's GPU farms) today in acceptable time (or will not too far into the future).

So I started thinking that one thing that makes it easy is that the attacker knows when it fails. Consider the following: If I encrypt a file multiple times with different passwords, and when the attackers tries to brute-force break it, if the algorithm doesn't tell the attacker that the password is wrong and produces garbage instead, how would the attacker know that the password was wrong, or that they would need to further decrypt the file? The possibilities seem close to infinite.

So I tried GPG, AES-256 and Fernet so far, all of them error out saying the key is incorrect. I am new to cryptography and not familiar with this at all so I'd like to ask: is there is any good function out there that doesn't error out and proceed to produce a ""decrypted"" result with an incorrect key.

I know I could use something like base64 encoding but that is super easy on CPU, and I don't want to code something super complex myself or else I would also need to store that online publicly to retrieve if my devices are lost.

Any ideas?","crypto",9,9,0,0.74,0,0,0,20
"252","https://www.reddit.com/r/crypto/comments/m28bjy/starting_out_with_a_healthy_amount_of_math/","[deleted]","2021-03-10","Starting out with a healthy amount of math knowledge","Hey everybody,

Im currently a sophomore in college. Im currently taking graduate(?) level algebra courses (its at a higher level than the typical undergrad algebra but truthfully I dont know what level it is) and Ive taken the standard undergraduate analysis and differential equations classes. I have a very limited capacity in coding. I can do all the standard python graph theory and regression packages but thats the only intermediate coding I can do. I cannot evaluate my C++ abilities so Ill just assume its wide ranging but lacks depth. I also know some information theory(data compression, source coding, etc.) and a good deal of physics(I think only thermodynamics/stat mech would be relevant but correct me if Im wrong). So where can I start learning about cryptography with a rigor that corresponds to information I listed? Im not entirely sure the relevancy of the other information I listed but I put it in there just in case it helps. Also if quantum cryptography is a thing, where do I start learning about that? I should note that in one of my UG algebra courses we briefly covered RSA encryption. Sorry for being all over the place.","crypto",10,10,0,1,1,0,0,10
"253","https://www.reddit.com/r/crypto/comments/t4xuui/what_exactly_do_you_send_to_a_certificate/","XiPingTing","2022-03-02","What exactly do you send to a certificate authority?","I want to send a certificate signing request to a certificate authority manually. The goal is a standalone HTTPS server microcontroller.

I have my CSR PEM file and the associated private key.

Do I connect to letsencrypt.com? What port should I connect on? Do I just send the PEM raw over TCP and rely on its built-in framing? Or do I convert to x509 and send an HTTP post request? Do I need to bother encrypting the channel with TLS? If so, how does a certificate authority prove they are a certificate authority to me?","crypto",7,7,0,0.82,0,0,1,4
"254","https://www.reddit.com/r/crypto/comments/t3d18i/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-02-28","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",6,6,0,0.81,0,0,1,2
"255","https://www.reddit.com/r/crypto/comments/suk2k7/is_chacha20poly1305_quantumsecure/","XiPingTing","2022-02-17","Is ChaCha20-Poly1305 quantum-secure?","Symmetric ciphers tend not to have quantum-computer specific vulnerabilities. ChachaPoly is designed so differently to the AES based ciphers its hard to eyeball and convince myself its quantum secure. Lots of huge numbers get multiplied modulo other large numbers so my hunch is no.

Rather than musing, can someone point me to a source/proof?","crypto",8,8,0,1,0,0,0,19
"256","https://www.reddit.com/r/crypto/comments/ru9t4u/kickstop_the_blind_ego_blindeagle_writeup_from/","sn0wm0nster","2022-01-02","Kickstop the Blind Ego (BlindEagle writeup from 2016)","","crypto",8,8,0,0.79,0,0,1,0
"257","https://www.reddit.com/r/crypto/comments/qudqcy/im_looking_for_some_noob_info_on_decrypting_a/","Yyoud0dis","2021-11-15","I'm looking for some noob info on decrypting a message(s) and need to show proof that message is indeed the decrypted output from that encrypted message in question","&lt;SOLVED&gt;I apologize ahead of time. I'm sure what I'm asking is probably very rudimentary beginner level stuff. I am unaware of terminology So ill just explain my situation and hopefully someone will know what I'm asking ...

So I'm a having a dispute on a website where there  is buyer accounts and seller accounts. all messages within the website are PGP encrypted by default(you upload your PGP key to your profile)  so message content wouldn't be viewable by website staff. only that a message is sent.

I have a dispute with another member and I have to prove my account of things to website staff to decide on who is right . .. I am in the right however I have to show which specific  PGP messages decrypt from an encrypted message .. in other words , I have to prove a specific decrypted text is the result of decrypting an encrypted message, that was encrypted with my public key. . So i have no problem decrypting i just don't know what the function is called or how to use it to show proof its the message in question

BTW I use gpg4win /kleopatra for PGP . on a windows 10 machine and understand the basics of sending and receiving and key management . just don't know this :P

any responses are welcome and appreciated .. I'm sure its a simple thing so plz don't rip me apart for not knowing it yet. i am a beginner to this stuff&lt;SOLVED&gt;","crypto",7,7,0,0.71,0,0,1,105
"258","https://www.reddit.com/r/crypto/comments/qjez1p/check_out_this_dumbfuck_key_exchange_i_just_came/","godelbrot","2021-10-31","Check out this dumb-fuck key exchange I just came up with","Motivation for this was studying quantum secure hash-based key exchanges like [Merkle Puzzles](https://www.youtube.com/watch?v=ervCGjLQODw) or the colossally stupid yet strangely brilliant [""Birthday Exchange""](https://burtleburtle.net/bob/crypto/exchange.html). I wanted to try to come up with something like this but where you didn't need to store petabytes worth of data for a single public key or exert a gigantic amount of computational resources to create a quantum secure ""Merkle Key"". 

The Puzzle scheme involves an ass-backwards Merkle Tree and something that I am calling a ""Semi-Symmetric"" encryption scheme (which afaik does not currently exist) that gives these properties:

- The Tree is generated deterministically ""upside down"" from the root to an infinity of leaves using a Keyed ""Semi-Symmetric"" Hash function along the lines of AES. (anyone who knows the root and the key could generate the complete tree given infinite computation). This root hash + the hash key is the Public Key equivalent. 

- Each child in the Tree deterministically infers one of two possible parents depending on whether it is the right-most or left-most child.

- The Hash Function takes a Private Key for each Tree Root + Hash Key it is used for, that has the property that it allows one to be able to tell by looking at any isolated child in the tree whether it is a right-child or a left-child of it's parent, and if one does not possess this Private Key it is impossible to do better than guess. 

-----

**The ""key exchange"" would go like this:**

- Alice wants to send a secret message to Bob

- She finds his Public Key (Root Hash + Hash Key)

- She randomly generates a (very long) path down from The Root Hash down to a particular ""Deep Child"" in the Tree. How ""deep"" she goes depends on how secure she wants the message to be. One would want to go deep enough into the tree FAR beyond what any adversary would feasibly be able to store for standard lookup queries. 

- The path she chose from Root to this ""Deep Child"" encodes the secret key that Alice and Bob can use in a Symmetric Crypto system. 

- Alice encrypts her secret message using this key, then sends the message and her ""Deep Child"" to Bob. 

- Bob then takes the ""Deep Child"" and using his Private Key is able to determine whether it is a right-child or a left-child, generates it's parent, is able to determine whether that parent is a right-child or a left-child, etc. until he reaches all the way back up the tree to the root. Bob now knows the path of the ""Deep Child"" and so now knows the secret key Alice chose.

-----

I like this idea of ""Semi-Symmetric"" crypto where it's like literally the bare minimum of what you need a Private Key for. I wonder if you could construct such a thing out of a non-algebraic keyed hash function like AES.

I also wonder that if even you CAN'T construct such a ""Semi-Symmetric"" crypto scheme without resorting to algebra, that you could construct a system where it kind of doesn't matter that a QC can grind it, the scheme so favors classical computers that they will always be able to keep security via obscurity by just going crazy deep into the tree far beyond what anyone could store to search or grind.","crypto",8,8,0,0.75,0,0,1,79
"259","https://www.reddit.com/r/crypto/comments/qb6fmf/cracking_random_number_generators_using_machine/","Soatok","2021-10-19","Cracking Random Number Generators using Machine Learning  Part 1: xorshift128","","crypto",8,8,0,0.67,0,0,1,61
"260","https://www.reddit.com/r/crypto/comments/plt2ib/how_does_web_of_trust_work/","AtropineTearz","2021-09-10","How Does Web of Trust Work?","How does Web of Trust, the PKI, work when signing other peoples certificates.

If I sign someone elses PGP Key, where is that information stored and how?","crypto",7,7,0,0.78,0,0,1,36
"261","https://www.reddit.com/r/crypto/comments/pezowx/how_to_use_hash_function/","sweetFLUFFYpanda","2021-08-31","How to Use Hash Function ?","Hello Everyone, The professor told us during our class  that we cannot use hash function to send confidential information to othe user. 

Eg: Alice wants to send a movie to Bob. 

Professor says She cannot Send the hash of the movie name along with the Encrypted File of the Movie., This is a bad practice and the invader spying on the network and easily get the hash and know the name of the movie. 

Where as I believe if I send the hash result of the Hash(name of the movie ) along with the Movie in encrypted format it should be sufficient enough. Hash function will help the Bob to verify the authenticity of the Movie he is decrypting.

I am still learning, can anyone help me whether the hash function is suitable in this case to protect the confidentiality of the movie and how ?","crypto",10,10,0,0.69,0,0,1,34
"262","https://www.reddit.com/r/crypto/comments/pa9499/reinforced_concrete_fast_hash_function_for_zero/","biketourthrowaway","2021-08-23","Reinforced Concrete: Fast Hash Function for Zero Knowledge Proofs and Verifiable Computation","Hi /r/crypto community,

A project I follow that is working towards a natively private ZK smart contract platform just released a paper on a new cryptographic hash function they claim is going massively reduce the computational requirements (or so I understand, I am very much a layman when it comes to this kind of stuff). Very curious to get some opinions on it from a more well informed community.

AbstractWe propose a new hash function Reinforced Concrete for the proof systems that support lookup tables, concretely Plookup based on KZG commitments or FRI. It has two solid advantages over predecessors: (a) Table lookups instead of (big) modular reductions are much faster both in ZK and plain computations thus making verifiable computation protocols based on recursive proofs (current trend) much more efficient; (b) the security is no longer solely based on (high) algebraic degree but rather on more traditional AES-like components inheriting decades of public scrutiny. Our design also employs a novel and fast field-to-tables conversion, which is of independent interest and can be used in other Plookup-friendly constructions. The new hash function is suitable for a wide range of applications like privacy-preserving cryptocurrencies, verifiable encryption, protocols with state membership proofs, or verifiable computation. It may serve as a drop-in replacement for various prime-field hashes such as variants of MiMC, Poseidon, Pedersen hash, and others.

Research paper: https://drive.google.com/file/d/1MCIqD8XwKrHVBQPc26XjAmM9RyrLDpjw/view

Blog post: https://dusk.network/news/reinforced-concrete-paper-release","crypto",9,9,0,0.92,0,0,1,27
"263","https://www.reddit.com/r/crypto/comments/pa8mhs/how_to_do_e2ee_in_the_browser_correctly_if_even/","TheThirtyFive","2021-08-23","How to do E2EE in the Browser correctly if even possible?","Hi Guys,

My first Post on here! Been reading for a few Days and decided to join and just drop my Question.

Currently a few Pals of mine and me are creating an App and the next Feature will be an Chat. We would like the Chat to be End-to-End Encrypted. I've looked into the Problem and often saw that E2EE (or Encryption in general) using JS in the Browser is often discouraged.

We're building our App for Three Platforms: Web, iOS and Android. The Bundle for the Web will be served by an Server, the Bundle for iOS and Android is in the IPA / APK directly and will be loaded in a WebView there. So the most feasible Attack-Target would be the Web-App because this could most easily be tampered with.

In my first Tests are generating an ECDH Key-Pair with a P-256 Curve, deriving the Key using the respective Public and Private Keys to an AES-GCM Key and then En-/Decrypting with AES-GCM. (I hope how I articulated it makes sense to you Guys. Noob here!)

What I would like to know is:

1. Why is Encryption in the Browser Insecure? (I already read about AES-GCM and it's caveats, but the Browser part interests me. I read [this](https://github.com/PeculiarVentures/2key-ratchet/blob/master/DIFFERENCES.md) post about AES-GCM)
2. Is safe E2EE in our Architecture even possible?
3. If yes: How could I make it as secure as possible without changing much about the Platforms (using Web, iOS and Android and not cutting Web)

Bonus:

I found a Library ([2key-ratchet](https://github.com/PeculiarVentures/2key-ratchet)) which claims to have implemented the ""Double Ratchet"" protocol and X3DH in Typescript. Due to the [Differences](https://github.com/PeculiarVentures/2key-ratchet/blob/master/DIFFERENCES.md) stated in the Repo: Is this a good Replacement for my Testing ""Stack""?

Thanks in Advance!

(To 3. : I don't want a Step for Step Explanation, just a Hint in a better/right direction. I started a few Weeks ago with Encryption and Crypto in general and haven't had this much fun coding in years!)","crypto",7,7,0,0.82,0,0,1,28
"264","https://www.reddit.com/r/crypto/comments/oqxtzd/trending_topics_in_crypto/","thefrenchunderground","2021-07-24","Trending topics in Crypto","[This is sort of a crosspost - some changes were made]

I am still missing delivering my Thesis in order to finish my MSc in InfoSec and I am striving to find the right topic.

I would like opinions on trending (or future trending) topics regarding crypto, in particular crypto vulnerabilities related-stuff.

FWIW working full-time in InfoSec (mainly vulnerability management of all sorts, specially websites) and have a Maths background.

Thanks in advance.","crypto",7,7,0,0.82,0,0,1,30
"265","https://www.reddit.com/r/crypto/comments/oq54jy/paserk_platformagnostic_serialized_keys_paseto/","paragon_init","2021-07-23","PASERK: Platform-Agnostic Serialized Keys (PASETO extension)","","crypto",6,6,0,0.81,0,0,1,15
"266","https://www.reddit.com/r/crypto/comments/okymq4/zastream_az_ciphers_inspired_by_estream_finalists/","nheka","2021-07-15","ZaStream - AZ ciphers inspired by Estream finalists","While reading over the Estream cipher finalists.  I decided to create AZ ciphers inspired from the those constructions.  I thought I'd share the project.

[https://github.com/pvial00/ZaStream](https://github.com/pvial00/ZaStream)

&amp;#x200B;

See also, ZaCastle for other stream and block ciphers.

[https://github.com/pvial00/ZaCastle](https://github.com/pvial00/ZaCastle)","crypto",8,8,0,0.75,0,0,0,15
"267","https://www.reddit.com/r/crypto/comments/oj6yps/is_this_right_for_me/","mathgeekf314159","2021-07-13","Is this right for me?","I got my master's degree in mathematics recently and I have been on a job hunt. Mostly in data analysis which maybe is not entirely for me. People like that are naturally curious about the connections between the data which I have tried forcing myself to care about but I don't. It seemed like a natural progression but maybe it isn't. I started thinking back to what exactly interested me about it and well what did was the actual coding aspect of it and trying to figure out the code like a puzzle. This is what got me thinking about cryptography. How should I go about trying to learn how to do this. What resources will employers take seriously?","crypto",8,8,0,0.9,1,0,0,22
"268","https://www.reddit.com/r/crypto/comments/obe8iq/bulletproof_tls_newsletter_issue_78/","knotdjb","2021-07-01","Bulletproof TLS Newsletter Issue #78","","crypto",8,8,0,0.8,0,0,1,20
"269","https://www.reddit.com/r/crypto/comments/oaijup/is_it_possible_to_use_the_hashing_function_eg/","hearues_zueke_reddit","2021-06-29","Is it possible to use the hashing function e.g. SHA512 with the OFB mode and a nonce IV and a key K with e.g. 512 bits as an en/decryption algorithm?","I have thought about an algorithm where the en/decrypting is done by a hashing algorithm (e.g. SHA512 in this case).

You can see below from the image my attempt of an OFB block cipher mode.

All the variables \[;IV, K, P\_i, C\_i \\in \\\[0; 255\\\]\^{64};\] (or in other words, all variables are 512 bits or 64 bytes) are defined as:

* \[;IV;\]: Initial vector or starting nonce. 
* \[;K;\]: Key.
* \[;P\_i;\]: Plaintext.
* \[;C\_i;\]: Ciphertext.

&amp;#x200B;

[I would call this the 'SHA512 OFB algorithm'](https://preview.redd.it/1abz8bsi0a871.png?width=998&amp;format=png&amp;auto=webp&amp;s=2c833a50ff5300f2c67dd8ca4d3de512d22cb02e)

Would this be a good idea to use it in real applications? Which attacks would be possible to use on the algorithms? If there is already a similar thing, though, please inform me too.

These are only my thoughts and I wanted to share it with you. Sorry for my grammar and spelling mistakes too.","crypto",8,8,0,0.76,0,0,1,21
"270","https://www.reddit.com/r/crypto/comments/ntx6t6/can_a_checksum_inside_a_encrypted_file_be_used_to/","Sheetalry","2021-06-06","Can a checksum inside a encrypted file be used to decrypt an encrypted file?","As title says, I made an encrypted veracrypt container. I save a sensitive file there along with its corresponding sha256 checksum so I can ensure my sensitive file isn't corrupted or so.

That said, can the checksum inside it be a vulnerability?

My layers of encryption:

AES-SHA512 Outer container, 

Inside the Outer container,  AES(twofish-serpent)-SHA512 inner container

Inside the Inner container = the sensitive file +  its checksum

&amp;#x200B;","crypto",7,7,0,0.9,0,0,2,33
"271","https://www.reddit.com/r/crypto/comments/nbzdoo/ristretto255_for_the_php_community/","paragon_init","2021-05-14","Ristretto255 for the PHP Community","","crypto",8,8,0,1,0,0,0,16
"272","https://www.reddit.com/r/crypto/comments/n79m8h/hd_wallet_keys_and_seed_derivation/","asuds","2021-05-07","HD Wallet keys and seed derivation","(crypto bo currency question)

Is it possible to generate the seed/recovery phrase for a subkey created from a hierarchical deterministic master key (ie like bio 32/39)?

ie can i produce a seed for a hd subkey from that private subkey *or* is the seed to private key a one way function?","crypto",9,9,0,1,0,0,0,16
"273","https://www.reddit.com/r/crypto/comments/n4392z/what_happens_to_the_original_padding_in_a_sha2/","hangonreddit","2021-05-03","What happens to the original padding in a SHA2 Length Extension attack?","The way I understand it is that because the output of SHA2 is just a copy of its final internal state, which is computed with the secret, the message, and the padding as the input, it is possible to use the signature as the internal state for the next iteration and use that to extend the message by simply appending a new message and a new padding to secret||original message||original padding. This all makes sense to me.

What I cant figure out is when the server/victim receives the extended message and verifies it, wouldnt the original padding still be inside of the new extended message? The server will think the new extended message verifies but when it goes to read it, there would suddenly be a 1 followed by 0s and a length in the middle between the original and the extension. Wouldnt that not look suspicious or break some deserializers?

Thanks in advance.","crypto",8,8,0,0.85,0,0,0,11
"274","https://www.reddit.com/r/crypto/comments/n20wtn/what_do_i_study_to_be_able_to_understand_more/","MrClottom","2021-04-30","What do I study to be able to understand more cryptography (Bachelor) ?","(TL;DR below)

Quick context I'm a high school student weeks away from his finals. I'm extremely interested in computer science and  cryptography and was wondering what I should study.

I've looked at courses at my local universities but they don't seem to provide any courses specifically on cryptography or cryptosystems. They do offer degrees in mathematics, informatics or a combination of both. I'm personally also interested in business and there's degrees which are a combination of that and maths or informatics.

What kind of degree or courses would you recommend to someone who wants to learn cryptography? What books, video series or other materials could I use to supplement my studies for a more crypto-centric focus. Also what sub topics should I focus on in maths or informatics for crypto?

I already know how to program and some decent computer science, I've also been developing software professionally as a part time job for a while now. I also know there are a lot of good resources online to learn more in-depth computer science so I don't necessarily need or want to study informatics.

Would appreciate your thoughts and recommendations, thanks!

**TL;DR**

Want to learn crypto what should I study (for my Bachelor)? What books should I read to get an in depth knowledge about cryptosystems and their implementation?","crypto",9,9,0,1,0,0,0,18
"275","https://www.reddit.com/r/crypto/comments/mvd156/do_i_really_need_to_understand_the_inner_workings/","i_iz_noob_bruh","2021-04-21","Do I really need to understand the inner workings of cryptographic algorithms?","Hi

I did some cryptography with python and realized I don't need to code things from scratch like in C, this makes my life much easier but \*am I still going to be a good cryptographer\* if I don't understand the inner workings of ""converting hex to base64""?

I know that both hex and base64 are not cryptographic algorithms, they are encodings but implementing them in C is where things really shake, I have read a few blogs and it's way too complicated.   
In python all we need to do is to use `bytes.fromhex()` and `base64` module to get things done but doing so hides the inner workings of these conversions from the users. 

I also play capture the flag competitions and mostly people aren't asked to explain things, you are just asked to give results. So, if I want to become really good at crypt-analysis, should I do things in C and get really deep with mathematics or just continue with python?","crypto",8,8,0,0.9,0,0,0,29
"276","https://www.reddit.com/r/crypto/comments/muqq37/how_secure_are_zip_files/","[deleted]","2021-04-20","How secure are zip files?","If I compress some confidential files into a zip file, add a strong password and include a Keyfile, how secure is it going to be if I upload it to Google Drive? Can it still be hacked?","crypto",8,8,0,0.76,0,0,0,17
"277","https://www.reddit.com/r/crypto/comments/ml5ptu/zeroknowledge_reencryption_or_homomorphic/","advanderveer","2021-04-06","Zero-knowledge re-encryption or homomorphic re-encryption","I wondered if there exists a scheme that allows the storer of an encrypted piece of information to re-encrypt that information for a different (symmetric/public) key without revealing the information to themselves.

I've searched around in the zore-knowledge domain and around homomorphic encryption but I haven't been able to find anything. Maybe there is a fundamental reason that something like this would not be possible, or maybe i'me using the wrong search terms? Homomorphic XOR seems possible: [https://asecuritysite.com/encryption/hom\_xor](https://asecuritysite.com/encryption/hom_xor) but I haven't studied this scheme in detail yet.

Any pointers in the right direction would really help me out!","crypto",9,9,0,1,0,0,0,9
"278","https://www.reddit.com/r/crypto/comments/mjrp7z/decrypt_ts_file_aes128/","Spedwards","2021-04-04","Decrypt .ts file (AES-128)","I have downloaded a series of ts files along with a .key and .m3u8 file. I would like to decrypt the streams so I can join and watch the file, however I have little experience in cryptography and would like some guidance.

.m3u8:
```
#EXTM3U
#EXT-X-VERSION:3
#EXT-X-TARGETDURATION:10
#EXT-X-MEDIA-SEQUENCE:0
#EXT-X-KEY:METHOD=AES-128,URI=""480.key"",IV=0x598304c38661d98932022263d5cc2528
#EXTINF:10.000000,
480_00000.ts
#EXTINF:10.000000,
480_00001.ts
...
```

.key:
```
=!.µ""ýÿwkaJo vR
```

Is someone able to walk me through the steps to decrypt my files? Thanks.","crypto",8,8,0,0.67,0,0,0,7
"279","https://www.reddit.com/r/crypto/comments/m22mrr/meetup_understanding_the_tfhe_homomorphic/","randhindi","2021-03-10","[meetup] Understanding the TFHE homomorphic encryption scheme","","crypto",9,9,0,0.92,0,0,0,1
"280","https://www.reddit.com/r/crypto/comments/sptnmf/video_19m_post_quantum_cryptography_the_finalists/","kun1z","2022-02-11","[Video 19m] Post Quantum Cryptography: The Finalists (Bill Buchanan, OBE)","","crypto",6,6,0,0.88,0,0,0,1
"281","https://www.reddit.com/r/crypto/comments/skm9vx/could_we_avoid_trusting_certificate_authorities/","XiPingTing","2022-02-04","Could we avoid trusting Certificate Authorities as follows","I've just written an HTTPS server from scratch. We all just agree that certificate authorities are the good guys. They have access to private keys that let them impersonate our servers and that's unavoidable and okay.

How about the following small infrastructural change: when registering a domain, you provide DNS with a public key that people anywhere on the internet can lookup and cache.

Then any time a certificate authority provides you a new CertificateChain-PrivateKey pair, you sign your own certificate containing your 'DNS public key' with that private key and add it to the chain.

Clients can then cache public keys just like they cache DNS entries. An *attacking certificate authority* would then also need to attack the DNS server network and hope no client observing a forged CA certificate had the real server public key cached.

&amp;#x200B;

There's also this feeling that 'attacks from certificate authorities are incredibly implausible.' This is survivorship bias because, with the way CAs currently work there's nothing observable about their attacks in the first place.","crypto",7,7,0,0.77,0,0,1,7
"282","https://www.reddit.com/r/crypto/comments/qzunjc/word_compression_idea/","Jstodd_","2021-11-22","Word compression idea","So I had this idea for a word compression algorithm, and it benefits from words being low entropy. So basically I'd take the 4001 most common English words and phrases (with a trailing space) plus the 95 QWERTY keyboard characters for a combined 4096 (2^12) binary strings, and each word then becomes 12 bits long, as opposed to each letter in each word being at least that if not double that.

Assuming via UTF-8 that each keyboard character is currently 8 bits, I'm imagining this (don't forget to add 1 for the trailing space):

- 1 character:     150% the size

- 2 letter words: 75% the size

- 3 letter words: 50% the size

- 4 letter words: 38% the size

- 5 letter words: 30% the size

- 6 letter words: 25% the size

- 7 letter words: 21% the size

- 8 letter words: 19% the size

...etc...


My question is, has this ever been tried before? And how useful do you think it would be to, say, zipping a file?","crypto",7,7,0,0.89,0,0,1,90
"283","https://www.reddit.com/r/crypto/comments/pvs3eb/constant_time_scalar_mult/","anonXMR","2021-09-26","Constant time scalar mult","Im wondering why we worry about constant time scalar multiplication. I get its to not leak the key metadata. 

At the same time, if you have access to the machine which is performing scalar mult to find a public key, with by definition the unprotected private key/scalar, then surely you can just dump memory anyway. 


Why is everyone so interested in constant time mult?","crypto",6,6,0,0.72,0,0,1,52
"284","https://www.reddit.com/r/crypto/comments/pv95bc/mental_key_derivation_is_it_feasible_at_all/","jmw74","2021-09-25","Mental Key Derivation - is it feasible at all?","I'm trying to come up with a method of using a single memorizable secret and being able to derive other secrets from it, without ever having to enter the original secret into a computer (or any information that could be used to derive the original secret). The idea is that a) compromising all my machines would still not be sufficient to get my ""root"" secret and b) if all my derived secrets are compromised there is nothing in them that ties them together (no proof they are all derived from one secret and hence belong to one person), and certainly nothing that allows the attacker to derive the root secret.

Something like this looks promising: https://en.wikipedia.org/wiki/Solitaire_%28cipher%29#Keystream_algorithm 

However another approach might be a mental blinding method. Blind the secret mentally, derive on a computer, then unblind mentally. That would also allow the use of computationally intensive (slow) kdf and less to memorize. This sort of blind derivation is described here: https://blog.ethereum.org/2014/10/23/information-theoretic-account-secure-brainwallets/ however I don't know how hard it is to do the EC math mentally, probably too difficult compared to shuffling cards.

Are there any other existing algos that might work here?","crypto",7,7,0,0.77,0,0,1,84
"285","https://www.reddit.com/r/crypto/comments/plo2iw/running_numpy_programs_homomoprhically_fheorg/","randhindi","2021-09-10","Running Numpy programs homomoprhically | FHE.org meetup","The next FHE.org meetup will be on Sept 30th at 6pm Paris time

The team at [Zama](https://zama.ai) will present a homomorphic Numpy compiler, and do a live demo of a homomorphic RNN.

To attend: https://www.meetup.com/fhe-org/events/280689265/ 

See you there!","crypto",6,6,0,0.88,0,0,1,27
"286","https://www.reddit.com/r/crypto/comments/pgg7e4/cryfs_default_aes256gcm_vs_osx_aes256/","barcef","2021-09-02","CRYFS Default aes-256-gcm vs OSX AES-256","I currently have an OSX Encrypted SparseImage for all important family documents(Passport scans, etc) on my MACBOOK as we travel abroad or even if it gets stolen from home. Sparse Images are not very compatible with cloud storage and will often corrupt if they have to be backup through a cloud storage provider like DROPBOX or GDRIVE. I've been seeking an alternative and came upon CRYFS. Is this a secure, feasible alternative to my security needs?","crypto",7,7,0,0.89,0,0,1,20
"287","https://www.reddit.com/r/crypto/comments/oaeh4m/free_applied_cryptanalysis_course_videos/","forgottenlance","2021-06-29","Free Applied Cryptanalysis Course Videos","**Applied Cryptanalysis** Course (Youtube Playlist) [https://www.youtube.com/watch?v=IqKzVBePWTY&amp;list=PLUoixF7agmIsBOylKBgW4Z20fQOqgdpbm](https://www.youtube.com/watch?v=IqKzVBePWTY&amp;list=PLUoixF7agmIsBOylKBgW4Z20fQOqgdpbm)

**Videos:**

1 Colossus Computer [https://youtu.be/IqKzVBePWTY](https://youtu.be/IqKzVBePWTY)  
2 Introduction [https://youtu.be/mXcFm8eEHSc](https://youtu.be/mXcFm8eEHSc)  
3 Frequency Analysis [https://youtu.be/opqgXvGsk6U](https://youtu.be/opqgXvGsk6U)  
4 Cryptanalysis of Enigma [https://youtu.be/fKNPN1oTqSA](https://youtu.be/fKNPN1oTqSA)  
5 Exhaustive Search [https://youtu.be/rK7hn-gtJls](https://youtu.be/rK7hn-gtJls)  
6 Big O Notation [https://youtu.be/1yZfRNho88w](https://youtu.be/1yZfRNho88w)  
7 PRESENT Block Cipher [https://youtu.be/tLa0IBpOE\_I](https://youtu.be/tLa0IBpOE_I)  
8 CAESAR Competition and ASCON [https://youtu.be/-vCmHlMHhe0](https://youtu.be/-vCmHlMHhe0)  
9 Implementation of ASCON in C [https://youtu.be/RWiH\_6UwzzY](https://youtu.be/RWiH_6UwzzY)  
10 Cryptographic Algorithm Implementation Techniques [https://youtu.be/ZTXFaHdcg7g](https://youtu.be/ZTXFaHdcg7g)  
11 Probability Theory [https://youtu.be/jbmxWszA7zk](https://youtu.be/jbmxWszA7zk)  
12 Independence of Trials [https://youtu.be/z4vOzoPh2Rs](https://youtu.be/z4vOzoPh2Rs)  
13 Random Variables [https://youtu.be/\_s\_PXHr1B-8](https://youtu.be/_s_PXHr1B-8)  
14 Binomial Distribution [https://youtu.be/OuvxLB1x0vA](https://youtu.be/OuvxLB1x0vA)  
15 Attack Types [https://youtu.be/z-iK\_uQ7URc](https://youtu.be/z-iK_uQ7URc)  
16 Generic Attacks [https://youtu.be/Jm7ZdbeW\_xY](https://youtu.be/Jm7ZdbeW_xY)  
17 Non-Generic Attacks [https://youtu.be/yHiXZyaFasY](https://youtu.be/yHiXZyaFasY)  
18 Differential Cryptanalysis [https://youtu.be/XxsyYnjsE44](https://youtu.be/XxsyYnjsE44)  
19 Experimentally Verifying a Theoretical Distinguisher [https://youtu.be/9dvsz1lUFoE](https://youtu.be/9dvsz1lUFoE)  
20 False Alarm and Non-detection Probabilities [https://youtu.be/KyHVYIhZ6sw](https://youtu.be/KyHVYIhZ6sw)  
21 Differential Cryptanalysis of PRESENT Cipher [https://youtu.be/3XDAogwbxYA](https://youtu.be/3XDAogwbxYA)  
22 Data Complexity, Success Probability, Non-detection, False Alarm [https://youtu.be/8C4tH0xkQ1Ehttps://youtu.be/3XDAogwbxYA](https://youtu.be/8C4tH0xkQ1Ehttps://youtu.be/3XDAogwbxYA)  
23 Impossible Differential Cryptanalysis [https://youtu.be/lB5Ze-e2jX4](https://youtu.be/lB5Ze-e2jX4)  
24 Impossible Differentials for HIGHT Block Cipher [https://youtu.be/FED68ilZeEo](https://youtu.be/FED68ilZeEo)  
25 Impossible Differential Attack on HIGHT Block Cipher [https://youtu.be/9Gj97eDNDQ8](https://youtu.be/9Gj97eDNDQ8)  
26 Results of Experimentally Verifying a Differential Distinguisher [https://youtu.be/PC6jIp3JmRA](https://youtu.be/PC6jIp3JmRA)  
27 Improbable Differential Cryptanalysis [https://youtu.be/L4XHNBXRvS0](https://youtu.be/L4XHNBXRvS0)  
28 Improbable Differential Cryptanalysis of CLEFIA [https://youtu.be/G4mnjQnN7TY](https://youtu.be/G4mnjQnN7TY)  
29 AES [https://youtu.be/nxrycT-cbmg](https://youtu.be/nxrycT-cbmg)  
30 Breakthrough AES Performance on GPUs [https://youtu.be/aPHJULne7Sw](https://youtu.be/aPHJULne7Sw)  
31 Invariant Subspaces of AES [https://youtu.be/TQT-INiMfLc](https://youtu.be/TQT-INiMfLc)  
32 Collisions for AES Hashing Modes [https://youtu.be/TT3A9Kk-sqk](https://youtu.be/TT3A9Kk-sqk)  
33 Weak-key Subspace Trails of AES [https://youtu.be/dNyvPfngsa4](https://youtu.be/dNyvPfngsa4)  
34 Chosen-key Distinguishers of AES [https://youtu.be/zaQdw4HoojA](https://youtu.be/zaQdw4HoojA)","crypto",7,7,0,1,1,0,1,15
"288","https://www.reddit.com/r/crypto/comments/nvs54n/keynonce_reuse_with_stream_ciphers/","anonXMR","2021-06-09","Key/Nonce re-use with stream ciphers","It's ok to reuse a key with stream ciphers (ChaCha,Salsa,GCM), right? once I don't re-use a key,nonce pair?","crypto",7,7,0,0.9,0,0,1,21
"289","https://www.reddit.com/r/crypto/comments/nnyjru/cryptography_and_secret_ballots/","david-song","2021-05-29","Cryptography and secret ballots","Is there a cryptographic solution to the problem of secret ballots?

Where each voter must be authorised to vote, the authorities can't tell who voted for who, each voter can verify that their vote was counted, but they can't prove who they voted for even if they wanted to?","crypto",7,7,0,1,0,0,0,18
"290","https://www.reddit.com/r/crypto/comments/nnhysm/its_okay_to_use_special_curves_for_reasons_of/","doctorstyles","2021-05-29","Its okay to use special curves for reasons of efficiency if you insist, but some day that choice might come back to bite you","https://2010.eccworkshop.org/slides/Koblitz.pdf","crypto",7,7,0,0.71,0,0,0,6
"291","https://www.reddit.com/r/crypto/comments/nnbhdc/question_about_encoding/","windwind00","2021-05-29","Question about encoding","why don't we see usage of other encoding schemes such as Base58 or Base85 ([https://en.wikipedia.org/wiki/Binary-to-text\_encoding#Base58](https://en.wikipedia.org/wiki/Binary-to-text_encoding#Base58))? The most wildly used is Base64 and sometimes Base16. is there anything wrong with them?","crypto",9,9,0,0.85,0,0,0,15
"292","https://www.reddit.com/r/crypto/comments/nlki45/is_cryfs_really_secure/","Galeaf_13","2021-05-26","Is CryFs really secure?","I'm looking for a solution to encrypt some files on my Linux system and right now I'm deciding between eCryptfs (a kernel module) and CryFs. CryFs has an [explanation](https://www.cryfs.org/howitworks) on their website why it's secure and they provide 2 PDF documents one of which is 100+ pages long. It's pretty convincing ngl, but other encryption services have so called security audits ([example](https://defuse.ca/audits/ecryptfs.htm)). CryFs, on the other hand, is relatively new and that's why I was wondering if it's safe to use.","crypto",5,5,0,0.64,0,0,0,40
"293","https://www.reddit.com/r/crypto/comments/ngi7ah/java_bouncy_castle_openpgp/","bashing_trash","2021-05-19","Java - Bouncy castle - OpenPGP","It would be great if someone could point me to some books ( tutorials, medium posts ) like this one:  
[https://leanpub.com/javacryptotoolsandtech](https://leanpub.com/javacryptotoolsandtech) which I'm unable to buy from where I live.

I have a school project in which I have to implement OpenPGP protocol and we are suggested to use bouncy castle as a provider. Since I'm fairly new to cryptography and really understand only theory I find bouncy castle's documentation to be a bad starting point. 

I'd really like to hear your opinion as where to start looking or what to look for.

Thanks.","crypto",7,7,0,0.77,0,0,0,24
"294","https://www.reddit.com/r/crypto/comments/n84dgu/lenstras_ec_factorization_algoirthm_question/","BradBostos","2021-05-09","Lenstra's EC Factorization Algoirthm Question","I recently took a shot a implementing Lenstra's Algorithm, however I ran into a few attempts where it seemed like no matter how many different curves I tried I never found a factor. Yet in some other attempts I was able to find a factor in only a few curves, and I verified them to be correct. 

So my question is, is Lentra's Algorithm guaranteed to give you a solution? If not, why?","crypto",7,7,0,0.9,0,0,0,10
"295","https://www.reddit.com/r/crypto/comments/n2ts32/homomorphic_encryption_question/","blutackman","2021-05-01","Homomorphic Encryption Question","I think I have an understanding of the basic concept of HE, but have a question about its use in the scenario where you might want someone you do not trust to perform computation on your private data.

Am I right in thinking that the untrusted party could learn about your data through comparisons such as enc(a) &gt; enc(b), where the untrusted party can recompute the encrypted value for b and slowly hone in on the value of a? I realise this would be slow to keep recomputing so lets ignore that for now

Another case would be where operations produce the same output allowing you to slowly deduce what some of the encrypted values are?

Is this the case for HE at all?","crypto",8,8,0,1,0,0,0,15
"296","https://www.reddit.com/r/crypto/comments/mxsvh7/fda_is_a_liability_how_to_hide_veracrypt/","cryptomann1","2021-04-24","FDA is a liability. How to hide veracrypt containers?","I've concluded that full disk encryption is a liability and will only put you in problems once someone manages to get access to your computer, either it be by a random check in an airport, border, theft or corrupt assorted politician ruling laws against your privacy.

Point being, we need alternatives. The best thing I can think off is just to store the data you want hidden in a veracrypt container, put it somewhere, and access it only through a Tails live session, by mounting the disk that contains the container, copying the container in the RAM memory (in any of the Tails folders), unmounting the drive and then accessing the container, so any encrypted data would remain only on ram (all of this offline obviously)

So now the question is: how does one keep the file away from being found? can you put it inside some sort of obscure file format that will hide it from a container scanner of sorts? for extra protection one could add a hidden volume which as far as I know allows for actual plausible deniability as opposed to a hidden OS where you can't really get away with it, but in any case, you don't want the container to be found to begin with.

I would only need a small container since I only need to hide some spreadsheet files and documents so it shouldn't be hard to hide, the problem is, how to hide it from forensic scanners of sorts?","crypto",7,7,0,0.62,0,0,0,32
"297","https://www.reddit.com/r/crypto/comments/t8mqtg/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-03-07","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",13,13,0,0.94,0,0,1,2
"298","https://www.reddit.com/r/crypto/comments/t49kbd/ideas_for_a_good_elearning_system_for_cryptography/","Emotional-Essay551","2022-03-01","Ideas for a good e-learning system for cryptography?","Hi there!

I'm doing my masters thesis around e-learning tool for cryptography ([https://www.cryptool.org/en/](https://www.cryptool.org/en/)) and I need user's ideas for a good design. Please leave any ideas, thoughts, concerns or anything in this Mural board --&gt; [Ideas for the best learning tool for cryptography!](https://app.mural.co/t/cryptographylearningsystem5890/m/cryptographylearningsystem5890/1645548464134/97f7ea562c16d70a705e025abb791a296cfc863c?sender=uab07abdb40018eb19c428371)

Some background:

I am doing M.Sc. HCI and last year, I analyzed the usability of CrypTool 2 and CrypTool-Online. This year for my thesis, I am exploring how a good tool for learning cryptography can be designed. For a user-centric design process, I need preliminary ideas and then some users for participatory design workshops and design evaluations.

If you're interested, hit me up!

(or send me an email at [maryam.mehreen@student.uni-siegen.de](mailto:maryam.mehreen@student.uni-siegen.de) )

Cheers!","crypto",6,6,0,1,0,0,1,2
"299","https://www.reddit.com/r/crypto/comments/s76u6y/best_practices_for_storing_private_keys_on_servers/","emasculine","2022-01-18","Best practices for storing (private) keys on servers?","and in particular where you don't have physical access so that USB would be a non-starter.","crypto",5,5,0,0.86,0,0,0,18
"300","https://www.reddit.com/r/crypto/comments/rtwgjv/practical_related_key_attacks/","Matir","2022-01-02","Practical Related Key Attacks?","Are there examples of practical related key attacks?  It seems that software would have to do a very poor job of key generation (i.e., incrementing a counter) in order to get a set of related keys.

AFAICT, the relation has to be somewhat predictable -- i.e., if I take `k_n = H(k_n-1)` where H is a cryptographically-strong hash, this wouldn't be ""related"" in the meaning of related key attacks.

I understand their academic value in the study of the cipher and that it might lead to breakthroughs of other kinds of attacks, but it doesn't seem like a concern in most real-world applications.","crypto",6,6,0,1,0,0,1,2
"301","https://www.reddit.com/r/crypto/comments/q5eo0u/im_looking_for_a_cryptographic_proof_of_a_set/","advanderveer","2021-10-10","I'm looking for a Cryptographic proof of a set union","Hey everyone, I wonder if there is a cryptographic primitive that allows one to proof that they have a set of values (thousands of public keys in my case) such that another agent can verify that their set of values sufficiently overlaps. Primarily in the case were the majority of values will overlap, but not 100%.

EDIT: For my use case it would be important that the prover cannot provide a proof of a subset that is smaller than what the verifier deems acceptable. The prover would be able to provide a proof of a larger set, as long as it intersects with the verifiers set to a minimum degree.

I'm looking into cryptographic accumulators but they seem to mainly deal with 1-item membership proofs. A union of accumulators Is quickly mentioned in this paper but it is not very well explained: [https://eprint.iacr.org/2018/1188.pdf](https://eprint.iacr.org/2018/1188.pdf)

Thank you!","crypto",5,5,0,0.86,0,0,1,76
"302","https://www.reddit.com/r/crypto/comments/oxtr9b/invertible_discrete_functions/","arcxtriy","2021-08-04","Invertible Discrete Functions","I am interested in studying *Invertible Discrete Functions*, i.e. I am interested in functions which compute discrete outputs given discrete inputs **and** are (*easily*) invertible. E.g.

y = (a + b \* x ) mod K

if b and K are coprime and x is a natural number.

This is a very simple example. Therefore, I am curious if you know other functions/algorithms or can point me to source where I can continue searching?

Thanks in advance!","crypto",7,7,0,0.83,0,0,2,40
"303","https://www.reddit.com/r/crypto/comments/ou9j8h/nick_szabos_essays_papers_and_concise_tutorials_a/","TheLunarnautics","2021-07-30","Nick Szabo's Essays, Papers, and Concise Tutorials - A Modern Crypto OG","","crypto",5,5,0,0.59,0,0,0,23
"304","https://www.reddit.com/r/crypto/comments/o5wtvm/graduate_programs_in_mathematical_cryptography/","lordnickolasBendtner","2021-06-22","Graduate Programs in Mathematical Cryptography","Hi guys,

I am going to be a 4th year undergrad in math once this fall starts and am going to be applying to graduate schools for a PhD. I want to work in mathematical cryptography (which is defined in the reddit post I linked below) or maybe algorithmic number theory, but a comment in [this reddit post](https://www.reddit.com/r/crypto/comments/7lng0c/degree_options_in_more_mathheavy_cryptography/) says that there aren't too many mathematical cryptography programs going on in the US (I am a US student). The commenter goes on to list a couple of researchers in Canada, Europe and Asia working in the area. I was wondering what other universities in Europe and Canada I should look at besides the ones mentioned in the post I linked above.

While I am down to do my graduate studies outside of the US, I also heard of some places in the US where mathematical crypto is pretty active, like University of Washington. Are there any other such places in the US where similar research is going on?

Thanks .","crypto",6,6,0,1,0,0,1,10
"305","https://www.reddit.com/r/crypto/comments/o3b01o/is_encrypting_a_file_ineffective_if_i_dont_zero/","ZedZeroth","2021-06-19","Is encrypting a file ineffective if I don't zero the drive that held the original unencrypted file?","Please let me know if I should be following Procedure B below rather than Procedure A, or if there is a better alternative. The below assumes an air-gapped device. 

Procedure A:

1. Zero an SD card.
2. Type some important text (that's too long to memorize) into a text editor and save it as a text file on the SD card. 
3. 'gpg' encrypt the text file (with a secure password that I can memorize) as a new file on the SD card.
4. 'rm' the original unencrypted text file.
5. Store the SD card and a backup in safe locations.

I'm assuming that for the above procedure, someone accessed the SD card could recover the unencrypted text using file recovery methods? So...

Procedure B:

1. Zero two SD cards.
2. Type some important text (that's too long to memorize) into a text editor and save it as a text file on SD Card 1. 
3. 'gpg' encrypt the text file (with a secure password that I can memorize) as a new file on SD Card 1.
4. Move *only* the encrypted file to SD Card 2.
5. Zero SD Card 1.
5. Store SD Card 2 and a backup in safe locations.

Further question: While typing the important text into a text editor (and then saving *only* to an SD card) is it possible that the text is written to the computer's internal memory somehow and could then be later recovered?","crypto",6,6,0,1,0,0,1,24
"306","https://www.reddit.com/r/crypto/comments/pqbi3p/why_does_rngcryptoserviceprovider_fail_the_nist/","DeadWorkerBee","2021-09-17","Why does RNGCryptoServiceProvider fail the NIST test for randomness","I use RNGCryptoServiceProvider to return sequences of random data (text or binary) in an app I wrote called RESIZER.EXE.

Resizer lets you increase or decrease the size of a file with random text or binary values. 

I started with a file of one character ('a') and resized it up by 100 bytes of random numeric data using RNGCryptoServiceProvider. I have another app, IsRandom.exe, largely copied from Microsoft, at 

https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/government-special-issue/test-run-implementing-the-national-institute-of-standards-and-technology-tests-of-randomness-using-csharp

to see if the generated data is random.  IsRandom said it passed the NIST test.

Then I upsized it by 1000 bytes of random numeric data and IsRandom reported it failed the Gamma Test, key is not random enough. I'm confused by this report as the data has no key that I'm aware of. So why do 100 bytes of ""random"" data pass the NIST test but 1000 do not?

I've tried this with a few files. Mostly they pass the NIST test, but a few do not.

(apologies if this post is inappropriate as I've not posted here before)","crypto",19,19,0,0.91,0,0,1,54
"307","https://www.reddit.com/r/crypto/comments/pkdfve/what_are_the_most_overrated_cryptographic_schemes/","davidw_-","2021-09-08","What are the most overrated cryptographic schemes, protocols, conferences, etc.?","So?","crypto",18,18,0,0.75,0,0,1,98
"308","https://www.reddit.com/r/crypto/comments/p9uegm/fheorg_meetup_googles_c_to_fhe_compiler/","randhindi","2021-08-23","FHE.org meetup | Google's C++ to FHE compiler","Hello,

The next FHE meetup is this coming thursday on zoom. The team at Google will present the technical details of their C++ to FHE compiler.

Link to attend: [https://www.meetup.com/fhe-org/events/279950583](https://www.meetup.com/fhe-org/events/279950583)

See you there!","crypto",19,19,0,0.89,0,0,1,20
"309","https://www.reddit.com/r/crypto/comments/p6vuv0/help_with_college_advice/","Noxta_","2021-08-18","Help with college advice","I'm going to be a senior in high school this year and I love math and technology so obviously I've become interested in cryptography. Is there anything specific I should look for in a college? Any specific colleges that are good? Cryptography isn't a huge field so it's hard to find advice about it, so any help at all would be greatly appreciated. I live in Wisconsin if that helps so my #1 choice is UW Madison, but idk what other options I really have. Thanks everyone!","crypto",18,18,0,0.87,0,0,1,46
"310","https://www.reddit.com/r/crypto/comments/ozv7nz/cant_find_any_good_books_on_how_to_cryptanalyze_a/","CivilBet4806","2021-08-07","Can't find any good books on how to cryptanalyze a classical Homophonic Substitution cipher with 3 alphabet types (a-z, 0-9, and keyboard symbols)","Hey crypto community,

I'm hoping someone here can recommend a good book on solving classical ciphers of the type: Homophonic Substitution.

The books I've read have VERY little information on Homophonic Substitution ciphers, and even less on how to go about approaching a solve for them.

I've read:Elementary Cryptanalysis - A Mathematical Approach (Singh)

Cryptanalysis - A Study of Ciphers and Their Solutions (HF Gaines)

Can someone recommend a book/text to help zero in on the manual methods I can use?

The ciphertext has a total of 36 unique symbols, 3 spaces in the ciphertext (which might be red-herrings), and is only a total of 62 characters in length which adds quite a bit of ambiguity to the traditional methods I've studied in the books referenced above such as freq. analysis, etc.

Further, the cryptogram only has a single repeated bigram ""j\\"" and frequency analysis shows large peaks and troughs which worries me that I've misidentified this as a Homophonic Substitution.

By and large from my understanding of Homophonic Substitution (which is green to say the least), I should expect to see the frequency distribution being flatted, but the distribution is more reminiscent of a transposition cipher and not very flat. I'm not sure what to classify it as since it has n&gt;26 symbols which to my understanding implies a homophonic substitution, yet the freq. distribution does not coincide with a flatted Homophonic substitution appearance.

&amp;#x200B;

Any recommendations for reference material will be greatly appreciated, thanks for your time and consideration :)","crypto",17,17,0,0.89,0,0,1,42
"311","https://www.reddit.com/r/crypto/comments/oxo6x5/memorybound_trapdoor_proof_of_work/","raelepei","2021-08-04","Memory-bound trapdoor proof of work","The problem:
I run a server, and want to supply an API call, without CAPTCHA, unauthenticated, which causes load on the server.
Potential: DoS by just calling the API endlessly
Goal: Make DoS expensive / uninteresting

Non-Solution #1: ""Just use any PoW scheme, like SHA256 or Hashcash or whatever""
Why not: Some users have shitty mobile phones, so the PoW scheme can't be too hard. Meanwhile, attackers have graphics cards, so the PoW scheme must be quite hard.
Therefore: CPU-bound PoW is not ideal. As Wikipedia states, memory-bound hash functions seem to be more ""egalitarian"".
https://en.wikipedia.org/wiki/Memory-hard_function#Motivation

Non-Solution #2: ""Just use a memory-hard hash like argon2 or scrypt for your PoW scheme, like H(nonce) &lt; threshold""
Why not: A single invocation of Argon2/scrypt requires the same resources during ""proving"" and verification. An attacker can just send millions of invalid proofs, overloading the server.
Therefore: The verification step shouldn't be too difficult for the server. 
(Also, I'm not entirely sure whether Argon2/scrypt hashes can be used like that. Maybe the attacker has an easier way to influence the first few bits than brute-force. Also, both methods really aren't meant to be used like this.)
Hence my slightly-incorrect use of the word ""trapdoor"": I don't actually require that the server-side is trivial, just that it is simple enough.

Non-Solution #3: ""Just roll your own crypto!""
Why not: I would be rolling my own crypto.

Non-Solution #4: Hokkaido https://eprint.iacr.org/2005/356.pdf
Why not: Seems informal, contains significantly many typos, not peer-reviewed, searching ""hokkaido hash"" or ""hokkaido proof of work"" or ""hokkaido scheme"" basically only yields the paper as a result.

Non-Solution #5: What Hokkaido cites as [1]
Why not: Just O(l^2) for attacker and O(l) for server. However, this is going the right direction.

Non-Solution #6: What Hokkaido cites as [5]
Why not: Only linear(!) blowup, depends on rather old primitives (RC4 and SHA1)

Non-Solution #7: kaPow
Why not: Only mentioned in a single Stack-Overflow post, seems to rely on hash inversion anyway, so not really memory-bound
https://stackoverflow.com/questions/26821310/is-there-a-memory-bound-proof-of-work-concept-for-use-in-javascript

Non-Solution #8: Cuckoo Cycle https://github.com/tromp/cuckoo
Why: At least a few people have looked at it, and any attacker is far more likely to directly attack the blockchain itself, than my server (which doesn't get involved with the blockchain)
Why not: The ""mathematical specification"" https://github.com/tromp/cuckoo/blob/master/doc/mathspec is woefully inadequate, their ""C spec"" focuses more on ASCII art than actual readability https://github.com/tromp/cuckoo/blob/master/doc/spec and as https://handshake.org/files/handshake.txt points out, cannot be easily adjusted in difficulty. Also, I would need to implement it from scratch, but I guess I'll have to do that anyway.

Non-Solution #9: ""Just use the search function!""
Why not: Only yields https://www.reddit.com/r/crypto/comments/7n2exi/what_are_the_current_viable_options_for_a_good/ , all of which I handle here.

Non-Solution #10: Busy Beaver (64kb random instructions) https://denisbider.blogspot.com/2015/05/busybeaver-key-derivation-function.html
Why: Has a public JS implementation, neat!
Why not: Not well-documented, only available as a zip, or I could rip it out of this (abandoned?) repo https://github.com/denisbider/Atomic , apparently hasn't really been cross-checked by anyone it seems.

Non-Solution #11: ""Egalitarian computing based on Argon2"" https://www.usenix.org/sites/default/files/conference/protected-files/security16_slides_biryukov.pdf
Why not: I really don't want to use 2 GB of RAM on the server to verify it. See above: The attacker can just spam me with invalid ""proofs"". Also, the ""specification"" is a single powerpoint slide, and not what I would call ""well-defined"".

Non-Solution #12: https://www.cs.utexas.edu/%7Ebwaters/publications/papers/outsource_paper.pdf
Why: Acknowledges that the puzzle itself is also attack surface.
Why not: ""Just put it on a different server"" just moves the problem, instead of solving it.

So, can someone suggest a memory-bound ""trapdoor-ish"" proof of work?","crypto",20,20,0,0.84,1,0,1,62
"312","https://www.reddit.com/r/crypto/comments/o8vdf6/cryptography_textbook_recommendations_for/","Psychological1stAid","2021-06-27","Cryptography Textbook Recommendations for Graduates","Greetings,

I am a recent graduate of a mathematics masters program looking to self-teach cryptography up to the level where I can understand current research papers in the area in order to aid me in my work when I start my PhD.

I have taken a number of advanced courses in Number Theory as well as an undergraduate course in Cryptography which covered the basic notions of the subject as well as the specifics of a couple of the key algorithms such as RSA and AES.

I feel I have a good foundation in the subject but am struggling to find resources that would let me take the leap into being able to really interpret recent papers in the field.

Could anyone recommend to me any texts at the graduate level that would be appropriate for someone with my background?

Many thanks in advance.","crypto",17,17,0,0.88,0,0,1,10
"313","https://www.reddit.com/r/crypto/comments/n5ilg9/how_feasible_is_it_to_use_the_signal_protocol_for/","IntergalacticCiv","2021-05-05","How feasible is it to use the Signal Protocol for live document collaboration on a private cloud?","Asking this because I don't know of any truly secure to collaborate live on documents (obviously with the server being self-hosted)","crypto",17,17,0,0.91,1,0,0,28
"314","https://www.reddit.com/r/crypto/comments/mq4x25/using_neural_networks_to_break_cryptosystems/","IAmHere04","2021-04-13","Using neural networks to break cryptosystems","Hi guys, I've always had this idea in my mind and now (after watching silicon valley) I am more interested than ever.
 
So the title is clear, I'm wondering if it's possible to train a neural network to break something like an hash function or an encryption function (maybe give cipher+plaintext and do a key recovery I don't know)

The fact is that from one side a neural network should (in theory) be able to represent any function but on the other side hash functions give outputs with no correlation to their input and neural networks are good in finding patterns. 
I didn't find much on the internet. What do you think?","crypto",18,18,0,0.69,0,0,0,37
"315","https://www.reddit.com/r/crypto/comments/mmukxd/from_kems_to_protocols/","neilmadden","2021-04-08","From KEMs to protocols","","crypto",18,18,0,0.86,0,0,0,11
"316","https://www.reddit.com/r/crypto/comments/medas0/calculating_decryption_key_if_rsa_was_based_on/","duttish","2021-03-27","Calculating decryption key if RSA was based on prime p","**Update:** I understand now thanks to you helpful people :) I'll leave it up in case anyone else is new to this.

**Original:** So I just finished the last test of Cryptography 1 after about 3 months but one thing I'm not sure how to actually show was this:

If RSA was based on prime p instead of a composite N, show that anyone can compute d = e\^-1 (mod p-1). Instead of say d= e\^-1 (mod p + 1) or d = e\^2 (mod p).

I've gone over all my notes from the course twice but must be missing something. I'd love some help because it's really bugging me.","crypto",19,19,0,0.92,0,0,0,23
"317","https://www.reddit.com/r/crypto/comments/sgxfff/how_would_the_crypto_in_deadbolt_work/","disclosure5","2022-01-31","How would the crypto in deadbolt work?","Hi,

There's a description of this over here: https://www.bleepingcomputer.com/forums/t/767603/deadbolt-ransomware-support-topic-qnap-devices-deadbolt-extension/

I've dealt with a lot of ransomware and usually it's obvious: The ransomware they ran for you carries a public key, they have a private key, they give it after you pay.


What you can see is that when a person pays the ransom, that b word I'm not going to say for spam filter reasons actually returns the key. Are there any write ups on this sort of thing?","crypto",16,16,0,0.84,1,0,1,17
"318","https://www.reddit.com/r/crypto/comments/r8jiaq/how_would_you_go_about_attacking_a_cryptographic/","Ordinary1729","2021-12-04","How would you go about attacking a cryptographic discrete dynamical system?","I created a simple cipher that attempts to take advantage of the chaotic and unpredictable nature of dynamical systems by converting a message into an integer and iterating over a generated algebraic(ish) function.

Predicting the behavior of dynamical systems is hard enough even when you know the function, but with the function being hidden (as the 'key') it feels like an impossible task.

How would you go about attacking such a cipher?

Code: [https://xywcjbyl.me/code/](https://xywcjbyl.me/code/)

Edit: Here is the code on GitHub: [https://github.com/Ordinary1729/simba/blob/main/simba.py](https://github.com/Ordinary1729/simba/blob/main/simba.py).  I made a website with an implementation of the cipher and thought a Caesar cipher of the url decipher.me was clever, but in retrospect it just looks like a sketchy link...","crypto",17,17,0,0.78,2,0,1,19
"319","https://www.reddit.com/r/crypto/comments/qvb4l2/i_made_an_implementation_of_fuzzy_ibe_based_on/","voracious-ladder","2021-11-16","I made an implementation of Fuzzy IBE based on Baek et al.","Hi, I just created an implementation of Fuzzy IBE in Haskell as a practice. I understand that the first rule of cryptography is ""don't roll your own crypto"", but I would still like to do it as a hobby and practice. I would like to ask for your advice and see if there's anything that I can improve (e.g. anything I can do to make it more resistant to timing attacks).

[https://github.com/octeep/fuzzyibe](https://github.com/octeep/fuzzyibe)","crypto",17,17,0,0.91,0,0,1,43
"320","https://www.reddit.com/r/crypto/comments/qkbhga/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-11-01","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",18,18,0,1,0,0,1,77
"321","https://www.reddit.com/r/crypto/comments/q586df/is_rsa_safe_for_signing_jwts/","CaveMailer","2021-10-10","Is RSA safe for signing JWTs?","Hi everyone,

I was planning to use RSA to sign JWTs when I read this blog post ([https://blog.trailofbits.com/2019/07/08/fuck-rsa/](https://blog.trailofbits.com/2019/07/08/fuck-rsa/)). What do you guys think about it?

 So my questions are -

1. Is RSA safe to sign JWTs? What key length should I be using?
2. Is OpenSSL a safe way to generate RSA key pairs?
3. Is ECDSA better than RSA to sign JWTs?
4. Is there a way to check that the implementation of RSA is correct in the library that I'm using to sign JWTs ([https://www.npmjs.com/package/jsrsasign](https://www.npmjs.com/package/jsrsasign))?

Thanks a lot!","crypto",19,19,0,0.92,0,0,1,81
"322","https://www.reddit.com/r/crypto/comments/q4u9mv/selenite_a_postquantum_cryptography_library_for/","AtropineTearz","2021-10-09","Selenite: A Post-Quantum Cryptography Library For Digital Certificates Written In Rust","","crypto",18,18,0,0.82,0,0,1,56
"323","https://www.reddit.com/r/crypto/comments/pbywh4/what_is_the_difference_between_pgp_and_openpgp/","The_How_To_Linux","2021-08-26","What is the difference between PGP and openPGP?","Hello, i don't know much about cryptography, and i'm reading the article on pretty good privacy

[**https://en.wikipedia.org/wiki/Pretty\_Good\_Privacy**](https://en.wikipedia.org/wiki/Pretty_Good_Privacy)

and i'm trying to understand what openpgp is and the difference between pgp and openpgp

""Within PGP Inc., there was still concern surrounding patent issues. RSADSI was challenging the continuation of the Viacrypt RSA license to the newly merged firm. The company adopted an informal internal standard that they called ""Unencumbered PGP"" which would ""use no algorithm with licensing difficulties"". Because of PGP encryption's importance worldwide, many wanted to write their own software that would interoperate with PGP 5. Zimmermann became convinced that an open standard for PGP encryption was critical for them and for the cryptographic community as a whole. In July 1997, PGP Inc. proposed to the [IETF](https://en.wikipedia.org/wiki/IETF) that there be a standard called OpenPGP. They gave the IETF permission to use the name OpenPGP to describe this new standard as well as any program that supported the standard. The IETF accepted the proposal and started the OpenPGP [Working Group](https://en.wikipedia.org/wiki/IETF_Working_Group).""  


i'm not understanding this, what does this mean? there was a licensing problem?   
""Zimmermann became convinced that an open standard for PGP encryption was critical for them and for the cryptographic community as a whole.""  


what do they mean ""open standard""?   


thank you","crypto",19,19,0,0.86,0,0,1,54
"324","https://www.reddit.com/r/crypto/comments/owvayf/paseto_reference_implementation_release_notes_new/","sarciszewski","2021-08-03","PASETO Reference Implementation Release Notes (new protocol versions)","","crypto",17,17,0,0.92,0,0,1,27
"325","https://www.reddit.com/r/crypto/comments/olpwcz/zero_knowledge_covid_certificates/","catragore","2021-07-16","Zero Knowledge Covid Certificates","Recently I was thinking of the following problem with some covid certificates i have come across. They generally follow a scheme like this:

1. Some trusted party (eg a government) signs a bunch of data that include your name and the date on which you start being ""fully vaccinated"".
2. The trusted party bundles the data along with the signature, and gives them to the vaccinated party.
3. The vaccinated party presents the bundle to a verifier, which checks if the certificate is valid (ie valid signatures + correct date for full vaccination)

And my problem now is that the verifier can actually copy the certificate and prove to someone else that the vaccinated party is indeed vaccinated. It is not a big problem but i can imagine some edge (but nonetheless realistic) cases that this could be a problem.

So I was wondering if there schemes that provide zero knowledge proofs that the vaccinated party possesses a valid signature for the vaccination data it is claiming. Or of course, if there is some other way were you can achieve the same result.","crypto",18,18,0,0.83,0,0,1,37
"326","https://www.reddit.com/r/crypto/comments/ogr6u6/external_retrieved_data_integrity/","derosul","2021-07-09","External retrieved data integrity?","Hello /r/crypto

Not sure if this is the right place to ask since this subreddit is more focused on the theoretical side of cryptography.

For a new system we're building, we are systematically retrieving data from an external system (Basically via a cron job pulling new information from a REST API). One of the technical requirements is that we should be able to proof that the data we locally store, is indeed coming from the external data source after X amount of time. My first thought was to store some kind of reference to the SSL certificate used in the request and/or the certificate chain and do something cryptographically with the data to verify it's integrity (Not sure how yet, it's my first gut feeling on how to approach this since the SSL certificate is identifying the server the data came from).

Main problem here is that we can't force the external data supplier('s) to supply payload signatures.

Anyone has experience with this kind of subject? Or is able to point me in the right direction?

Cheers!","crypto",18,18,0,0.92,0,0,1,26
"327","https://www.reddit.com/r/crypto/comments/ofy61n/cryptographically_secure_online_voting/","beleeee_dat","2021-07-08","cryptographically secure online voting","","crypto",19,19,0,0.76,0,0,1,56
"328","https://www.reddit.com/r/crypto/comments/oeilbm/is_there_a_kind_of_the_cryptography_when_key/","Avastor_Neretal","2021-07-05","Is there a kind of the cryptography when key stores a part of the encrypted data?","For example, we have a ""Hello World"" sentence, and then we want to encrypt it.

Firstly, part of the information cuted from it to the key, let it be H, l, o, o, l and then being encrypted.

Then, the rest of the information bein randomly mixed - loerWd and then also being encrypted.","crypto",17,17,0,0.8,0,0,2,23
"329","https://www.reddit.com/r/crypto/comments/nmtw0b/identity_element_in_ecc/","anonXMR","2021-05-28","Identity element in ECC","I noticed when I take any random point on the curve, and subtract it from itself I get the identity element ( I think that's what it is in Sagemath its 0:1:0 ) -


why is this?


Also one more weird thing, when playing with Edwards25519, I noticed.

If I take a random point:

    (46053163635766863422262745733734538935533413342706877024857516657488884284245 : 50525958287328182590704371135549264887199669258798939444629220697451012828031 : 1)

and multiply it by the curve order (2^255: 57896044618658097711785492504343953926856930875039260848015607506283634007912)

Then I get:

    (0 : 1 : 0)

But if I multiply it by the subgroup order (i.e. the order of the generator: 7237005577332262213973186563042994240857116359379907606001950938285454250989)

I get: 

    (0 : 0 : 1)

Why is one 010 and the other 001?  can someone explain this to me?","crypto",17,17,0,1,0,0,0,18
"330","https://www.reddit.com/r/crypto/comments/n0rp2f/free_webinar_w_dan_boneh_hacking_ai_security/","Stanford_Online","2021-04-28","Free webinar w/ Dan Boneh - Hacking AI: Security &amp; Privacy of Machine Learning Models","Register for our upcoming webinar with Stanford Professor Dan Boneh. He will discuss recent work at the intersection of cybersecurity and machine learning, with an emphasis on adversarial machine learning. [https://learn.stanford.edu/security-privacy-machine-learning-models-webinar.html](https://learn.stanford.edu/security-privacy-machine-learning-models-webinar.html)","crypto",16,16,0,0.8,0,0,0,11
"331","https://www.reddit.com/r/crypto/comments/mp7mlc/i_am_new_to_cryptography_and_trying_to_understand/","DebagnikKar","2021-04-12","I am new to cryptography and trying to understand how AES-256 works (Source material added in the comments)","I am facing specific difficulty in understanding the _MixColumn()_ operation I fail to understand GF(2^8) operator or something to do with XOR, and If the resultant matrix cells are more than one byte then what should I do. Is there any calculator available for this specific operation?

Study Source (https://ieeexplore.ieee.org/document/1289996) and (https://web.fe.up.pt/~jmcruz/etc/segur/jsavard-book/aes-rijndael.htm)
My Specific Problem (https://imgur.com/Wuj4DO7)

I will be grateful if someone helps me solve my specific problem as I have to write a paper on it and AS is not a very big part, So I cannot spend much time understanding GF(2^8) operations","crypto",17,17,0,0.85,0,0,0,15
"332","https://www.reddit.com/r/crypto/comments/m7yzz6/careercollege_path/","Noxta_","2021-03-18","Career/college path","Im a junior in high school right now and Im super interested in math careers especially ones with coding and encryption so obviously I found out about cryptography. Im asking a pretty general question here, but what are some classes/types of classes I should be trying to take as I go into college? Would a double Major in math/CS be beneficial? Im looking into UW-Madison in Wisconsin if that helps anyone as well. Any other general tips? Thanks for the advice!!","crypto",19,19,0,0.88,0,0,0,31
"333","https://www.reddit.com/r/crypto/comments/t2d4ny/login_with_a_public_ed25519_key/","binaryfor","2022-02-27","Login with a Public Ed25519 Key","","crypto",17,17,0,0.67,0,0,1,9
"334","https://www.reddit.com/r/crypto/comments/t1yfrf/is_there_any_way_to_apply_rotational/","Inevitable_Bug_4824","2022-02-26","Is there any way to apply rotational cryptanalysis to a block cipher that uses sbox?","I know that rotational cryptanalysis is meant for ARX, ARX-C, AND-RX etc block ciphers. I wanted to know if there was any technique known to employ rotational cryptanalysis on a block cipher that has sbox(es), as I can't find out a way for that.","crypto",16,16,0,0.85,0,0,1,1
"335","https://www.reddit.com/r/crypto/comments/q5wh5h/is_the_order_of_elliptic_curves_only_bound_by_the/","anonXMR","2021-10-11","Is the order of elliptic curves only bound by the Galois field over which they are defined?","I've done some experimentation in sagemath. It seems if one increases the field to be say 512bit instead of a 256bit prime, the order of the curve grows too, are curves effectively infinite?","crypto",15,15,0,0.95,0,0,1,66
"336","https://www.reddit.com/r/crypto/comments/pu4yn4/secp256k1_recoverable_public_key_from_signature/","zninja-bg","2021-09-23","secp256k1 recoverable public key from signature ?","I have been playing around with recoverable public key from signature feature.  
[https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.cpp#L282](https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.cpp#L282)  
I came into conclusion it is possible for signature to have more then one matching public key for signature to pass verification with.  
Cryptocurrency, in this case bitcoin is using non standard signature format {v,r,s} instead of {r,s} where v is index of key used for creating the signature and range of 0-3.  
So, if public key of signing key by some case is not be part of signature message, then v would be unprotected and free for modifying.  
I want to ask, is (signature having multiple ( max 4) matching public keys to pass verification ) nature of ECDSA in general?","crypto",18,18,0,0.91,0,0,1,55
"337","https://www.reddit.com/r/crypto/comments/pmfqaz/how_to_check_for_adiantum_cipher_support_on_linux/","australis_heringer","2021-09-11","How to check for adiantum cipher support on Linux?","I wanted to know if my distribution supports the adiantum cipher so I checked \`/proc/crypto\` but there is no entry on aes-adiantum. Does it mean that my kernel has no support for adiantum? Am I missing something?","crypto",17,17,0,0.91,0,0,1,38
"338","https://www.reddit.com/r/crypto/comments/ph6332/is_there_a_private_set_intersection_protocol/","ImpressiveWord","2021-09-03","Is there a Private Set Intersection protocol where the server learns the length of the intersection?","My use-case is pretty weird, so I won't really get into it, but we can take the classic example of Signal. Signal doesn't want to know your address book for privacy reasons, but they want to share who in your address book is on Signal. So they use PSI which allows you to encrypt your address book, send it to them, they calculate the intersection of your address book, and all Signal users (while learning nothing about your address book, except the size), and then send the intersection back to you.

I was using [OpenMinded/PSI](https://github.com/OpenMined/PSI/tree/master/private_set_intersection/cpp) exploring some PSI implementations, but I would like a way for the server to know the intersection size. Say Signal wants to calculate the average number of users from one person's address book (or whatever).

Is this possible? I'm not particularly interested in rolling my own crypto, because, you know, I'm not a cryptologist. However, since this is all for a PoC/my own education, I wouldn't be totally opposed if there's a good paper explaining what I'm looking for.

Thanks!","crypto",16,16,0,0.95,0,0,1,41
"339","https://www.reddit.com/r/crypto/comments/ot3hpp/should_i_be_concerned_with_inband_nonces/","cyberguijarro","2021-07-28","Should I be concerned with in-band nonces?","I'm using libsodium's `crypto_aead_xchacha20poly1305_ietf_encrypt/decrypt()` to securely communicate using a PSK over an unreliable transport, where packets can drop or arrive out of order.

Best strategy I've been able to figure out in order to keep the nonces in sync is to simply prepend them, in full, along with the encrypted messages (of course they're randomly generated on startup and incremented on each transmission).

I know nonces are expected to be public, but I wonder what are the odds of an attacker capturing enough messages over time to find two of them using the same nonce, and then be able to guess the key.

Am I worrying too much?","crypto",16,16,0,0.84,0,0,1,38
"340","https://www.reddit.com/r/crypto/comments/ommjr7/initial_draft_specification_for_paseto_v3v4/","paragon_init","2021-07-18","Initial Draft Specification for PASETO v3/v4","","crypto",14,14,0,0.9,0,0,1,26
"341","https://www.reddit.com/r/crypto/comments/ol4id0/attacks_on_nonconstanttime_password_hash/","atoponce","2021-07-15","Attacks on non-constant-time password hash comparisons","","crypto",15,15,0,0.87,0,0,0,17
"342","https://www.reddit.com/r/crypto/comments/oh64nl/belenios_a_verifiable_online_voting_system/","beleeee_dat","2021-07-09","Belenios - A verifiable online voting system.","","crypto",14,14,0,0.66,0,0,1,43
"343","https://www.reddit.com/r/crypto/comments/ntvw5z/aspnet_cryptography_for_pen_testers_rnetsec/","marklarledu","2021-06-06","ASP.NET Cryptography for Pen Testers (/r/netsec)","","crypto",16,16,0,0.86,0,0,2,20
"344","https://www.reddit.com/r/crypto/comments/n4s16g/length_extension_attacks_scope/","anonXMR","2021-05-04","Length extension attacks scope","Hi folks,
Are length extension attacks only really on MAC'd hash functions, like HMAC/SHA and BLAKE2? or do they also work against unkeyed hashes?","crypto",17,17,0,0.95,1,0,0,10
"345","https://www.reddit.com/r/crypto/comments/mv0l9j/is_there_a_way_to_search_hashed_or_encrypted_data/","elipticslipstick","2021-04-20","Is there a way to search hashed or encrypted data?","Is there an accepted way to search through hashed data or hash it in such a way that it is searchable (full text search)? Something like: 23 encoded as 2*3 and then salted with a large prime (pretend 101) = 606. Then searching records for 2 would validate 606 because its divisible by 2 without telling us that it also contains 3 precluding factorisation.

Something like the above without the obvious shortcomings?","crypto",16,16,0,0.9,1,0,0,19
"346","https://www.reddit.com/r/crypto/comments/m3q4lp/signal_protocol_security_of_messages/","konradovsky","2021-03-12","Signal protocol security of messages","Hi, I'm green when it comes to crypto so sorry if the question is basic but I'm struggling with it.

When we have two devices. One is Alice second one is Bob as always, and we had generated private keys for those users. We did all the 3 DH handshakes and so on. We have now encrypted messages being sent between them and saved encrypted on the database.

The question is:

What will happen and how to deal with a scenario like what happen if Alice broke her phone or buy a new one and create a new private key. How to check if Alice is Alice with a new key and allow her to decrypt the messages and if it is even possible.

I'm creating a chat app that will be mobile and also browser based. With mobile we have not so much problems because the the device stays longer but the browser can be changed a lot and the problem is how to retrieve the history with a new private key.

I'm open to any answer and critique because this can only help me to deliver my users the best product.

Thanks for all answers :)","crypto",16,16,0,0.87,1,0,0,18
"347","https://www.reddit.com/r/crypto/comments/t32cdg/how_do_i_apply_rotational_cryptanalysis_or/","Inevitable_Bug_4824","2022-02-28","How do I apply rotational cryptanalysis or rotational-XOR cryptanalysis when modular addition with a constant is present in the ARX primitive?","I know how to address XOR with constants. But when constants are injected by the mean of modular addition, what can be the solution? (Generally this happens in the key schedule of ARX ciphers) 

Thanks in advance.","crypto",15,15,0,0.83,0,0,1,0
"348","https://www.reddit.com/r/crypto/comments/scqiaj/ckks_faster_way_to_encode/","andru47","2022-01-25","CKKS - Faster way to encode","Hi!

I am struggling to understand how CKKS encoding can be done faster than O(n \^ 2). I read [this paper](https://eprint.iacr.org/2018/153.pdf) where in section 4.1 explains how to encode a vector of complex numbers to an integer polynomial. 

I got how that encoding works but in order to do the two Vandermonde multiplications you need O(n\^2). However, libraries that implement CKKS use something similar to FFT to encode/decode, but I can't really understand how.

Do you know if there are any papers that explain that encoding?

Thank you in advance!","crypto",15,15,0,0.88,0,0,1,3
"349","https://www.reddit.com/r/crypto/comments/rb0x4b/boneh_and_shoups_applied_cryptography_course_pdf/","tom-md","2021-12-07","Boneh and Shoup's Applied Cryptography Course (PDF)","","crypto",16,16,0,0.81,0,0,1,0
"350","https://www.reddit.com/r/crypto/comments/r4tfdq/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-11-29","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",15,15,0,0.84,0,0,1,5
"351","https://www.reddit.com/r/crypto/comments/qymeza/are_prngs_key_derivation_functions/","finlaydotweber","2021-11-21","Are PRNGs Key Derivation Functions?","A PRNG is a mechanism to produce randomness from an initial random seed, so basically a way to derive more secrets from one secret.

Looking at the Wikipedia entry for [KDF](https://en.wikipedia.org/wiki/Key_derivation_function) you find

&gt; In cryptography, a key derivation function (KDF) is a cryptographic algorithm that derives one or more secret keys from a secret value such as a main key, a password, or a passphrase.

Which sounds to me like what PRNGS are. So will it be correct to classify PRNGs as KDFs?","crypto",16,16,0,0.94,0,0,1,54
"352","https://www.reddit.com/r/crypto/comments/qgo6qc/what_does_offer_a_certain_bit_of_security_mean/","finlaydotweber","2021-10-27","What does ""offer a certain bit of security"" mean?","In discussion around cryptography mostly related to keys, i see the expression similar to: ""xyz offers approximately 128 bits of security"" or ""offers approximately 256 bits of security"".

What is exactly meant when we say something offer a certain bit of security?","crypto",17,17,0,1,0,0,1,105
"353","https://www.reddit.com/r/crypto/comments/q4zd92/keyspub_keybase_without_the_cruft/","binaryfor","2021-10-10","keys.pub  Keybase Without the Cruft","","crypto",15,15,0,0.94,0,0,1,60
"354","https://www.reddit.com/r/crypto/comments/ptfqf8/2015_how_to_manipulate_standards_daniel_j/","Zamicol","2021-09-22","[2015] How to manipulate standards - Daniel J. Bernstein","","crypto",16,16,0,0.94,0,0,1,23
"355","https://www.reddit.com/r/crypto/comments/pfmpb4/bulletproof_tls_newsletter_issue_80/","knotdjb","2021-09-01","Bulletproof TLS Newsletter Issue #80","","crypto",14,14,0,0.9,0,0,1,17
"356","https://www.reddit.com/r/crypto/comments/oq53q1/why_the_ubiquity_of_paillier_over_okamotouchiyama/","natatatonreddit","2021-07-23","Why the ubiquity of Paillier over Okamoto-Uchiyama for additively homomorphic encryption?","In my (very very limited) experience with cryptographic voting schemes, I've *only* seen Paillier's encryption scheme used for tally-able votes. This seems a bit odd as Okamoto and Uchiyama actually introduced the trapdoor function used by Paillier. Is there a reason for this?","crypto",13,13,0,0.9,0,0,1,27
"357","https://www.reddit.com/r/crypto/comments/oldolt/cryptopals_212_what_realworld_application_of/","FlyingChainsaw","2021-07-16","Cryptopals 2:12 - What real-world application of crypto does the solution actually break?","I've been working on the Cryptopals challenges and most recently finished [#12](https://cryptopals.com/sets/2/challenges/12). The authors note that this is the first challenge where the solution ""will break real crypto"" but I don't quite understand how.

In the challenge the oracle appends the given plaintext with a secret string and outputs an ECB-encrypted ciphertext of that combination. With the attack developed for the solution (sidequestion: is there a name for the particular technique employed here?) we manage to extract the plaintext of the secret string. That's neat of course, but is this technique then only good for extracting hardcoded strings appended by the oracle? Are there cryptosystems that depend on the secret of such a string, or are there other applications of this technique that I'm missing?","crypto",14,14,0,0.86,0,0,1,17
"358","https://www.reddit.com/r/crypto/comments/ojme7k/comparing_2_hsm_for_purchase/","VtheMan93","2021-07-13","Comparing 2 HSM for purchase","Hello friends!  


Thank you for accepting me into this sub.

I come to you asking about 2 HSM which I have the option to purchase.

I am looking at:

  
**Thales nCipher (A-022000-L) nSHIELD F3** 

or

### Thales nC4035E-000 Solo XC F2

Both are PCI-E Modules, not networked.

Neither of them come with their administrative cards, but they have been zeroized.

I am wondering which one between the 2 would be a better implementation for an external PKI service with MS AD and CA services. Can we even use them without their administrative cards?

the purpose would be remote authentication before a client would be able to connect to an enterprise VPN.

&amp;#x200B;

Thank you in advance for the assistance.","crypto",17,17,0,0.96,0,0,0,34
"359","https://www.reddit.com/r/crypto/comments/ohf9yb/does_anyone_know_if_fernets_python_encryption_is/","Shurlemany","2021-07-10","Does anyone know if Fernet's python encryption is secure?","I've always thought of Veracrypt as the go to in terms of encrypting files and so on. Just wanted to ask you as I'm not in the encryption world if Fernet's encryption is somewhat secure.

&amp;#x200B;

Thank you in advance!","crypto",16,16,0,0.84,0,0,1,26
"360","https://www.reddit.com/r/crypto/comments/o79y5i/european_commission_has_named_a_consortium_of/","Aerothermal","2021-06-24","European Commission has named a consortium of companies and research institutes for the ""EuroQCI"" project - The goal is to investigate the design of future European quantum communication infrastructure employing free space laser communication [X-Post r/lasercom]","","crypto",14,14,0,0.86,0,0,0,24
"361","https://www.reddit.com/r/crypto/comments/nqvww4/whitebox_cryptography_looking_for_people/","quakociaptockh","2021-06-02","White-Box Cryptography - looking for people","Hello.

I am looking for people to help me with cryptanalysis of a white-box cryptography algorithm, based on FAPKC cryptosystem.

&amp;#x200B;

[https://github.com/haael/white-box-fapkc](https://github.com/haael/white-box-fapkc)

&amp;#x200B;

Please ask questions here or write to the email on the github page. Github followers welcome.","crypto",15,15,0,0.94,0,0,0,18
"362","https://www.reddit.com/r/crypto/comments/n5dzb0/question_about_entropy/","Z5DK9","2021-05-05","Question about entropy","According to https://en.m.wikipedia.org/wiki/Entropy_(information_theory), the formal definition of entropy is `H(X)=-sum(P(x)*log(P(x))`.

Given the data set `0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1` (10x `0,1`s),  P(0)=P(1)=0.5, then `H=-0.5*log(0.5)-0.5*log(0.5)=1`.

Given the data set `0,1,1,0,0,0,1,0,0,1,1,1,1,0,1,1,0,0,1,0` (also 10x `0`s and 10x `1`s, but more random),  P(0)=P(1)=0.5, then `H=-0.5*log(0.5)-0.5*log(0.5)=1`.

The two datasets have the same entropy.

Is this correct?

If the answer is yes, how can entropy be a measure of randomness? The second dataset is apparently more random than the first one.

Thanks.","crypto",15,15,0,1,0,0,0,20
"363","https://www.reddit.com/r/crypto/comments/n3qg5c/artifacts_for_the_minerva_the_curse_of_ecdsa/","Litecoin_Messiah","2021-05-03","Artifacts for the ""Minerva: The curse of ECDSA nonces"" paper at CHES 2020","","crypto",14,14,0,0.9,0,0,0,6
"364","https://www.reddit.com/r/crypto/comments/n26fbb/more_secret_codes_a_history_of_cryptography_part_2/","harrysonofbob","2021-04-30","More Secret Codes: A History of Cryptography (Part 2)","","crypto",14,14,0,0.9,0,0,0,5
"365","https://www.reddit.com/r/crypto/comments/mpb7h9/whats_to_stop_this_trivial_attack_on_cbchmac/","anonXMR","2021-04-12","What's to stop this trivial attack on CBC+HMAC","Let's say one is using AES in CBC + HMAC as a poor man's authenticated encryption.

Normally, we ChaCha20-Poly1305, the tag is expected, and the scheme is incomplete without a tag.

With AES-CBC-HMAC what's to stop an attacker stripping off the tag and then making changes to the malleable cipher text.


AES-CBC-HMAC (encrypt then Mac), seems to require both parties to agree that a tag will be delivered with each payload, am I correct her
e?","crypto",14,14,0,0.8,0,0,0,12
"366","https://www.reddit.com/r/crypto/comments/moby99/ecdsa_or_rsa/","xXR01I1Xx","2021-04-10","ECDSA or RSA","Which one is more secure for TLS Certificates? And which curve is better to use (secp256r1, secp384r1, secp521r1)?

Also chrome and certbot have had support for secp521r1 but removed it, why is that?","crypto",16,16,0,0.95,0,0,0,31
"367","https://www.reddit.com/r/crypto/comments/m3lsi3/i_dont_understand_this_implementation_of_tesla/","The_GodKing","2021-03-12","I don't understand this implementation of TESLA for message authentication.","The incentive for this use of TESLA is for the technology used to transmit aircraft position data (GPS) from aircraft. Currently, it's totally unsecure (no encryption or verification). Authentication is needed to verify real aircraft from attackers on the ground injecting fake aircraft that may disrupt flight traffic.

Here's a description of TESLA from [1]:

&gt;As is known to all, TESLA [18], as a lightweight broadcast
authentication protocol, is widely available in wireless communications. The core idea in TESLA, is to make use of the
Keychain, a sequence of keys acquired by continuously utilizing one-way hash function. In TESLA, to achieve authenticity
and integrity of the messages, the broadcaster first employs
reversely the keys in Keychain to produce encrypted message authentication codes (MACs), sent along with the emitted messages. After an amount of messages, the broadcaster publishes used keys of generating MACs, allowing the receiver to verify previously buffered messages for delay. What is more,
the receiver may derive formerly used keys through hash
operations for multiple derivations due to the continuity of
Keychain. It is worth noting that due to the broadcast nature
of ADS-B communications, we can adapt TESLA to the air
traffic surveillance scenario, so as to guarantee the authenticity
and integrity of ADS-B data.

There's also a third party involved (air traffic control, or similar) that publishes parameters and computes keychains.

From my (unreliable) understanding, the keychain is being used so that previous keys can be obtained from the most recent key in the chain, then said keys can be used to authenticate corresponding messages. A delay is used to prevent attackers from grabbing the most recent key and creating a fake message + MAC. The keychain can be verified by recursively hashing back to key_0 (or to the most recent verifiable key presumably), which is publicly published with it's associated anonymised aircraft ID.

There are a couple of things I don't fully understand:

1) Is the key in this context decrypting an encrypted message, or is it just authenticating the MAC? Is the message (position data) unencrypted?

2) The third-party securely send a tuple of (pid, Keychain) to an aircraft so that it can send authenticatable messages. It also sends publicly (pid, key_0) to authenticate keychains. But if you miss this public message then the aircraft is now a false positive ""attacker"" and is now ignored? Is this problem typically solved by the public querying the third-party on a semi-regular basis?

This topic's a little over my head, I'm just mentioning it for a couple of paragraphs a report I'm doing. It's an alternative solution to countering attackers than the one I'm researching.
____________

[1] A Practical and Compatible Cryptographic
Solution to ADS-B Security

DOI: 10.1109/JIOT.2018.2882633","crypto",16,16,0,1,0,0,0,4
"368","https://www.reddit.com/r/crypto/comments/set6xe/were_using_threshold_encryption_and_a_dkg_to/","cointon_nero","2022-01-28","Were using threshold encryption and a DKG to improve voting fairness in online voting systems!","Hey everyone, we've developed a secure voting system based on threshold encryption and a DKG to ensure that votes are secret and that the result can only be revealed after the end of the ballot. We wrote an [article on our blog](https://shutter.ghost.io/announcing-shutter-governance-shielded-voting-for-daos/) on how it works and would be thrilled to hear your opinion!","crypto",16,16,0,0.77,1,0,1,2
"369","https://www.reddit.com/r/crypto/comments/qzxhj4/a_simple_implementation_of_cubehash_in_javascript/","parabirb_","2021-11-22","A simple implementation of CubeHash in JavaScript","Hello! I was bored and decided to make a pure-JS implementation of CubeHash for fun. I do not believe that this is a secure implementation nor do I make any claims on its security, but I would appreciate any thoughts. Thank you.

[https://github.com/parabirb/cubehash](https://github.com/parabirb/cubehash)","crypto",15,15,0,0.83,2,0,2,58
"370","https://www.reddit.com/r/crypto/comments/qbkoo3/encrytping_a_usb_drive_to_use_with_andorid_and/","FriendlyPoppyseed","2021-10-19","Encrytping a USB drive to use with Andorid and Windows","I would like to encrypt a USB drive that has USB-A and USB-C sides and I would like to use it with Windows and with Android too. Is there any encryption app that is compatible both with Windows and Android and I could encrypt the USB drive with that one, then use it with Windows and Android too?","crypto",15,15,0,1,0,0,1,68
"371","https://www.reddit.com/r/crypto/comments/pyrvtp/bounty_random_matrix_oneway_function_100/","AcrossTheUniverse","2021-09-30","[Bounty] Random Matrix One-Way Function (100$)","Hi, I'm offering a 100$ (CAD) bounty to the first person who can break this simple one-way function. All the information can be found here: https://www.youtube.com/watch?v=TdhJuGXPIvE

I'd love to hear what you think.

Thank you!","crypto",15,15,0,0.74,0,0,1,102
"372","https://www.reddit.com/r/crypto/comments/ogaswj/practical_threshold_cryptography/","lpsmith","2021-07-08","Practical Threshold Cryptography","I'm familiar with Shamir Secret Sharing, but I'm more interested in what the cryptocurrency community calls Schnorr Signatures,  which seems to be slightly different notion of the term than used in the cryptography community.   I'm interested in both threshold decryption and threshold signatures, though I'm probably more immediately interested in threshold decryption.  

Ideally,  I want to generate a public key,  indistinguishible from ""normal"" public keys,  so that `m`-of-`n` private keyholders can choose to decrypt a message sent to that public key without ever reconstituting the private key in any one place.  In my intended application, interactive protocols between the private keyholders are perfectly acceptable, almost expected.

Of course, a much more conservative approach would be to:

1.  generate a random password per message
2.  use `age` to encrypt the message, keyed to the password
3.  use Shamir Secret Sharing to split the password into pieces
4.  use `age` to encrypt the pieces, each keyed to a public key.   

And honestly, this would probably almost work for me too.

This is an internal auditing system.   i.e. there isn't going to be a huge amount of inertia between multiple parties if this system needs to be modified,  at least not for a while.

1.  Message rates can be quite high.
2.  Messages themselves can be quite small.
3.  Most messages will never be decrypted.
4.  In most cases, I'm simply trying to do certain things more securely than current best practices,  so in those cases doing something is more probably more important than absolute correctness
5.  In all cases, even in cases where this auditing system would introduce novel(-ish) risks that I'm more reliant on these techniques to mitigate,  it's all in service to an attempt to do things more securely than commonly practiced today.

So, the `age` sketch of a solution has a few problems.  Taken literally, any key stretching on the password KDF is both too expensive and unnecessary.  I'd also worry about having to spawn `n+1` (probably typically 4 to 6, possibly 2x that in some cases) `age` subprocesses per message.  These are more easily fixed implementation details, and I could at least demo and limp along with that scheme for a bit.  But more fundamentally, because messages can potentially be quite short,  and in some cases it would be very undesirable to even consider ""batching"" these short messages into a larger cryptographic envelope, any additional per-message overhead is very costly in the long run (though possibly tolerable in the short run.) Also, I think that minimizing the utility of the metadata to an attacker is a very worthy goal, and my ""ideal"" threshold decryption would serve that goal better than the `age` sketch.

I know that (most) cryptocurrency communities tend to play relatively fast and loose with underlying cryptographic work, so I'm curious what people here would choose if they needed to stand something reasonable up, quickly,  and what they might hope to move to in the longer run.","crypto",14,14,0,1,0,0,1,32
"373","https://www.reddit.com/r/crypto/comments/o70o4e/share_an_easy_encryptdecrypt_tool/","Saturneric","2021-06-24","Share an easy encrypt&amp;decrypt tool","I am a college student. This is actually a front-end project for GnuPG that I recently released to make daily management of the GPG tool easier.

When I learned about GPG, I was somehow interested in it, but felt that it lacked a good GUI front end for the average user. Tried win4gpg helpless bug a little more, and then the operation is not too intuitive, and a friend tried a few times or give up. So I took GPG4USB, which is a nice but no longer maintained project, and made some enhancements, including management and rendering of subkeys, optimization of key uploads and updates from the server, etc. It was written for over a month and is now ready for release, with future updates to address some of the shortcomings of GPG. For example, the ciphertext is too long and the key is synchronized between terminals. I'm still working on it.

Because it is based on GnuPG, and GUNPG is under the framework of OpenPGP, so we don't have to worry about the security compatibility of the algorithm. For encryption, I usually use this to pass some personal private information through ordinary social platforms and friends, and the ciphertext should be unbreakable as long as the private key does not leak the key long enough. Then the signature is also very useful, if there is a special occasion for security, such as sharing a document or a paragraph of speech, you can digital signature the document or text to prove that the document or text is really from your hand.
If you are interested, you can pay attention to my project, and it will be updated and optimized continuously in the future. If so, I hope you can encourage me through STAR

https://github.com/saturneric/GpgFrontend","crypto",14,14,0,0.79,2,0,3,31
"374","https://www.reddit.com/r/crypto/comments/o0kynl/windows_bitlocker_encrypted_laptop_android/","ApricotSilly524","2021-06-15","Windows BitLocker encrypted laptop &amp; Android encrypted phones in Russia","Is Windows BitLocker legal in Russia? the use case is for an encrypted laptop with personal data. The reason for encryption is to secure it in case of theft.

And what is the situation with Android phones in Russia? Almost all Android phones are currently encrypted by default straight from factory since several years ago, and they don't even offer the option for decryption anymore.","crypto",13,13,0,0.85,1,1,1,11
"375","https://www.reddit.com/r/crypto/comments/nwo21o/pollards_p_1_algorithm_b_smooth_or_b_powersmooth/","RisenSteam","2021-06-10","Pollard's p - 1 algorithm - B smooth or B powersmooth?","1) Nigel Smart's book ""Cryptography: An Introduction"" (3rd E) describes the algorithm this way

&gt; Suppose the number we wish to factor is given by   
&gt; N = p · q.

&gt; In addition suppose we know (by some pure guess) an integer B such that **p1 is B-power smooth**, but that q  1 is not B-power smooth. 

2) Silverman's Mathematical Cryptography book describes it thus

&gt; What is the probability that a randomly chosen integer of
size approximately n divides B! (B-factorial)    

&gt; Notice in particular that if n divides B!, then every prime l dividing n must satisfy l d B. A number whose prime factors are all less than or equal to B is called a **B-smooth number**. It is thus natural to ask for the probability that a randomly chosen integer of size approximately n is a **B-smooth number**    

In the algorithm itself we try to compute gcd(a^{B!} - 1, N) to find p. As far as I can see, this will work if (p - 1) is B-smooth.  

Nigel Smart's book uses this example

N = 15770708441 = 135979*115979

He proceeds to find 135979 by finding **B = 180**     

gcd(2^{**180!**} - 1, N) = 135979   

p - 1 in this case is 135978   

sage: factor(135978)    
2 * 3 * 131 * 173

So, in this case, p - 1 is indeed **180 powersmooth**  but that's only because the biggest factor is a trivial prime power i.e. 173^1

If we instead taken an example from Silverman's Book

N = 13927189 =  3823 * 3643   

So trying **B = 14**, we get gcd(2^{**14!**} - 1, N) =  3823 

Factoring p - 1   
sage: factor(3822)      
2 * 3 * 7^2 * 13     

So p - 1 is **14 smooth**, but is not 14 powersmooth because 7^2 not less than 14. 

i.e we used 14! but (p - 1) is not 14-powersmooth.   

Silverman's terminology (p - 1 is B-smooth) works for both his example &amp; Smart's example. Whereas Smart's terminology (p - 1 is B-powersmooth) doesn't work for Silverman's example.  

So is Nigel Smart's description wrong? Or am I missing something?","crypto",14,14,0,0.74,0,0,1,18
"376","https://www.reddit.com/r/crypto/comments/npx1lu/ecdh_choice_of_x_coordinate/","anonXMR","2021-06-01","ECDH - choice of x co-ordinate","I've read informally that the X co-ordinate of the shared secret is hashed to create key material in the ECDH process.

Why/how was this convention reached. I've googled a lot but can't find an authoritative source.","crypto",14,14,0,0.85,0,0,0,20
"377","https://www.reddit.com/r/crypto/comments/n1ph8y/thoughts_about_the_session_secure_messenger/","greenreddits","2021-04-30","thoughts about the Session secure messenger security audit ?","Hi, just an end user here looking for E2EE p2p messengers... Been following the Session ([Oxen.io](https://Oxen.io)) messenger lately. One hiccup was the devs abandoned PFS, arguing it wasn't necessary. But now the results of their security audit have been published and would appreciate if anyone capable could have a look at it to see whether it's really safe to use. Thanks. Links are below :

[https://getsession.org/session-code-audit/](https://getsession.org/session-code-audit/)

[https://blog.quarkslab.com/audit-of-session-secure-messaging-application.html](https://blog.quarkslab.com/audit-of-session-secure-messaging-application.html)

[https://blog.quarkslab.com/resources/2021-04-29\_audit-of-session-secure-messaging-application/20-08-Oxen-REP-v1.3.pdf](https://blog.quarkslab.com/resources/2021-04-29_audit-of-session-secure-messaging-application/20-08-Oxen-REP-v1.3.pdf)","crypto",14,14,0,0.94,0,0,0,48
"378","https://www.reddit.com/r/crypto/comments/n1174t/how_does_verifiable_computation_work_are_there/","Julian_0x7F","2021-04-29","How does verifiable computation work? Are there any frameworks (e.g. C++, Python) for that already?","Alice performs a very complex computation with algorithm X with an astronomic computational cost at timepoint t.

Is it possible for Bob to verify that the computation has been performed with algorithm X at timepoint t with almost no cost for him?

Might homomorphic encryption be useful for that, and if yes, how?","crypto",12,12,0,0.76,0,0,0,12
"379","https://www.reddit.com/r/crypto/comments/ss80mb/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-02-14","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",13,13,0,0.93,0,0,0,2
"380","https://www.reddit.com/r/crypto/comments/s8nu09/any_feedback_on_this_new_class_of_ciphers_called/","Mircea85","2022-01-20","Any feedback on this new class of ciphers called SKREM-like which are based on hardness of modeling result of indirection operation over a truly random address space (ie. pointer dereferencing) which I introduced last year?","Hi folks,

I noticed that many of you here enjoy breaking ciphers proposed by ""newbie"" researchers, especially those based on Chaos Theory.

This summer I published in CRYPIS2021 a scheme for a new category of ciphers which I call SKREM-like (link to full paper text below for those patient enough to read it). As far as I know it is a new approach and I haven't encountered anything like it published publicly anywhere and ofc, not discussed on this forum so far. I think it is interesting enough that it will be enjoyable for you folks to try to find some obvious flaw with the security of its reasoning or maybe give some well known literature name for this kind of ciphers which I do not know.Btw, as a challenge I claim (without proof) that the scheme is ***provably*** **unbreakable**. And as an established computer science specialist I do understand kind of the gravity of what that means.

*The idea in a nutshell is like this*:You have a large grand master table of truly random bits sampled from nature (initial mastertable) and a short secret key (initial secret\_pool).You use the pair (secret\_pool, current\_mastertable) to sample some pair of locations in current\_mastertable (basically having parts of the secret pool act as the value of some pointer which accesses ""memory locations"" in the current modified mastertable). You use the actual values in the master table at those locations to sample new bits.. to increase the size of the secret pool. You do not reuse locations, so once ""touched"" they are eliminated from consideration.You permute both current\_mastertable and secret\_pool based on current secret\_pool to obtain the next generation mastertable and secret pool.When the secret pool is enough so that it can be used directly to sample enough locations in the master table to represent all bits of the plain text, instead of growing the secret pool, at the next iteration you change the values at respective locations in it so that their sequence actually encodes the plain text.You then publish the initial master table, enriched with the modifications resulting from the last step above.

**So basically you grow the key size from something very small to something more than enough to do a XOR encryption of the plain text, but you do this by ""stealing entropy"" from some large pool of truly random data**. And the way in which you steal this entropy works as a function of both ""what you have so far"" and the then-current state of the large random data blob. Then you can essentially publish the large blob since without the secret key it will not be feasible to reproduce the final secret pool other than by trying out secret keys -- since the original blob is truly random, the space of projections F\_K(G) for all short secret keys K will be (except with negligible probability) just an incompressible set of essentially 2\^|K| streams of random bits, with no particular computable properties of this set at all: the argument being that, otherwise, you would in fact be able to construct a martingale on G, thus G not being random.

An additional novelty is the fact that you use indirection (ie. pointer dereferencing) to combine external random data into the secret pool - and that indirection is based on a secret pool. So, there is no single function which maps the secret\_pool bits into the newly generated secret bit -- but in fact a different function (which considers G) is picked each time such an enrichment occurs. And the set of such functions is not a computable family (much less something simple like an algebraic function) and -- further more -- each new function depends on the entire history of chosen functions, which in turn depend on the prior state of the grand master table and the secret pool, all the way back to the short secret key.

So basically I claim (informally speaking) that the hardness of SKREM-like ciphers is based on the hardness string compression of G which is equivalent to ""no constructive martingales over G"" which is intractable in the general case. The argument being that, if you are able to break SKREM scheme than with that you would be able to construct a martingale over G, which in turn would mean you are able to decide its compression (Kolmogorov complexity), which, for sufficiently large |G| is incomputable (except of course with negligible probability ofc.. eg. you get a G made of all 0's).

Now within the bounds of the very general description above a lot of insecure schemes can be built. For example one which just uses the secret pool to get some word w1 from G and the replace the secret pool with w1.. or just append w1 bit at the end of the secret pool and sample modulo something from it (thus having a single guess of some w1 be sufficient to decide all future randomness in the algorithm), so clearly more details are needed (See PS2 for a more detailed description of what I have in mind).

However, I do not want to make this post about mixing functions or permutation functions and even not about Chaos Encryption in general. I would like to gather some of your thoughts on the core of the approach itself: **growing a secret pool from a small size, via indirection operations over a larger, truly random blob (with both evolving over iterations, in a deterministic manner)**. So in some metaphorical sense you could call SKREM a key derivation algorithm.. but with the two major novelties introduced: using additional ""helper"" input consisting of truly random blob and using indirection instead of any fixed algebraic operation, no matter how complex (so not even Chaos Machine or a OWF). Of course, using an ok mixing function in step 7 and some decent CSPRNGs in steps 8 and 9 below is important - but the hardness of breaking SKREM should (in my claim) not rely on the security of either of these: so long as you don't make some major errors to desecuritize the scheme when choosing (like with the example above), ***any*** *\[decent\]* *mixing function and PRNG (should not really need to be CSPRNG but if it is.. more so!) should do*.

I would really like to hear your thoughts on this folks. **So how would you go about cryptanalyzing something encrypted with SKREM?**

If you want concrete details (so something implementable which you can criticize), I include links to two published papers on this and the detailed description of what I mean.

Best,MirceaApplication of SKREM-like ciphers [https://aircconline.com/csit/abstract/v11n9/csit110912.html](https://aircconline.com/csit/abstract/v11n9/csit110912.html).Hiding Data in Plain Sight: Towards Provably Unbreakable Encryption with Short Secret Keys and One-Way Functions [https://aircconline.com/csit/abstract/v11n9/csit110914.html](https://aircconline.com/csit/abstract/v11n9/csit110914.html).

**PS2. More detailed description:**  
**1.** You have a large master table (vector) G of truly short random words (sampled from nature, say solar radiation). Say 2\^32 such truly random words, each 2 bits long.  
**2.** You have a pair of short secret keys (like 0.5-64k), say 512 bits each. You split each key into small chunks (eg. 64 bits x 8 chunks).  


**3.** You use each short secret chunk to sample a pair of ""locations"" in the grand master table, say l1 and l2 (so a projection from 64 bits to 32 bits), which hold words w1 and w2. Then you add the bit from the comparison w1 &lt; w2 / w2 &lt; w1 to your pool of secret bits. So initially you get eg. 8 x 1 bit (unless w1 == w2 for some pairs) from this indirection operation.  
**4.** You eliminate the used locations l1 and l2 from the grand master table (eg. by renaming subsequent locations to be indexed by -1 and -2 respectively).  
**5.** You permute O(1) of the locations in the working copy of the grand master table (for example, switching l1 and l2 in G under the numbering after step 4 - a more sophisticated scheme is proposed in the papers) based on the values of the current secret chunk (so you get another projection from 64 bit to at most 32 bits in order to do this). For something more sophisticated, for example if w1==w2 you reverse the order in the grand master table of locations between l1 and l2.  
**6.** You permute O(1) of the order of the chunks in the secret pool by some method similar to point 5.  
**7.** You recombine the bits in the secret pool according to some rule (one such proposed in each paper above). For example setting chunk\_i = (old\_bit new\_bit old\_bit new\_bit old\_bit old\_bit ...)\^-1 mod p for some prime p (with |p|&gt;64 bits) and then ""normalizing"" it back into uniformly sampled 64 bit number.  
**8.** To get a new pair of ""projected"" locations (ie. 32 bits from a 64 bit chunk), essentially the secret chunk data is used as a seed to a CSPRNG. In the papers I proposed that this be a Chaos Machine. But something simpler is ofc possible.  


**9.** When you have grown the secret pool by enough bits (eg. doubled the number of chunks or simply added another one) you do some general transformation on the entire secret pool. Here you can do something like instantiate a Chaos machine with the resulting state and execute it some arbitrary number of iterations; or you can simply do \[secret\_pool\^1 (mod p) --&gt; renormalized back to uniform 2\^|secret\_pool\_size| number\]. Or you can use a candidate OWF also, ofc.

**10.** Repeat steps 3-9 until the secret pool size has grown large enough to hold more than 2\*log|G|\* plain\_text\_size bits (eg. 32 bits x 1,048,576 x 8 for a 1 MB plain text). But also continue until at least 50% of G has been ""touched"" (have had its locations eliminated).

**11.** Repeat steps 3-8, but instead of using w1 and w2 in step 5 to ""obtain"" a new secret bit, make sure that w1&lt;w2 if the current bit of plain text is 0 and w2&lt;w1 if it is 1. So basically change the order of locations in G to make sure that at this stage the ""additional secret bits"" which would be generated at steps 5 in a normal iteration actually encrypt the plain text.

**12**. You publish the original master table G (you were actually working on a copy of it say in the algo above), altered only with the modifications resulting from step 11 above. This is the cipher text.","crypto",12,12,0,0.84,0,0,2,43
"381","https://www.reddit.com/r/crypto/comments/s6uy65/monthly_cryptography_wishlist_thread/","AutoModerator","2022-01-18","Monthly cryptography wishlist thread","This is another installment in a series of monthly recurring cryptography wishlist threads.

The purpose is to let people freely discuss what future developments they like to see in fields related to cryptography, including things like algorithms, cryptanalysis, software and hardware implementations, usable UX, protocols and more.

So start posting what you'd like to see below!","crypto",12,12,0,0.89,0,0,0,4
"382","https://www.reddit.com/r/crypto/comments/qfdbwm/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-10-25","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",13,13,0,0.83,0,0,1,76
"383","https://www.reddit.com/r/crypto/comments/q6rnef/need_help_how_do_i_secure_the_communications/","benthib","2021-10-12","Need help: how do I secure the communications between my crypto-coprocessor and my main IC. (explanation in comments)","Im designing an embedded solution for a one-time-use attachment that needs to be verified as a genuine product. I am planning on using Maxim Integrated DS28E50 and DS2477. The DS2477 would be on the one-time-use product and would plug into the main machine and talk to the DS28E50(crypto-coprocessor) to verify that it is in-fact a genuine part. This all seems straightforward and well protected, but then I run into a problem. I then need the coprocessor to tell the main IC(a Samd21), that I have a new genuine part available and Im unsure how to safely do so knowing that someone could open this up product and listen or use a side-channel attack on the SamD21. Am I looking at this all wrong or not using the correct products for this problem?","crypto",12,12,0,0.74,0,0,1,74
"384","https://www.reddit.com/r/crypto/comments/plfauj/understanding_the_linear_multipermutations_in/","[deleted]","2021-09-10","Understanding the Linear multipermutations in IDEA NXT","Was looking into other AES finalist earlier and started with IDEA NXT from this pdf refered in wiki.

[https://web.archive.org/web/20070928014200/http://www.mediacrypt.com/\_pdf/NXT\_Technical\_Description\_0406.pdf](https://web.archive.org/web/20070928014200/http://www.mediacrypt.com/_pdf/NXT_Technical_Description_0406.pdf)

was unable to understand what  linear multipermutations is . tried to find some simple explanations online . unable to find anything. Need some help","crypto",14,14,0,0.94,0,0,1,24
"385","https://www.reddit.com/r/crypto/comments/p9eoze/does_using_windowscompatible_filesystems/","cryptomann1","2021-08-22","Does using Windows-compatible filesystems introduce any sort of open source blobs?","I want to create a small volume for documents which I will open with Tails Linux distro only (so the contents of the encrypted file are opened only on RAM), so I don't really care about Windows. Which filesystem should I use?

Im also paranoid about any possible leak of information because i've heard journaling file systems leak information so im not sure which to use.

&gt;When a file-hosted VeraCrypt container is stored in a journaling file system (such as NTFS or Ext3), a copy of the VeraCrypt container (or of its fragment) may remain in the free space on the host volume. This may have various security implications. For  example, if you change the volume password/keyfile(s) and an adversary finds the old copy or fragment (the old header) of the VeraCrypt volume, he might use it to mount the volume using an old compromised password (and/or using compromised keyfiles using an  old compromised password (and/or using compromised keyfiles that were necessary to mount the volume before the volume header was re- encrypted). Some journaling file systems also internally record file access times and other potentially sensitive information. If you need plausible deniability (see section Plausible Deniability), you must not store file-hosted VeraCrypt containers in journaling file systems. To prevent possible security issues related to journaling file systems, do one the following:

Also, in case I use FAT32, since it's Windows compatible, does it mean there any proprietary blobs on the bootloader or something?

Possible options given:

Filesystem:

1. None
2. FAT (I assume this is FAT32? It only says ""FAT"")
3. Linux Ext2
4. Linux Ext3
5. Linux Ext4
6. NTFS

Is there any Linux only option where you are safe from any possible leaks and whatnot?

Does this leaks due journaling file systems problems only matter for containers or for FDE too?","crypto",15,15,0,0.8,0,0,1,27
"386","https://www.reddit.com/r/crypto/comments/p8hq1j/can_keepassxc_leak_data/","cryptomann1","2021-08-21","Can KeepassXC leak data?","There's an entire section on the pdf manual about Veracrypt about how the encrypted container may leak data when journaling filesystems are present, USB pendrives, etc. 

How can one guarantee that no leakages happen? It's just not possible unless you use HDD?","crypto",12,12,0,0.82,0,0,1,39
"387","https://www.reddit.com/r/crypto/comments/otruqd/considerations_and_implications_of_publicly/","Norpyx","2021-07-29","Considerations and Implications of Publicly Available Ciphertext at-rest","This is partially related to the _application_ of cryptography, which calls into question whether or not this post breaks the last rule of posts not being related to Systems that _use_ cryptography. If it does, I apologize.

In a system I'm developing, the database is publicly accessible by design. Aside from using strong encryption and hashing algorithms, like SHA3-512 and AES-128, are there other implications/considerations to making this ciphertext publicly available?

Most systems have layers of security that include things like access-control that help ensure that the ciphertext isn't available publicly, outside of maybe a breach of some sort. However, I'm also fully aware that ciphertext is often readily available during transportation, like over VPNs, Secure Tunnels (TLS), etc. But this isn't the same as data at-rest being publicly available.

Current considerations include:

- Generating AES IVs each time the data is encrypted and storing it alongside the encrypted data (I've been told storing the IV in plaintext is not an issue, even for KPA)
- Ensuring keys are strong and stored securely themselves (incl. ensuring that encrypted Master Keys have strong passphrases if their ciphertext is publicly available, or securing the encrypted Master Keys privately)

Obviously, this has nothing to do with the End User application or good/bad implementations of algorithms in libraries. This is mainly related to the security implications of making available and distributing publicly ciphertext at-rest. Are there serious concerns here that would make this a particularly unwise thing to do? My gut tells me yes, but I haven't yet explored all possible scenarios.","crypto",11,11,0,0.88,0,0,1,47
"388","https://www.reddit.com/r/crypto/comments/nem6fw/a_naive_memoryhard_passwordhashing_algorithm/","Heroiini","2021-05-17","A naive memory-hard password-hashing algorithm","As a vocal hater of Argon2 family of memory-hard password-hashing algorithms, I've always preferred to use *provably memory-hard* [Balloon hashing](https://crypto.stanford.edu/balloon/)  ([pseudocode](https://camo.githubusercontent.com/b1e939a8e4112be3b84c5d65f8a456f3c921b1694ded08ab80af4e8002f68ce5/68747470733a2f2f692e696d6775722e636f6d2f5567576950537a2e706e67)) which I consider to be significantly more elegant algorithm than Argon2. However, I wonder if there exists even simpler password-hashing constructions that achieve memory-hardness under the definition *S·T = ©(n²)*; informally: reducing the amount of memory storage *S* causes (at least) corresponding relative increase in the execution time *T* so that the time-space product *S·T* remains lower bounded by *©(n²)*.

**Isn't the naive algorithm described below memory hard?** I don't see any way to break the lower bound *S·T = ©(n²)* assuming a typical model of computation. Either the algorithm is a memory-hard function or I'm missing something major.

    import binascii, functools, hashlib
    
    """"""
    kdf(pw, n, H)
        = H(reversed(A)) for A[1] = H(pw), A[i] = H(A[i-1]) where 1 &lt; i &lt;= n
        = H(A[n] A[n-1] ··· A[2] A[1])
        = H( H(H(ïH(H(pw))ï)) ··· H(H(pw)) H(pw) )
    """"""
    def kdf(pw, n=32, H=lambda msg: hashlib.blake2s(msg).digest()):
        # A = [H(pw), H(H(pw)), ···, H(H(ïH(H(pw))ï))] = [HO(pw) | k  [1, n]]
        A = functools.reduce(lambda L,_: L + [H(L[-1])], range(n), [pw])[1:]
        # kdf(pw) = H(reversed(A)) = H( H(H(ïH(H(pw))ï)) ··· H(H(pw)) H(pw) )
        return binascii.hexlify(H(b''.join(reversed(A)))).decode()
    
    # 76ca050ba53c61dc33d672342760dbc8e24a8c3ba10b28c5cc2d1fa0452667d0
    if __name__ == '__main__': print(kdf(b'swordfish'))

Let *kdf\_salted(salt, pw, n, H) = kdf(salt + pw, n, h)* if password salting is required. Also, let *H = BLAKE2s* so that the overall algorithm is constant-time and reasonably side-channel resistant.

Finally, I suppose the *amortized* time-space product of the naive algorithm is sub-quadratic (formally: *S·T = o(n²)*) in the *parallel random-oracle model* (pROM) mentioned in the [Balloon paper](https://eprint.iacr.org/2016/027.pdf). I have no idea wtf this means in practice, but most likely this is the case because Balloon hashing  also has sub-quadratic amortized time-space product *S·T = O(n**^(7/4)*) *= o(n²)* in pROM. Anyway, the practical implications of this might be limited since the conclusion of the paper raises the hardware implementation of pROM attacks as a open question for further research.

Congratulations and thank you for reading through the post.","crypto",11,11,0,0.8,0,0,0,19
"389","https://www.reddit.com/r/crypto/comments/n8l144/devurandom_to_directly_generate_symmetric_key/","john_alan","2021-05-09","/dev/urandom to directly generate symmetric key material","Following up on a conversation [here](https://reddit.com/r/crypto/comments/n7aaic/_/gxdi2oy/?context=1), 

I just wanted opinions, on modern Linux and macOS, dev/urandom is an appropriate way to generate random numbers for cryptographic use right? Ie. symmetric key material

(Barring exceptional circumstances like containerised OS with not enough entropy)","crypto",13,13,0,0.88,0,0,0,29
"390","https://www.reddit.com/r/crypto/comments/n4o9v2/fheorg_meetup_4_developer_tools_for_homomorphic/","randhindi","2021-05-04","FHE.org meetup #4 - Developer tools for Homomorphic Encryption","Hi Everyone! 

We are hosting our next online meetup for [FHE.org](https://FHE.org), where Alex Viand will be talking about developer tools for homomorphic encryption.

If you are interested, you can join here for free: [https://www.meetup.com/fhe-org/events/277978044/](https://www.meetup.com/fhe-org/events/277978044/)

See you there!","crypto",13,13,0,0.85,0,0,0,7
"391","https://www.reddit.com/r/crypto/comments/m9emtw/why_is_twin_elgamal_cca_secure_under_cdh/","duttish","2021-03-20","Why is twin ElGamal CCA secure under CDH assumption?","I'm currently nearing the end of Bohnes Cryptography 1 course, but he just said that twin ElGamal is CCA secure with just the computational Diffie-Helman assumption as base, instead of the interactive Diffie-Helman with normal ElGamal. But...he didn't explain why it's CCA secure, he just said that it is. So now I'm wondering if any of you fine folk either could explain, or point me towards some resource with more information on this?","crypto",12,12,0,0.81,0,0,0,2
"392","https://www.reddit.com/r/crypto/comments/sbjngg/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-01-24","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",12,12,0,0.94,0,0,1,5
"393","https://www.reddit.com/r/crypto/comments/s24su9/cfp_call_for_papers_for_hardweario_security/","hardweario","2022-01-12","[CFP] Call for Papers for Hardwear.io Security Conference USA 2022 is OPEN!","Hey Crypto group, have you worked intensely and secretly for years on end developing an open-source tool or a cool research project that will revolutionize the hardware security world? Or maybe you've got something less intense? No matter. We want to see it, anyway. Chip design is always a very hot topic and our audience loves it: [https://www.youtube.com/watch?v=-WUdvGaMbig](https://www.youtube.com/watch?v=-WUdvGaMbig)

**SUBMIT your work to** [**Hardwear.io**](https://hardwear.io/) **Security Conference USA 2022:** [https://hardwear.io/usa-2022/cfp.php](https://hardwear.io/usa-2022/cfp.php) till the 1st of March.

See you in Santa Clara, US between 9-10 June 2022! 

https://preview.redd.it/qutwnwpqz8b81.png?width=1200&amp;format=png&amp;auto=webp&amp;s=093f3b463d23f0b8927bf4a5779d6df0d47fba0b","crypto",12,12,0,0.84,0,0,0,0
"394","https://www.reddit.com/r/crypto/comments/qsiwez/private_keys_and_single_points_of_failure/","emasculine","2021-11-12","Private keys and single points of failure","i know that crypto currency is off topic here, but it nicely illustrates a larger problem with using public key cryptography. there have been stories of people (or heirs) losing access to the money because the private key is password protected. this can happen for any number of other things too like encrypted files, your device getting stolen, etc.

it's always bothered me that private key security is something i don't see talked about much. maybe that's on me, but with consumer grade use of keys that's probably on a whole lot of people. on servers they are relying on having enough clue to protect them, but we all know how well that often goes. but for consumers the threat is magnified since there is absolutely no expectation of clue. for blockchain in particular loss of a private key means you are SOL as far as i've heard.

so what do others think about this general problem? are their best practices? are they applicable to consumer grade stuff?","crypto",13,13,0,0.78,0,0,1,129
"395","https://www.reddit.com/r/crypto/comments/qryzhb/easy_to_use_public_key_system/","spymaster1020","2021-11-12","Easy to use public key system?","I want to be able to give my friends a business card with a QR code on it containing my public key, and a way to store my private key on paper instead of on my computer. They aren't into cryptography or programming as I am so the app or program they use needs to be easy to use for a novice. They would still need to enter the public/private key to encrypt/decrypt but dont need to know what to p and q values are. Does anyone know of such a system?","crypto",10,10,0,0.76,0,0,1,116
"396","https://www.reddit.com/r/crypto/comments/pu7uwt/proof_of_inclusion_in_merkle_trees/","sigma-protocols","2021-09-23","Proof of inclusion in Merkle trees","I've recently stumbled upon Merkle trees, but I'm confused as to which of these two \[entire tree, only root\] is actually stored as reference.

Suppose we have a Merkle tree whose sole purpose is maintaining the integrity of files \[a, b, c, d\].

                            root = h( h(ab),h(cd) )
    
            h(ab) = h( h(a),h(b) )        h(cd) = h( h(c),h(d) )
    
               h(a)      h(b)                 h(c)      h(d)
                 a          b                   c         d

and upon initialization, we compute the Merkle root and store the root somewhere (articles I've consulted mention only the root as being stored but never the whole tree which confuses me). After some time, we would want to ensure that file C is not corrupted, so we start by hashing file C, which then gives us h(c), but without knowing h(d) and h(ab), how would we be able to reconstruct the tree and prove the inclusion of c? 

Would that mean that the a copy of the entire tree, including leaf nodes, need to be stored somewhere for proofs?","crypto",12,12,0,0.85,0,0,1,40
"397","https://www.reddit.com/r/crypto/comments/pfjlco/what_protocol_prevents_hackers_from_simply/","Nachf","2021-09-01","What protocol prevents hackers from simply sending a copy of whatever a user sends while logging in?","To clarify, let me use an example.

A user is logging into xyzxyz.com. They type their password, foobar into the login, and the password is scrambled through use of whatever functions xyzxyz.com uses for their logins. Maybe its put through a one-way hash function and compared to a hash of the password in the websites databases.

Now, an eavesdropper sees the login traffic coming into the xyzxyz server. They decide to simply grab the hashed password and send it again, this time with their own computer.

This would generate a valid login, wouldnt it? What mechanisms are in place to prevent this from happening?

Im sorry, Im sure this is probably a very basic question, but I just havent been able to find answers to it online.","crypto",11,11,0,0.77,0,0,1,34
"398","https://www.reddit.com/r/crypto/comments/p9u5i7/what_is_the_best_encryption_program_for_usb_drive/","perpetualvagabond","2021-08-23","What is the Best Encryption Program for USB Drive?","Hi, what is the best (portable) encryption program for a USB drive. I've been using Windows Bitlocker so far, but prefer not to trust Microsoft with my encryption. :) I was thinking VeraCrypt, but based on the article below it seems VeraCrypt can be cracked quite easily? Would love to hear what you guys think is the best option for a portable drive. Thanks. :)

macobserver.com/news/elcomsoft-cracks-veracrypt/","crypto",12,12,0,0.94,0,0,1,25
"399","https://www.reddit.com/r/crypto/comments/o1gjns/encryption_provide_better_alternative_using/","atoponce","2021-06-16","Encryption: Provide better alternative using libsodium for encryption by chrisbra · Pull Request #8394 · vim/vim","","crypto",12,12,0,0.85,0,0,1,11
"400","https://www.reddit.com/r/crypto/comments/nxq07u/how_can_i_make_my_own_encryption_method_on_paper/","GamesRealmTV","2021-06-11","How can I make my own encryption method ""on paper""","I just want to make an unique encryption method, like they used to make thousands of years ago, i don't want anything fancy, just to send encrypted message between me and other people that will have the method to decrypt them.","crypto",13,13,0,0.81,1,0,1,25
"401","https://www.reddit.com/r/crypto/comments/nplg11/how_do_i_use_seed_in_rngcryptoserviceprovider/","[deleted]","2021-06-01","How do I use seed in RNGCryptoServiceProvider.","do anyone knows how to use seed in RNGCryptoServiceProvider in C#.","crypto",12,12,0,0.81,0,0,0,17
"402","https://www.reddit.com/r/crypto/comments/nnd2d0/bulletproof_tls_newsletter_77/","knotdjb","2021-05-29","Bulletproof TLS Newsletter #77","","crypto",13,13,0,0.79,0,0,0,2
"403","https://www.reddit.com/r/crypto/comments/n4ybvk/finite_fields_used_in_crypto/","anonXMR","2021-05-04","Finite fields used in crypto","I understand a field is different to a ring or group. 

It requires the elements of the field can be reached via + - * and /. 


I cannot see how this works in cryptography related fields. Like 2^255 - 19 prime field. 

How can we reach all elements in that integer based field with divide operation?","crypto",12,12,0,1,0,0,0,21
"404","https://www.reddit.com/r/crypto/comments/mzpwp7/lossy_trapdoor_functions/","WizardOfMenlo","2021-04-27","Lossy Trapdoor Functions","Hi everyone! 

Recently, within the context of a seminar, I gave a talk on Lossy Trapdoor Functions, based on the similarly named [paper by Peikert and Waters](https://eprint.iacr.org/2007/279). LTDFs are a very interesting primitive that allows for indistinguishable 'switching' between an injective mode and a lossy mode, which enables very elegant reductions in the context of game hopping proofs. Furthermore, the paper also presents the first constructions of TDFs from discrete logarithm based problems and from lattices, which are interesting in their own right. 

Hope you will enjoy!

[https://youtu.be/OSMPGjg3Vpw](https://youtu.be/OSMPGjg3Vpw)","crypto",12,12,0,0.85,0,0,0,11
"405","https://www.reddit.com/r/crypto/comments/mqns8g/known_plaintext_against_stream_ciphers/","Gar3th","2021-04-14","Known plain-text against stream ciphers","Hi,

I read that XOR is the primary convolution in a stream cipher. The key stream is generated by a key and a PRF and then XOR with plaintext. 


I also know that ciphertext ^ plaintext == key. 


Thus isnt it easy to defeat stream cipher if you know some plaintext of the ciphertext?


XOR the know plaintext with the ciphertext to reveal part of key stream?","crypto",14,14,0,0.86,0,0,0,13
"406","https://www.reddit.com/r/crypto/comments/n6a5rk/draft_functional_definition_of_endtoend_secure/","alecmuffett","2021-05-06","Draft ""Functional Definition of End-to-End Secure Messaging"" - to be E2EE it must quack like E2EE","","crypto",23,23,0,0.83,0,0,0,12
"407","https://www.reddit.com/r/crypto/comments/n3i8z9/a_shameful_job_question/","aidniatpac","2021-05-02","A shameful (job) question","Hey, I am a junior cryptographer and i can't seem to find my first job. The country i reside in doesn't seem to have much opportunities so i mostly look for remote.

Here is the problem: I have been searching for 8 months and I'm totally desperate. I know it's enormous in the field and would appreciate insight/help from more experienced persons. I have a github and try to be proactive, i sent many proposition, am not waiting to just see a vacancy.... but the few that answer tell me i lack experience and i had maybe one occasion so far that could have lended a job but sadly it did not work out.

I suppose i am not searching well but i dont know what is wrong.

If any of you can help even a tiny bit i would be delighted.

Sorry for eventual typos, I'm on my phone.

edit: My Background is a Master's that focused on fundamental math and implementation. I am looking for my first Hire job (I chose a university as an internship and with covid it didn't go smoothly). I am looking for basically anything related to crypto, as long as i can (with my skills) do or learn to do it. I have no idea what the job titles though are, I search jobs through keywords mostly like 'cryptography'.","crypto",23,23,0,0.82,1,0,0,37
"408","https://www.reddit.com/r/crypto/comments/mgm8wf/preventing_mitm_between_two_microcontrollers/","TheSpixxyQ","2021-03-30","Preventing MITM between two microcontrollers","Hello, I have recently started learning about cryptography for my small personal project and for extending my knowledge.

Basically I will have several MCUs - one secure MCU (sMCU - for communicating with flash memory), one less secure MCU (nMCU - for Bluetooth functionality) and one super secure MCU (xMCU) which will (somehow) ensure that those two other MCUs were not MITM'ed. And my need is to securely communicate between sMCU and nMCU.

That xMCU idea came after I've learned how asymmetric cryptography works and that public keys can be sniffed and communication hijacked.

I've also learned that I shouldn't save any secrets into the MCU OTP memory, because it's quite easy to read even with proper fuse bits set.

So, is there *any* way to achieve this? I don't have (yet) much knowledge about CA, but would it be possible to somehow involve root CA saved in my xMCU? Like I would pre-generate CA, some keys and then stored CA's public keys to my two MCUs.  
Then my idea was something like: generate new key-pair on xMCU, send public key to nMCU, nMCU would verify that received public key using pre-stored CA's public key and if it was right, I would generate another key-pair on nMCU, encrypt my new public key by received public key and send it back to xMCU.

I hope I've explained it well, because I'm getting a little lost in it, there's now too much keys now in my idea:D

But is something like this possible? Or am I overthinking it and there is some simpler method?","crypto",26,26,0,0.97,0,0,0,35
"409","https://www.reddit.com/r/crypto/comments/s61g6z/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-01-17","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",26,26,0,0.96,2,0,0,2
"410","https://www.reddit.com/r/crypto/comments/rstlgh/what_makes_keyless_cars_are_secure/","kij12345","2021-12-31","What makes keyless cars are secure?","I was wondering what makes keyless cars secure. From my understanding, key has a button cell which wouldn't be capable of powering chip that could handle complex mathematical operations, so car has to find other way of authenicating a key. I hope car manufactures don't rely only on obscurity of the used algorithm and response delay.

So again, what makes keyless cars secure?","crypto",25,25,0,0.77,1,0,1,9
"411","https://www.reddit.com/r/crypto/comments/rbf7iw/covert_encryption/","foonoxous","2021-12-08","Covert Encryption","We are creating a format and open source software based on ChaCha20-Poly1305, Argon2 and Curve25519 (using existing SSH, Age, Minisign and Wireguard keys). Some readers might find it interesting that this is a PURB-like technology where encrypted files look exactly like random data, and as far as we know the only such application being actively developed.

The aim is to make message and file encryption based on modern cryptography simple to use, with the expressed goal of replacing PGP with a better solution.

Covert is still in early development, and that is also the reason why I am writing /r/crypto: we desperately need scrutiny and feedback from you. If there is anything in the specification that could be done better, we can still easily change it.

Please have a look, check the specs, give it a test run, and especially tell what you did or did not like, or what you would like to have.

https://github.com/covert-encryption/covert","crypto",23,23,0,0.84,0,0,1,17
"412","https://www.reddit.com/r/crypto/comments/ra482k/how_does_tls_handle_aescbc/","XiPingTing","2021-12-06","How does TLS handle AES-CBC?","I am writing an HTTPS server from scratch. I am using [this](https://tls.ulfheim.net/) as a guide and I am nearly there but struggling with nuances of AES-CBC encryption as it relates to TLS 1.2. The bug could either be in the MAC, padding or how I have implemented the CBC mode.

The plaintext I want to encrypt (per the link) is: 14 00 00 0c 84 4d 3c 10 74 6d d7 22 f9 2f 0c 7e.

I have appended the server MAC: 2ad8bdd8c601a617126f63540eb20906f781fad2, to the message.

I have then appended 11 padding bytes (0b 0b ...), followed by the padding length (another 0b).

The padded plaintext is then:

1400000c844d3c10746dd722f92f0c7e2ad8bdd8c601a617126f63540eb20906f781fad20b0b0b0b0b0b0b0b0b0b0b0b.

Is this correct?

My server write key is 752a18e7a9fcb7cbcdd8f98dd8f769eb, which I have converted to AES round keys.

The IV is 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60.

I XOR the first 16 bytes of the message with the IV. I then AES encrypt with the write key. This gives 16 bytes of cipher text:

18 e0 75 31 7b 10 03 15 f6 08 1f cb f3 13 78 1a, which is the same as the link. Great. I then XOR this with the next 16 bytes of my message and AES-encrypt. This gives: d0 1b ea e5 8d c5 0d 30 8e b3 0e dc a0 38 62 fd which is wrong...

So my question is then:

What do I feed into my cipher? Am I padding my messages correctly?","crypto",23,23,0,0.91,0,0,1,11
"413","https://www.reddit.com/r/crypto/comments/qly3vy/how_exactly_are_the_keys_used_in_cryptography/","finlaydotweber","2021-11-03","How exactly are the keys used in cryptography generated?","","crypto",26,26,0,0.9,1,0,0,84
"414","https://www.reddit.com/r/crypto/comments/qh1djo/multiple_input_macs/","neilmadden","2021-10-27","Multiple input MACs","","crypto",24,24,0,0.93,1,1,1,68
"415","https://www.reddit.com/r/crypto/comments/q5ykqm/we_built_pad_an_api_to_improve_privacy_over/","c_williamson","2021-10-11","We built PAD: an API to improve privacy over shared information. Ask us anything!","","crypto",24,24,0,0.85,1,0,0,72
"416","https://www.reddit.com/r/crypto/comments/pfelax/whos_hiring/","davidw_-","2021-08-31","Who's hiring?","Please state the location and include REMOTE, INTERNS and/or VISA when that sort of candidate is welcome. When remote work is *not* an option, include ONSITE.

Please only post if you personally are part of the hiring companyno recruiting firms or job boards. Only one post per company. If it isn't a household name, please explain what your company does.

Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job.","crypto",24,24,0,0.83,0,0,1,34
"417","https://www.reddit.com/r/crypto/comments/oz644w/googles_c_to_fhe_compiler_fheorg_meetup/","randhindi","2021-08-06","Google's C++ to FHE compiler | FHE.org meetup","Hi everyone,

The team at Google will present their work on compiling C++ to FHE at the next [FHE.org](https://FHE.org) meetup, on august 26th. Link to event: [https://www.meetup.com/fhe-org/events/279950583](https://www.meetup.com/fhe-org/events/279950583)

See you there!","crypto",24,24,0,0.88,0,0,1,29
"418","https://www.reddit.com/r/crypto/comments/nr09na/the_best_cryptographic_protocol_ever/","cryptosubtlety","2021-06-03","The best cryptographic protocol ever!","I'm happy to share with you my greatest work yet ""The best cryptographic protocol ever!"". It contains all valuable hard-earned secret crypto knowledge that I've accumulated over the years!  
[https://cryptosubtlety.medium.com/the-best-cryptographic-protocol-ever-31ee5108aaa2](https://cryptosubtlety.medium.com/the-best-cryptographic-protocol-ever-31ee5108aaa2)","crypto",26,26,0,0.8,0,0,0,23
"419","https://www.reddit.com/r/crypto/comments/nn3uwv/why_are_mcliece_and_laticce_encryptions_robust/","llllllILLLL","2021-05-28","Why are mcliece and laticce encryptions robust against quantum computers?","&amp;#x200B;

In the end, isn't breaking a public key more or less based on trying all possible combinations? Why couldn't an error correction system like mcliece be solved by a quantum computer, for example, 10,000 qbits (five times what is needed to break RSA) in polynomial times?

Edit: lattice instead ""laticce"". ","crypto",25,25,0,0.87,0,0,0,24
"420","https://www.reddit.com/r/crypto/comments/spbatl/safer_entropy_accumulation_in_linux_518s_rng/","bllinker","2022-02-10","Safer entropy accumulation in Linux 5.18's RNG","","crypto",23,23,0,0.97,0,0,0,1
"421","https://www.reddit.com/r/crypto/comments/sbvmjm/stupid_entropy_question/","anonXMR","2022-01-24","Stupid entropy question...","I know that CSPRNGs are effectively seeded with 256-bits of entropy (or so), and then happily generate streams of complete entropy (based on the security of 256-bits).

However, if I take some 256-bit input, with 256-bit of entropy, then run SHA-512 on it, then split the hash into two 256-bit chunks, what is the entropy of both chunks?

Is it 128-bits each or 256-bits each?","crypto",23,23,0,0.96,0,0,2,22
"422","https://www.reddit.com/r/crypto/comments/r40he4/polynomials_and_elliptic_curves_over_extension/","HenryDaHorse","2021-11-28","Polynomials and Elliptic Curves over Extension Fields","I made a small write up about Polynomials and Elliptic Curves over Extension Fields - https://risencrypto.github.io/ExtensionFields/

Posting it here mainly for feedback. If you find any mistakes or if you have any suggestions, please reply.","crypto",24,24,0,0.92,0,0,1,2
"423","https://www.reddit.com/r/crypto/comments/qfcvf6/fheorg_meetup_private_set_intersection_using/","randhindi","2021-10-25","FHE.org meetup | Private Set Intersection using Homomorphic Encryption","Hi all,

Ilia Iliashenko will be presenting his work on Private Set Intersection using Homomorphic Encryption at the [FHE.org](https://FHE.org) meetup this thursday. 

All the info are on the website [fhe.org](https://fhe.org) 

See you there!","crypto",22,22,0,0.88,0,0,1,74
"424","https://www.reddit.com/r/crypto/comments/pj3jk5/how_much_does_undergrad_prestige_matter_when/","aembra","2021-09-06","How much does undergrad prestige matter when applying for a crypto PhD?","I know there are lots and lots of general questions about undergrad prestige but I wanted to try and give a little bit more information about my situation to make the best guess, I hope that's not a problem. I'm an high school graduate from Turkey. I'm able to go to the [Hacettepe University](http://www.mat.hacettepe.edu.tr/index-en.html) this year but next year I'll be able to go to [Middle East Technical University](https://math.metu.edu.tr). These are both considered good schools in Turkey but the math program of Middle East Technical University is considered more prestigious than Hacettepe's and its language of instruction is English. (Hacettepe's language of instruction is Turkish) Hacettepe is better known by its medicine program rather than STEM programs. Although, this difference is not greatly reflected in [US News rankings](https://www.usnews.com/education/best-global-universities/turkey) where Middle East Technical University ranks second and Hacettepe ranks fourth. My question is, granted I do great at college wherever I go and possibly even get a master's degree from a ""good"" college before my PhD, how much would going to Hacettepe affect my chances of admission to a PhD program (or a master's program for that matter)?

To give you a little bit more information about the universities:

* I can't really see a big difference between the faculty members in both universities except that Hacettepe has 11 more faculty members and the h-index of one professor [Mustafa Turky1lmazoglu](https://scholar.google.com/citations?user=F_6HfxsAAAAJ&amp;hl=tr&amp;oi=sra) is more than any professor in Middle East Technical University. 
* On average the h-indexes of the professors in Middle East Technical University seem better partly because the ones in Hacettepe often doesn't have google scholar profiles.
* Hacettepe math program is [FEDEK](http://www.fedek.org.tr/) accredited, Middle East Technical University's math program doesn't have such an accreditation.","crypto",23,23,0,0.9,0,0,1,38
"425","https://www.reddit.com/r/crypto/comments/ozkf3b/seeking_advice_on_learning_math_behind/","brebboard","2021-08-07","Seeking advice on learning math behind cryptography","TL;DR - what is the best way to learn the math behind cryptography? Grad school, or self-study?

I've got a bachelors in EE and am in the US, and am looking to go back to grad school. For US-based programs I really don't see much in the way of cryptography, at least at a Masters level (what I have time for).

I know about cryptographic primitives, implementations, common protocols. In crypto coursework I learned some basic number theory (for stuff like RSA, El Gamal) and then some more complicated PQC stuff like basics of lattices, and linear &amp; differential cryptanalysis.

I realized I really like the math side of crypto, despite spending a lot of time in the implementation and practical side of it. I want to learn more about this, particularly with the onset of PQC. What I find really cool is when people mathematically evaluate crypto. I see people write papers that evaluate some hashing algorithm or block cipher, and I want to be able to do that.

Does anyone have any advice on how to get to this point? I am considering graduate school, but I don't know if an EE or mathematics degree makes more sense. At the same time I don't really know where to start for studying the math, and if self-study is best here (math in crypto seems like various smatterings of topics).","crypto",22,22,0,0.89,0,0,1,53
"426","https://www.reddit.com/r/crypto/comments/ovvlbm/signing_http_messages_internet_draft/","rgneainrnevo","2021-08-01","Signing HTTP Messages (Internet Draft)","","crypto",24,24,0,0.94,0,0,1,41
"427","https://www.reddit.com/r/crypto/comments/oj8e3b/on_the_insecurity_of_elgamal_in_openpgp/","yawkat","2021-07-13","On the (in)security of ElGamal in OpenPGP","","crypto",24,24,0,0.97,0,0,0,23
"428","https://www.reddit.com/r/crypto/comments/nctar3/xoring_random_numbers/","Z5DK9","2021-05-15","XORing random numbers","Can it be proved XORing two random numbers yields a random number?

Similarly, can it be proved XORing a random number and a non-random number yields a random number?

They seem obvious but I'm wondering if there are mathematical proofs.

Note that the questions are about randomness, not entropy.

Thanks.","crypto",23,23,0,0.9,1,0,0,80
"429","https://www.reddit.com/r/crypto/comments/n8kimg/free_13_hour_applied_cryptology_course/","forgottenlance","2021-05-09","Free 13+ hour Applied Cryptology course","","crypto",24,24,0,0.96,0,0,0,6
"430","https://www.reddit.com/r/crypto/comments/shbxuq/best_place_to_look_for_bestpractices/","zerozerosix006","2022-01-31","Best place to look for best-practices","Hey guys, is there a commonly known place to look up best practices for all aspects of cryptography? Especially in this field, the best practices can change rapidly. So I was wondering if there is a website where I can look up e.g.

* Which symmetric encryption algorithm I should use for general purpose (is DES depricated? Is AES-256 still in use?)
* Which hashing algorithms (of course the hashing algorithm strongly depends on the purpose) to use, e.g., SHA-1 is considered broken, SHA-256 not?
* Should I combine symmetric encryption algorithms (in case one of them will break in the future, I have heard this is a good practice)

A book of course is prone to be out-dated. Thats why I am looking for a website or forum or whatever, commonly known in the community of cryptography. Thank you!","crypto",22,22,0,0.92,0,0,1,6
"431","https://www.reddit.com/r/crypto/comments/scf30j/fheorg_meetup_private_information_retrieval_using/","randhindi","2022-01-25","FHE.org meetup | Private Information Retrieval using FHE","Dear all,

The next [FHE.org](http://fhe.org/) Meetup will take place on Thursday, February 24th at 6pm (Paris time):

**Single-server private information retrieval using homomorphic encryption**

The speaker is Muhammad Haris, a PhD candidate at the University of Illinois, his research interests are in applied cryptography and computer security. Recently he has been working on improving the concrete efficiency of crypto primitives like private information retrieval, private set intersection, Oram and oblivious transfer.

Info and links at: [https://fhe.org](https://fhe.org/)

See you there!

Rand","crypto",22,22,0,0.92,1,0,1,0
"432","https://www.reddit.com/r/crypto/comments/ruz69y/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-01-03","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",22,22,0,0.9,0,0,1,7
"433","https://www.reddit.com/r/crypto/comments/rpl3gu/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-12-27","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",22,22,0,0.92,0,0,1,4
"434","https://www.reddit.com/r/crypto/comments/qudb1d/in_cryptography_when_should_prng_be_used_and_when/","finlaydotweber","2021-11-15","In Cryptography, when should PRNG be used and when should CSPRNG be used?","I understand that PRNG are Random Number Generators that uses a deterministic algorithm based off of a seed.

I also understand that CSRNG are PRNG that are cryptographic-ally safe to use for generating random numbers.

And by cryptographic-ally safe, I believe this means that even if an attacker knows the deterministic algorithm and the seed, they would not be able to predict the next random number. I understand this is due to CSRNG also making use of some internal states.

If there are any errors in the above, I will appreciate a clarification because my questions depends on them being accurate.

So my main question is, when do you need a PRNG? and when must you use a CSPRNG? 

My initial answer to that was that CSPRNG should be used when generating keys, but when I searched for ""what are prng used for"", one of the pages I found was [this](https://crypto.stanford.edu/pbc/notes/crypto/prng.html) which states that:

&gt; In cryptography, PRNGs are used to construct session keys and stream ciphers

Which leaves me a bit confused, why should PRNG, that is not cryptographically strong be that is used for keys? I would expect CSPRNG to be used instead.

This makes me realise that perhaps I do not fully understand PRNG's and CSPRNG's yet and how they are used. Hence this question: In Cryptography, When exactly are PRNG used and when are CSPRNG used?","crypto",24,24,0,0.89,0,0,2,88
"435","https://www.reddit.com/r/crypto/comments/p2ei4j/the_lasercom_subreddit_is_currently_having_week/","Aerothermal","2021-08-11","The Lasercom subreddit is currently having week dedicated to Quantum Communication","This week over at /r/Lasercom will be entirely dedicated to quantum communication.

Lasercom is a subset of *Optical Wireless Communication* (OWC) and is particularly conducive to secure communication techniques (difficult to detect and intercept) and quantum cryptographic techniques (such as QKD networks).

The earliest forms of OWC included semaphore (flag waving) and smoke signals and such techniques were used by the ancient Greeks and Romans. Alexander Graham Bell invented the Heliophone (using sunlight to transmit a phone call without any wires). It also includes LiFi which has barely taken off yet (connecting your devices to a public network just using lightbulbs and a photodetector on your device)

More specifically it uses a near-infrared laser and so in that case is called either Free Space Optical (*FSO*) communication, or simply laser communication (*lasercom*).

To all the physicists, engineers and anyone who uses the internet really, I think there's a lot of reasons to get excited about space lasers, such as everyone in the world having access to super cheap high speed broadband, even when living in a forest. Even when travelling in a plane. And the benefits of faster, cheaper and lower latency and more secure backhaul will affect a wide range of industries.

**Interplanetary internet** is just beginning, not just ""in our lifetimes"" but people are building it right now. Arguably the first major milestone signalling the start of the Interplanetary Internet will be connecting the moon (and its astronauts, landers and structures) to the internet [[1]](https://esc.gsfc.nasa.gov/news/_LunaNetConcept) [[2]](https://esc.gsfc.nasa.gov/news/_LunaNetConcept). People have written about it for decades. Expect that *within 3 years* (if they can solve the problems with the supply of space suits). 

**Deep space laser communications** will be delivering us data back from a distant asteriod *next year* [[3]](https://www.nasa.gov/mission_pages/tdm/dsoc/index.html). 

Military aircraft will be all connected by secure space lasers, starting with the MQ-9 Reaper and cubesats *which were deployed last month* [[4]](https://www.ga.com/general-atomics-lincs-system-launched-successfully-and-deployed) [[5]](https://www.defenseone.com/technology/2021/06/pentagon-will-try-using-lasers-send-data-space-drones/174810/). Passenger planes will soon be connected by lasers starting with Airbus, announced this year [[6]](https://www.airbus.com/newsroom/press-releases/en/2021/04/airbus-and-tno-to-develop-aircraft-laser-communication-terminal.html). 

**Quantum key distribution** using space lasers is already deployed creating a secure network across 4,600 km of China, including Shanghai and Beijing. We found out about it in *January this year* [[7]](https://www.nature.com/articles/s41586-020-03093-8).

For more info:

- https://en.m.wikipedia.org/wiki/Free-space_optical_communication

- https://en.m.wikipedia.org/wiki/Laser_communication_in_space

- [""Quantum"" posts on /r/Lasercom](https://www.reddit.com/r/lasercom/search?q=quantum&amp;restrict_sr=on&amp;include_over_18=on)

- [""News"" on /r/lasercom](https://www.reddit.com/r/lasercom/search?q=quantum+flair%3Anews&amp;restrict_sr=on&amp;include_over_18=on&amp;sort=relevance&amp;t=all)

- [""Articles"" on /r/lasercom](https://www.reddit.com/r/lasercom/search?q=quantum+flair%3Aarticle&amp;restrict_sr=on&amp;include_over_18=on&amp;sort=relevance&amp;t=all)

- [""Videos"" on /r/lasercom](https://www.reddit.com/r/lasercom/search?q=quantum+flair%3Avideo&amp;restrict_sr=on&amp;include_over_18=on&amp;sort=relevance&amp;t=all)

- [""Research Papers"" on /r/lasercom](https://www.reddit.com/r/lasercom/search?q=quantum+flair%3Aresearch&amp;restrict_sr=on&amp;include_over_18=on&amp;sort=relevance&amp;t=all)","crypto",22,22,0,0.86,0,0,1,51
"436","https://www.reddit.com/r/crypto/comments/opm10n/do_i_need_a_key_committing_aead_to_be_random_key/","loup-vaillant","2021-07-22","Do I need a key committing AEAD to be random key robust?","So I've learned some time ago that AEAD schemes have the following guarantee:

* Let Alice and Bob agree on some key K.
* Bob knows for sure it's K, and not some other key.
* Alice performs (nonce, ad, ciphertext, tag) = AEAD(nonce, ad, plaintext, tag), and sends the whole thing to Bob.
* If bob successfully authenticates (nonce, ad, ciphertext, tag) under key K, then he knows for sure it was encrypted with key K.

On the other hand, it is *not* guaranteed that the tuple (nonce, ad, ciphertext, tag) only authenticates under key K. Which means that if there's a way to trick Bob into using a different decryption key, they might get a different message, or simply accept as valid a tuple (Evil_Key, nonce, ad, ciphertext, tag) that is anything but.

One solution is to use a _key committing AEAD_, that on top of the above guarantee, can only decrypt under key K. There are two obvious ways to do this:

* Replace the polynomial MAC (GHASH, Poly1305&) by a hash based MAC (HMAC-SHA256, BLAKE2&). Note that the MAC must be collision resistant, so it needs to be at least 256 bits ([128 bits of security](https://loup-vaillant.fr/tutorials/128-bits-of-security), similar to Curve25519). The main problem here is that it's generally slower. Polynomial hashes are very hard to beat. Especially GHASH if there's hardware support.

* Encrypt 32 bytes worth of zeroes in addition to the plaintext, and append the encrypted zeroes to the ciphertext. Bob can then encrypt zeroes himself, and compare. The main problems here are the size and computational overhead incurred by those additional 32 bytes, and the potential for timing leaks (we now must perform *two* checks instead of just one, that requires some care).

Those problems tend to compound for file encryption, which would typically be encrypted chunk by chunk: the use of committing AEAD will repeat the overhead for. each. chunk. Not to mention the complications: as a designer and an implementer, it would be so much easier to just pick some standard (and thus non-committing) AEAD scheme and encrypt the chunks with that.

---

So I thought: how about committing the key separately from the AEAD? I'm thinking of this in the context of file encryption, where it would go like this:

1. Parse the header.
2. Deduce the encryption key (that's where committment may happen).
3. Decrypt each chunk (using **non** committing AEAD).
4. Authenticate padding, if any.

Note that this is not constant time at all. Each step is validated one after the other. If the file is corrupted at a later stage, the recipient will just take longer to notice something is amiss. This breaks IND-CCA2 under timing attacks, (or at all, if the software tells you exactly what went wrong), but I *think* it is generally a good tradeoff, because it enables lightweight streaming encryption and decryption. (Arguments to the contrary are very welcome.)

First question: __can we commit the key once and for all on step (2)?__ Here's how I think we could go about it:

1. Use the header do perform any key exchange or password key derivation, get session key KS.
2. K, H = KDF(KS) (We could use a stream cipher to do that derivation.)
3. If we are encrypting, write H to the file. If we are decrypting, compare with what is written, and abort if it's different.
4. Use K to encrypt/decrypt the actual data, using an ordinary AEAD.

Would the use of H successfully commit the key K?

---

I have another related question: __Do interactive protocols like those found in the Noise protocol framework naturally commit the session key?__ And perhaps even more importantly, does that even matter in this context?","crypto",20,20,0,0.9,0,0,1,27
"437","https://www.reddit.com/r/crypto/comments/oftn0m/security_of_encrypting_same_data_with_aes_cbc/","RCK201","2021-07-07","Security of encrypting same data with AES CBC multiple times using different key","First of all, sorry, I was too stupid to find the answer by using Google.

Backstory:

I want to encrypt my passwords etc for my family to use in case I'd die. My idea is that there are groups of passwords and a specific number of passwords required from each group. This is so that not a single person or certain persons can't decrypt the passwords alone.

1 password required from: person 1, person 2

1 password required from: person 3, person 4

2 passwords required from: hidden place 1, hidden place 2, hidden place 3

The idea is that I encrypt the plaintext 2\*2\*3 = 12 times using each password combination (which are sorted before hashing so that one doesn't need to feed them in specific order). Versions would then be combined and shared to each person.

Question:

Are there any security concerns doing so? If there are, I can always add random garbage within the plaintext and encrypt that and the random seed that was used to place the garbage (for reversing), but I'd rather wouldn't do so unless it's necessary.

Thanks!","crypto",23,23,0,0.97,0,0,1,41
"438","https://www.reddit.com/r/crypto/comments/nxmgul/did_intel_silently_abandon_sha_instructions/","veqtrus","2021-06-11","Did Intel silently abandon SHA instructions?","~~These pages now return 404:~~

Edit: Seems like it was a temporary thing and my browser remembers the redirect (which was a 301 Moved Permanently).

* https://software.intel.com/en-us/articles/intel-sha-extensions
* https://software.intel.com/content/www/us/en/develop/articles/intel-sha-extensions.html

These are still available:

* https://software.intel.com/content/www/us/en/develop/articles/intel-sha-extensions-implementations.html
* https://software.intel.com/content/dam/develop/external/us/en/documents/intel-sha-extensions-white-paper-402097.pdf

There doesn't seem to be a way to search for support of these instructions on [ark.intel.com](https://ark.intel.com/content/www/us/en/ark/search/featurefilter.html).","crypto",22,22,0,0.78,1,0,1,20
"439","https://www.reddit.com/r/crypto/comments/m8jcbp/sshed25519_255_vs_sshed25519_256/","calamonkey","2021-03-19","""ssh-ed25519 255"" vs ""ssh-ed25519 256""","We have an SSH server that uses ed25519 for signature verification. We provide users with the MD5 and SHA256 hash for the key as per ssh-keygen listing, which displays the ""256"" key. However, users clients are connecting and getting a ""ssh-ed25519 255"" key with a fingerprint that does not match.

Anyone know how would I verify the ""ssh-ed25519 255"" fingerprint of our host key?

&amp;nbsp;

Edit: I was able to find a program that lists the key algorithm as ""ssh-ed25519 255"" and compare it to another that lists the key algorithm as ""ssh-ed25519 256"" - turns out they *should* compute the same. So while I still do not know why or what the difference is between the two algorithms (if there is any and not just a naming issue), I can say that there is otherwise no difference in the fingerprint.

However this also means that the user might have a different issue...","crypto",21,21,0,0.9,0,0,0,11
"440","https://www.reddit.com/r/crypto/comments/m1znya/in_standard_dh_diffiehellman_does_the_group_size/","anonXMR","2021-03-10","In standard DH (Diffie-Hellman), does the group size determine the ""modulus"" used?","In standard DH (Diffie-Hellman), does the group size determine the ""modulus"" used?

Thanks for helping me...","crypto",22,22,0,0.96,0,0,0,19
"441","https://www.reddit.com/r/crypto/comments/m0t4wd/intel_to_build_silicon_for_fully_homomorphic/","tomatus89","2021-03-08","Intel to Build Silicon for Fully Homomorphic Encryption: This is Important","","crypto",22,22,0,1,0,0,0,3
"442","https://www.reddit.com/r/crypto/comments/s26ev7/proving_properties_with_zkp/","[deleted]","2022-01-12","Proving properties with ZKP","Hi, I'm just wondering if anyone can give me some hints about a potential zero-knowledge use case. I'm not so familiar with the field of cryptography.

Let's say I have the following pile of data

    ""person1"" : ""data1""
    ""person2"" : ""data2""
    ""person3"" : ""data3""
    ...
    ...

And let's say I encrypt it so no one can read it. Is there a way of proving to ONLY `person1`, that the string `""person1"" : ""data1""` is contained in my encrypted pile?

I want the proof to be zero-knowledge, so that `person1` can **not** use it to proof to a third party that this row exists in my pile. How can I achieve that?","crypto",21,21,0,0.94,1,0,2,5
"443","https://www.reddit.com/r/crypto/comments/rvvdr2/fheorg_meetup_on_homomorphic_tranciphering/","randhindi","2022-01-04","FHE.org meetup on homomorphic tranciphering","","crypto",19,19,0,0.89,0,0,1,1
"444","https://www.reddit.com/r/crypto/comments/rn08ai/what_exactly_do_i_send_on_the_wire_for_aes128gcm/","XiPingTing","2021-12-23","What exactly do I send on the wire for AES-128-GCM encryption in the context of TLS 1.2?","I'm writing a TLS 1.2 HTTPS server from scratch. I want to implement TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 concretely. I will generalise to other key and hash sizes later.

I am finding lots of sources for each of the steps but I am yet to find a complete and concrete source that shows me every byte in the record sent for a particular cipher.

I have expanded the master key (I have tested this for a sha256 CBC cipher and it works). I have then populated a 16 byte client\_write\_key, a 16 byte server\_write\_key, a 4 byte client\_explicit\_write\_IV and a 4 byte server\_explicit\_write\_IV, in that order (with no bytes wasted).

First I send the record header: record type (1 byte), record version (2 bytes), record length (2 bytes)

Then the nonce, (8 bytes, incremented each round).

Then I concatenate the record header and the nonce as the 'additional data', **A** (13 bytes).

I am then sending the undecorated ciphertext, **C** (same length as the plain text, **P**) and the 16 byte tag, **T**, (both generated by the **(C,T) = GCM-AEK (IV, P, A)** function). I am then sending the additional data (again). And that's my record. For the **IV** I concatenate the explicit\_write\_IV with the nonce.

I have tested my **(C,T) = GCM-AEK (IV, P, A)** function against the test vectors [here in section 2.2.1](https://www.ieee802.org/1/files/public/docs2011/bn-randall-test-vectors-0511-v1.pdf).

Where am I going wrong? Am I sending the wrong stuff on the wire or is my implementation wrong?

I understand there's an academic point that the IV need not be the sequence number but I am choosing to use the same for both (because it's conforming and why not).

So is this correct? **record header(5) | nonce(8) | C(N) | T(16) | record header(5) | nonce (8)**

Edit:
It turns out you send the record header followed by the explicit part of the nonce then the cipher text followed by the authtag. The additional authenticated data is not sent only inferred.","crypto",20,20,0,0.84,0,0,0,4
"445","https://www.reddit.com/r/crypto/comments/rayy17/public_key_tripcodes/","theaceshinigami","2021-12-07","Public Key Tripcodes","tripcodes as an idea really appeals to me. The idea of having an internet identity that can move across locations without making a new account is really cool. Unfortunately tripcodes are easy to crack. There have been attempts to fix this weakness of tripcodes by salting the hash, but this breaks the main feature of tripcodes, their portability. One cryptographic tool that seems at first perfectly suited for this task is asymmetric cryptography. The idea would be if I want to write a comment on a blog or make a post on a forum I would send a signed message along with my public key. The only issue is we loose the simplicity of tripcodes. Now we need a lot of client-side code if we want to maintain the same simple interface of tripcodes potentially adding a new attack surface. I'm wondering if anybody has tried to implement something akin to what I'm describing and what security issues I might be overlooking.","crypto",22,22,0,0.94,0,0,1,7
"446","https://www.reddit.com/r/crypto/comments/r17dp8/why_did_they_do_it_this_way/","Jack15911","2021-11-24","Why did they do it this way?","Noob here, with no pretensions of being a cryptographer. I'm trying to understand best practices. In that regard, I have a few questions.

1. Bitwarden appears to be highly regarded, even though it uses an AES-CBC scheme (construction? other?). I understand Latacora's ""Right Answers"" can't be taken as always Right, but from what I gather, AES-CBC is much harder to secure than using other schemes. What do you suppose caused Bitwarden to use a more difficult path?

2. Enchive appears to be a useful archiving utility, with some good support in this sub-Reddit. It uses asymmetric Public Key encryption. From my perspective, symmetric encryption would be easier, as I don't send my archives elsewhere. Am I looking too narrowly at this as some people need to transmit archives to other people for their use?

3. Can't scroll r/Crypto more than four months back. This one may be out of scope, as it isn't an encryption issue, per se, but rather Reddit's, maybe. I've been reading the sub to gain info in context back to four months' history. I can search beyond that, but I can't just scroll though it. Is there a way to view more history?

Thanks.

Edited to add: all my questions were answered. Thanks.","crypto",19,19,0,0.89,0,0,1,57
"447","https://www.reddit.com/r/crypto/comments/qajjzw/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-10-18","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",21,21,0,0.86,0,0,1,82
"448","https://www.reddit.com/r/crypto/comments/plb7nl/high_school_student_interested_in_cryptography/","[deleted]","2021-09-10","High school student interested in cryptography","Hello,

I am a Junior in a U.S. High School. I stumbled upon cryptography as a field that I would be very interested in, but my knowledge of it is zero. I have a few questions.

Obviously, I'm not planning on self-learning the entirety of cryptography, as that would be impossible. However, I would like to get myself a head start self-learning on some things, especially programming and computer science before college. What kind of things (online courses/**programming languages**/books/videos) would you recommend a high schooler learn or work on? Maybe some things that I could possibly put on a college application or resume? I will of course focus hard in my math classes.

As a side question, I do not particularly want to work for someone my whole life, and was wondering of what the startup/**entrepreneurship** environment is like in the cryptography sphere. I know that may be a silly inquiry, but nevertheless it is something I consider important at the moment.

There is not a large and formal ""learn cryptography"" community online, so any help will of course be appreciated. Thank you.","crypto",20,20,0,0.92,0,0,1,46
"449","https://www.reddit.com/r/crypto/comments/pghvas/hatsh_v2_release_simple_fast_secure_clientside/","zshdv","2021-09-02","Hat.sh V2 release - simple, fast, secure client-side file encryption.","","crypto",20,20,0,0.8,4,0,0,50
"450","https://www.reddit.com/r/crypto/comments/p7atax/what_is_the_history_of_public_key_cryptography/","The_How_To_Linux","2021-08-19","What is the history of public key cryptography?","Hey guys quick question here,

I was doing some research on public key cryptography and i'm having trouble understanding the linear history of public key cryptography.

so first there was this guy james h ellis

[https://en.wikipedia.org/wiki/James\_H.\_Ellis](https://en.wikipedia.org/wiki/James_H._Ellis)

and he was the first guy to really think up public key cryptography.

then DiffieHellman key exchange

[https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman\_key\_exchange](https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange)

then RSA (cryptosystem)

[https://en.wikipedia.org/wiki/RSA\_(cryptosystem)](https://en.wikipedia.org/wiki/RSA_(cryptosystem))

then PGP pretty good privacy

[https://en.wikipedia.org/wiki/Pretty\_Good\_Privacy](https://en.wikipedia.org/wiki/Pretty_Good_Privacy)

then openpgp

[https://en.wikipedia.org/wiki/Pretty\_Good\_Privacy#OpenPGP](https://en.wikipedia.org/wiki/Pretty_Good_Privacy#OpenPGP)

the gnu privacy guard?

[https://en.wikipedia.org/wiki/GNU\_Privacy\_Guard](https://en.wikipedia.org/wiki/GNU_Privacy_Guard)

is that everything? did i get everything in linear order?

thank you","crypto",21,21,0,0.9,0,0,1,41
"451","https://www.reddit.com/r/crypto/comments/p31cd7/is_the_mceliece_cryptosystem_secure/","how-to-ubuntu","2021-08-12","Is The McEliece Cryptosystem Secure?","Hello, i wanted to ask as a guy who doesn't know anything about crypto, i was told that The McEliece Cryptosystem is very secure and even more secure then traditional RSA encryption, i wanted to ask what you guys thought about this, is this true?

thank you.","crypto",23,23,0,0.97,0,0,1,53
"452","https://www.reddit.com/r/crypto/comments/p23dzw/getting_others_to_accept_encrypted_emails/","GuTsINzRLymOw60OFPXx","2021-08-11","Getting others to accept encrypted e-mails","I would like to use E2EE as much as possible. For e-mail, this is proving difficult. Using PGP is obviously too complicated for general users. I have opted for a service like mailbox.org or posteo or protonmail. However, when people receive the encrypted e-mail saying they must click on the link and enter a password, I get one of 2 responses. They are either suspicious and delete it or they are too lazy and don't want to click on it. Does anyone have any (useful) advice on how to get my friends (and any general user) to utilize E2EE email?","crypto",20,20,0,0.82,0,0,1,84
"453","https://www.reddit.com/r/crypto/comments/oyluta/ristretto_curve25519/","john_alan","2021-08-05","Ristretto &amp; Curve25519","I've been looking at ristretto.group, and its really cool.

I understand for some protocols we need curve points to behave as if they were from a prime order curve.

I have a few questions on this,

* Do we call curves without prime order ""composite""?

* Why do some protocols demand prime order from the underlying curve?

* Why isn't the fact that we work inside a prime order subgroup anyway good enough in the first place, is it that the curve arithmetic is done over the entire curve? I ask as we are using G which only generates points inside the subgroup anyway right?","crypto",20,20,0,0.93,0,0,1,34
"454","https://www.reddit.com/r/crypto/comments/omcpop/q_if_i_throw_away_decryption_key_is_encryption/","sleepmaxing","2021-07-17","[Q] If I throw away decryption key, is encryption like a hash function?","I searched about the difference between hash and encryption.

Basically people said that hash is one-way function (not reversible, because of the inherent nature of many to one function).

But encryption's purpose is, later, to be able to decrypt to its original form.

I know and understand the above.

However, what remains in my head is this:

What if I encrypt with a encryption key and throw away the decryption key? (asymmetry keys)

At that point, isn't it the same as hashing? I can only encrypt, but cannot decrypt (reverse). Of course there are real-life problems like ""how can a user be sure and trust that you threw away the decryption key?"" etc. But without those kinds of concerns, if we assume that the decryption key is forever gone, and I am with only encryption key, what's the difference between the hash function and this? Of course another thing to say is that 'There are famous hashing algorithms like SHA, MD5 etc. but in your case only you know the algorithm (=encryption key) so for example file-integrity check cannot be done unless you make the encryption key public"".

With that being said, am I understanding correctly? Of course my assumption has no real life usage. But just I want to be sure that I'm understanding these concepts correctly.

Thanks for your reading.

P.S. Thinking it again, I realized that there is difference (at least this one, maybe possibly more): Anyway my encryption function doesn't collide (one to one function. regardless of whether the decryption key was gone or not.) while hashing is many to one. Then it brings me another question: In coming up with hashing algorithm, avoiding collision as possible is what people try to achieve. It implies that encryption key can't be a hash function (Otherwise, the concern of avoiding collision is already solved)... I'm more confused...

P.S.2. Thinking it again, I realized that f(x) -&gt; x is a collision-free. (Or just reverse the input text. it exactly can be called as a encryption function.) Therefore, what people say when saying about hashing algorithm, I think that there are some conditions to meet to be called as a hashing algorithm. What's that?","crypto",22,22,0,0.87,0,0,1,57
"455","https://www.reddit.com/r/crypto/comments/olwsxn/newbie_question_about_rsa_keys/","junkmathbrain","2021-07-17","Newbie question about RSA keys","Hi, I have been reading through Christoph Paar's book, Understanding Cryptography, and had a question.

It indicated that to find the primes, p and q, used to generate keys for an RSA system, we use probabilistic primality tests. What happens in the very unlikely case that the numbers selected are not primes, and slipped by the probabilistic primality tests?  


Thanks.","crypto",23,23,0,0.96,0,0,1,38
"456","https://www.reddit.com/r/crypto/comments/ocypx4/thread_on_revil_ransomware_encryption/","disclosure5","2021-07-03","Thread on REvil ransomware encryption","","crypto",20,20,0,0.92,0,0,1,14
"457","https://www.reddit.com/r/crypto/comments/o2cfkt/is_this_visual_representations_of_sha256_hashes/","ScottContini","2021-06-18","Is this visual representations of SHA-256 hashes bogus?","In /r/programming, there is a link to [Representing SHA-256 Hashes As Avatars](https://francoisbest.com/posts/2021/hashvatars).  It's getting upvoted like mad, which can be seen from the comments section: https://www.reddit.com/r/programming/comments/o1q0kr/representing_sha256_hashes_as_avatars/

I'm not convinced.  I posted my doubts [here](https://www.reddit.com/r/programming/comments/o1q0kr/representing_sha256_hashes_as_avatars/h25m0wy/?context=3).  What do you think?","crypto",22,22,0,0.9,0,0,1,18
"458","https://www.reddit.com/r/crypto/comments/ny6yhy/noob_question_rsa_keys_generated_on_different_os/","spacemojo_the_code","2021-06-12","Noob question; RSA keys generated on different OS","When generating RSA public and private keys with the openssl cli, does the OS have an influence on the result ? In other words, could a key pair generated on Windows NOT work when used on Linux for example ?","crypto",22,22,0,0.93,0,0,2,29
"459","https://www.reddit.com/r/crypto/comments/nriggg/public_key_cryptography_openssh_private_keys/","lgiordani","2021-06-03","Public key cryptography: OpenSSH private keys","","crypto",21,21,0,0.96,0,0,1,25
"460","https://www.reddit.com/r/crypto/comments/nqj7h4/vault1317_protocol_a_modern_approach_for_metadata/","hardenedvault","2021-06-02","Vault1317 protocol: a modern approach for metadata protection with deniability","","crypto",21,21,0,0.83,0,0,0,5
"461","https://www.reddit.com/r/crypto/comments/nepjre/post_quantum_cryptography_scheme_quarkz/","TavianRobertson","2021-05-17","Post Quantum Cryptography Scheme - Quarkz","I recently created a new encryption scheme called Quarkz. I believe it is quantum secure and has a very solid mathematical background. Here is a paper I wrote that describes the algorithm:

[https://docs.google.com/document/d/1lkPAdd-AOcos1G1m9SIPzCQeUe4DH5eviVi7iuLOt2s/edit?usp=sharing](https://docs.google.com/document/d/1lkPAdd-AOcos1G1m9SIPzCQeUe4DH5eviVi7iuLOt2s/edit?usp=sharing)

&amp;#x200B;

Here is the code:

[https://github.com/quarkz-encryption/Quarkz](https://github.com/quarkz-encryption/Quarkz)

&amp;#x200B;

I would love to get some feedback, and I challenge anyone that is willing to try and find algorithms that can crack the encryption algorithm.","crypto",21,21,0,0.79,0,0,0,54
"462","https://www.reddit.com/r/crypto/comments/mmmgiy/side_channel_analysis_course/","ddddavidee","2021-04-08","Side Channel Analysis course","Hi all,

&amp;#x200B;

are you aware of some university level course in Side Channel Analysis available on the web?   
I see some other security and crypto-related courses, especially now, due to the pandemic, but I really would like to improve my knowledge on this aspect of the field.

&amp;#x200B;

Thanks in advance","crypto",20,20,0,0.96,0,0,0,9
"463","https://www.reddit.com/r/crypto/comments/mgysg3/ringlwe_over_twotopower_cyclotomics_is_not_hard/","bitwiseshiftleft","2021-03-31","Ring-LWE over two-to-power cyclotomics is not hard","","crypto",20,20,0,0.85,0,0,0,18
"464","https://www.reddit.com/r/crypto/comments/m9ckut/oc_ncurses_tcp_chat_with_encryption_end_to_end_c/","edgarhdz2","2021-03-20","[OC] Ncurses TCP Chat with encryption end to end C++","","crypto",22,22,0,0.76,0,0,0,6
"465","https://www.reddit.com/r/crypto/comments/m57by1/aes_encrypting_the_same_file_with_the_same_keyiv/","VicePool","2021-03-14","AES Encrypting the same file with the same Key/IV","1. What are the threats if I encrypt the same file at a different time using the same Key/IV with the AES-CBC/CTR/GCM modes. Is there a way for the attacker to find out the Key, IV, or the original file's content if he knows that encrypted files originally had the same content/Key/IV? I am speaking only about a situation where only one single file was encrypted with the same Key/IV. Other files will have different pairs.

2. Which  mode is better to choose for the task where the situation above can happen.","crypto",20,20,0,0.96,0,0,0,27
"466","https://www.reddit.com/r/crypto/comments/m4c8ge/dsl_for_zero_knowledge_proofs/","kenshamir","2021-03-13","DSL for Zero Knowledge Proofs","","crypto",22,22,0,0.97,0,0,0,10
"467","https://www.reddit.com/r/crypto/comments/swozze/aad_for_aead_ciphers/","void-void00","2022-02-20","AAD for AEAD Ciphers","What kind of data should I feed AEAD ciphers with?
Could I just have a constant byte array in my program that is used as AAD?
Or should AAD be random like the IV?
AAD (Additional *Authenticated* Data), in what sense should the AAD be authenticated?","crypto",21,21,0,0.84,1,0,0,4
"468","https://www.reddit.com/r/crypto/comments/s2rk4f/is_there_benefit_to_rotating_an_aes_key_with/","hangonreddit","2022-01-13","Is There Benefit to Rotating an AES Key With Counter?","Is there a benefit to generating an AES key by doing sha256(original key + counter) and using the resulting first 128 bits as an AES key vs just using the original key? The counter would go up by one every day. The only benefit I can think of is that there is less ciphertext encrypted using the same key out there to analyze and crack  only a days worth of material. Not sure how big of a benefit this is since the plaintext is itself useless after a month in my particular situation.

Thanks in advance.","crypto",22,22,0,0.9,0,0,1,7
"469","https://www.reddit.com/r/crypto/comments/rrw100/running_a_program_on_an_untrusted_vm_or_running_a/","Void-Century","2021-12-30","Running a program on an untrusted VM or running a private VM on an untrusted host","I'm trying to develop a decentralized network which allows decentralized applications to run on VMs.

Currently I'm sort of stuck on how would any private data be secured on such a network where the application will be run on totally unknown host. Is this practically / theoratically impossible? or if not any pointers or suggestions would be highly appreciated. (I'm a bit of a novice to the field)

eg : If an application needs to use a private key to sign a message, it needs to be private to the application (in the VM) and should not be ""leaked"" to the host.

I have looked (just barely) at things like Homomorphic encryption, etc... Haven't found anything of practical usage.","crypto",20,20,0,0.92,0,0,1,6
"470","https://www.reddit.com/r/crypto/comments/rk9c9b/can_you_pad_tls_aesgcm_records/","XiPingTing","2021-12-19","Can you pad TLS AES-GCM records?","Im writing an HTTPS server.

AES-GCM doesnt demand padding because partial blocks can be decrypted.

However, you can infer a lot about encrypted application data if you know the total number of plaintext bytes sent.

How is this handled? Does TLS allow padding for this mode? Alternatively, is there a way to pad in the HTTP protocol?","crypto",20,20,0,0.87,0,0,1,3
"471","https://www.reddit.com/r/crypto/comments/rjy42f/crown_sterling_final_white_paper_2021/","maqp2","2021-12-19","Crown Sterling ""Final"" White Paper (2021)","","crypto",18,18,0,0.71,0,0,1,28
"472","https://www.reddit.com/r/crypto/comments/rgapwx/seasign_compact_isogeny_signatures_from_class/","api","2021-12-14","SeaSign: Compact isogeny signatures from class group actions","","crypto",19,19,0,0.84,0,0,1,2
"473","https://www.reddit.com/r/crypto/comments/qudxqf/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-11-15","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",22,22,0,0.97,0,0,1,71
"474","https://www.reddit.com/r/crypto/comments/qsi94m/modern_signing_and_encryption/","atoponce","2021-11-12","Modern signing and encryption","","crypto",18,18,0,0.89,0,0,2,73
"475","https://www.reddit.com/r/crypto/comments/qpz6n9/fheorg_meetup_hardware_acceleration_for/","randhindi","2021-11-09","FHE.org meetup | Hardware acceleration for homomorphic encryption - by Ro Cammarota (Intel)","Hi everyone,

The next [FHE.org](https://FHE.org) meetup will be on November 23rd at 6pm Paris time. Rosario Cammarota from Intel will be talking about hardware acceleration for homomorphic encryption. 

All the info are on the [fhe.org](https://fhe.org) website, including the link to register.

Finally, we have started a community discord to discuss about FHE, for those interested in continuing the conversation after the meetups! [https://discord.gg/fvZ48443zD](https://discord.gg/fvZ48443zD)","crypto",20,20,0,1,0,0,1,78
"476","https://www.reddit.com/r/crypto/comments/pv6oe5/new_mike_hamburg_paper_computing_the_jacobi/","rgneainrnevo","2021-09-25","New Mike Hamburg paper: Computing the Jacobi symbol using Bernstein-Yang","","crypto",21,21,0,0.9,0,0,1,61
"477","https://www.reddit.com/r/crypto/comments/pp0tc6/automatic_cipher_suite_ordering_in_cryptotls/","knotdjb","2021-09-15","Automatic cipher suite ordering in crypto/tls","","crypto",20,20,0,0.93,0,0,1,35
"478","https://www.reddit.com/r/crypto/comments/pfk01b/nsa_quantum_computing_and_postquantum/","Natanael_L","2021-09-01","NSA - Quantum Computing and Post-Quantum Cryptography - Frequently Asked Questions [PDF]","","crypto",22,22,0,1,0,0,1,19
"479","https://www.reddit.com/r/crypto/comments/pbofzs/any_security_implications_to_showing_a_short/","throwaway27727394927","2021-08-26","Any security implications to showing a short visual hash during password entry to quickly catch simple typos?","Say I took the first few bytes of the salted Blake3 hash of the current password, encoded those few bytes into perhaps a color hex and a shape respectively. Then, while entering your password, it displays this shape and color on each keystroke. That way, once you learn your password's corresponding color and code, you can spot a typo before pressing enter. Are there any security implications to something like this? Would you find it helpful while entering your password? Are your passwords even long enough to warrant something like this? 

Personally my password is 50 characters long, and KeePassXC takes about 5 seconds to unlock after entering it (added lots of iterations), so it adds a lot of time if I make a typo. I don't really think I'm the typical case but I'm thinking it could be helpful regardless possibly.

Example I wrote: https://i.imgur.com/EG6KePc.png","crypto",22,22,0,0.94,0,0,1,57
"480","https://www.reddit.com/r/crypto/comments/ok5rfk/curve25519_private_key_size_doesnt_make_sense/","anonXMR","2021-07-14","Curve25519 private key size doesn't make sense","Since we work inside a cycle subgroup that's 2^252 in size, why do we generate 32byte (2^256) size private keys?

Aren't they only working inside a smaller group anyway? Why not generate 2^252 bit keys? 

Is it because that's 31.5 bytes anyway?","crypto",22,22,0,0.96,0,0,0,33
"481","https://www.reddit.com/r/crypto/comments/n0ggbl/hsm_vs_kms/","anonXMR","2021-04-28","HSM vs KMS","Hi guys,

Whats the difference between a HSM and KMS?

Is it that with KMS you extract the key and use it in your software, but HSM generally doesn't give you the key, instead you send it plaintext and it encrypts it for you?","crypto",22,22,0,1,0,0,0,28
"482","https://www.reddit.com/r/crypto/comments/mlbx30/can_you_reverse_and_xor/","FinancialNaiveCat","2021-04-06","Can you reverse AND + XOR?","Say I have two bytes `p`, `k` and I AND them, getting `x`.

    p: 10111011
    k: 01101101
    x: 00101001

Then I XOR `x` with `k`:

    x: 00101001
    k: 01101101
    c: 01000100

So

    p &amp; k = x
    x ^ k = c


Is this process reversible? That is, can you get `k` from `c` and `p`? How so?

I've thought about doing

    x ^ k ^ k = c ^ k
    x = c ^ k
    p &amp; k = x
    p &amp; k = c ^ k

But couldn't go any further. Remembering Schneier's Law, would this method be considered secure? How about if I can compute as many `c`s from as many different `p`s as I want?","crypto",18,18,0,0.87,0,0,0,11
"483","https://www.reddit.com/r/crypto/comments/m2sfc0/arbitrarylength_key_derivation_with_libsodium/","svvac","2021-03-11","Arbitrary-length key derivation with libsodium","`libsodium` has the `crypto_kdf_derive_from_key()` API ; sadly it is limited to 512bits of output for a given subkey.

I could use the subkey identifier as a counter and increment it enough times to have arbitrary bytes and concatenate the resulting keys, but it then makes it impractical when using a ""random"" (think hashed) subkey identifier.

Then there is `randombytes_buf_deterministic()`. It is backed by ~~Salsa20~~ ChaCha20 (edit: misread, it's ChaCha20) which, from what I understand, generates a bytestream indistinguishable from random data given a 32 byte seed.

My idea is then:

* Given a high-entropy `masterkey` of 32-64 bytes
* Given a public (possibly low-entropy) subkey identifier `kid` and a key length `L`
* Compute a 32 byte `seed` using a keyed hash of the masterkey `crypto_generichash(seed, sizeof seed, kid, sizeof kid, masterkey, sizeof masterkey)`
* Derive `L` bytes of `subkey` with `randombytes_buf_deterministic(subkey, L, seed)`

Could the resulting `subkey`s be deemed secure for crypto operations?","crypto",19,19,0,0.89,0,0,0,23
"484","https://www.reddit.com/r/crypto/comments/sxqw75/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-02-21","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",19,19,0,0.93,0,0,1,11
"485","https://www.reddit.com/r/crypto/comments/sv049d/i_have_a_few_questions_about_rsa_encryption/","SleakStick","2022-02-17","I have a few questions about RSA encryption","Hi, I recently took a short introduction class about the RSA encryption method and have a few questions.
First of all how big and far apart do p and q have to be for it to be undecryptable by a normal every day computer?
Second I wanted to know how the size of e influence the security of the encryption, I heard 3 was unsafe, why and what numbers are safer?
And lastly is it likely to be decryptable in the future using quantum computers and similar stuff?
Thanks a lot for the answers, It was a short half day course on the basics of RSA where we covered the theoretical part of the algorithm and not really the logistics, I was also wondering how the real world algorithm differs from the theoretical one.
P.S in case the letters are unclear ( I'm not sure if everyone uses the same ones) p and q; the two start prime numbers, e; the number of which the GCD with (p-1)(q-1) is 1 and d; 1/e mod(p*q) feel free to correct any mistakes I said, I'm new but full of excitement about the discovery of this hidden part of mathematics.","crypto",17,17,0,0.92,0,0,0,8
"486","https://www.reddit.com/r/crypto/comments/rfd7zu/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-12-13","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",20,20,0,0.9,0,0,1,1
"487","https://www.reddit.com/r/crypto/comments/r6l6eh/can_an_indcpa_cryptosystem_be_fully_homomorphic/","intx13","2021-12-01","Can an IND-CPA cryptosystem be fully homomorphic?","My understanding is that one use of a fully homomorphic cryptosystem is to build a Turing-complete system with encrypted input, state, and output. By definition, an IND-CPA cryptosystem has no tractable homomorphism for plaintext equivalence, right? And as far as I can tell, all Turing-complete systems require an equivalence relation\*. That would mean that an IND-CPA cryptosystem cannot be fully homomorphic. Is that correct?

\*I posted [this question](https://www.reddit.com/r/compsci/comments/r6js2i/does_turing_completeness_require_an_equivalence/), whether it is true that all Turing-complete systems must have an equivalence relation, to r/compsci, but I thought that maybe I'd also get an answer here from the crypto side.","crypto",19,19,0,0.82,0,0,1,14
"488","https://www.reddit.com/r/crypto/comments/qziyec/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-11-22","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",19,19,0,1,0,0,1,48
"489","https://www.reddit.com/r/crypto/comments/qolt1g/zksnarks_r1cs_and_qap/","HenryDaHorse","2021-11-07","zkSNARKs: R1CS and QAP","My blog post on a small part of zkSnarks -  [R1CS and QAP](https://risencrypto.github.io/zkSnarks/)

This is based a lot on Vitalik's Buterin's post on the same topic. However, I have tried to make it a little more of a ELI5 than his post (my post is not fully ELI5, though).   


This covers only the part where you transform the secret/problem into the R1CS form &amp; then to the QAP form. It doesn't cover the before &amp; the after.  

If you find any mistakes or something is not clear or if you have any suggestions, do let me know.","crypto",20,20,0,0.96,0,0,1,56
"490","https://www.reddit.com/r/crypto/comments/qdnn8i/luks_encryption_shawhirlpoolripemd160/","Silent_Box5211","2021-10-22","LUKS encryption - SHA/WHIRLPOOL/RIPEMD-160","Forgive me, I am still learning.

I  became informed that there are at least 5 types of secure hashing  algorithms - SHA1, SHA256, SHA512, whirpool and RIPEMD-160. I am sure  there is more, but lets focus just on them.

Data  security is based on password strength in order to protect from  brute-force. Is there also any additional layer of security related to a  hashing algorhitm? As a person who wants to be more resistant to a  potential attack, out of those mentioned 5 is there anything that I  should choose as preference or it does not matter?","crypto",20,20,0,0.95,0,0,1,105
"491","https://www.reddit.com/r/crypto/comments/q7h0yn/udp_communication_encryption/","Smoother-Bytes","2021-10-13","UDP communication encryption","Since I'm big in the don't roll your own cryptography ideal, here's the situation: I need to protect communications happening in UDP so my main question is, is DTLS safe? (As long as it's properly configured ofc) or if anyone would know of another similar solution or implementation even, that's more foolproof if you will (easier to configure right). Thanks in advance!

edit: this was cross-shared in cryptocurrency sub by a farming bot...","crypto",19,19,0,0.95,0,0,1,72
"492","https://www.reddit.com/r/crypto/comments/py14sl/jp_aumassons_ipcrypt_ipformatpreserving/","rgneainrnevo","2021-09-29","JP Aumasson's ipcrypt: IP-format-preserving encryption, with a dedicated 4-byte cipher inspired by SipHash","","crypto",18,18,0,0.77,0,0,1,44
"493","https://www.reddit.com/r/crypto/comments/pij323/how_are_dates_verified_for_x509_certificates/","AtropineTearz","2021-09-05","How Are Dates Verified For X509 Certificates?","I am wondering how these certificates date/time is verified. Does a CA have to verify it? Can I make a fake validity period with self-signed certificates?

Thank you","crypto",19,19,0,0.91,0,0,1,35
"494","https://www.reddit.com/r/crypto/comments/pglk1e/verify_server_is_running_same_codebase/","ImpressiveWord","2021-09-02","Verify server is running same codebase","I was wondering if it's possible to tell a client you're running a specific codebase/version. Consider a website that is open-source and posted on GitHub, so you can audit the code. Lets say this site accepts a file and a key, encrypts it, and returns it to you. The code on GitHub shows the site does not steal the file or key you upload, but you have no idea if the site you're using is running that (unmodified) code. 

For the record, I know this is a bad site/example, but it's the easiest way to communicate what I'm looking for. 

I initially considered an endpoint that would actively hash the codebase on the remote server, and respond the hash. Then you can compare it with the calculation you did yourself. However, nothing prevents the server from pre-calculating the hash, then just responding with that after code modifications. 

Maybe some sort of public key crypto system where you pass the server a public key, and it uses that to calculate something based on the files? 

Anyway, I'm not trying to do the above, I'm just curious what's out there :)","crypto",20,20,0,0.92,0,0,1,30
"495","https://www.reddit.com/r/crypto/comments/pcy4p3/yubikey_piv_encrypted_messaging_system/","violinclipper","2021-08-27","Yubikey PIV encrypted messaging system","I'm looking for a simple encrypted messaging protocol that identifies users by hardware security tokens. I haven't been able to find anything, so I'm curious if there are technical considerations that have prevented such an implementation from gaining adoption.

It seems like there should be a dead-simple terminal based encrypted messaging application where users are only identified by the PIV public key in their hardware device, with the web of trust problem left to a different service.

Thoughts?","crypto",19,19,0,0.89,0,0,1,45
"496","https://www.reddit.com/r/crypto/comments/ocbzke/what_are_the_steps_from_a_math_degree_to_a_job_in/","MegaGenius","2021-07-02","What are the steps from a math degree to a job in cryptography?","Hello, apologies if this is not the right place to post this. 

So, I am currently looking for my first real job. My degree is in math and physics (my interest leans more towards math at this point though, but I was very close to completing the requirements for a physics major when I decided that, so I completed it anyway). I'm open to a lot of things, but it seems that cryptography might be a good fit for me based on my interests. Abstract algebra is probably my favorite field, and it seems cryptography uses it a decent amount. I also like logic and theoretical computer science, which it also uses. 

So I know all of this math right now. I don't actually have that much knowledge or experience with cryptography currently. So my question is how do I get from where I am right now to having an actual cryptography job? 

I also know that cryptography is a large field, so getting a ""cryptography job"" might be a somewhat vague goal to have. Without knowing more about the field, I'm not sure how much more specific I can be. I will say that I'm more interested in the theory of it, since my interest is in the underlying math and theory behind it all. However, I would guess that a job working primarily in theory might be hard to get right off the bat. So I'm open to recommendations. 

Would it be helpful to actually study a lot of cryptography before I start a job? Or should I look for an entry level position that offers some sort of training? How feasible would finding something like that even be? 


I would also appreciate somewhat specific steps on getting to a job, in addition to how I should prepare for one. So far I've mostly been putting various search terms into Indeed, but haven't had a ton of luck with that so far. Maybe I need to keep at it, but I'm not sure if there would be a better method, or if there is something specific to the cryptography field that would be relevant.","crypto",19,19,0,0.89,0,0,1,38
"497","https://www.reddit.com/r/crypto/comments/nkuflu/post_quantum_candidate_saber_in_hardware/","TylerDTA","2021-05-25","Post Quantum Candidate SABER in Hardware","Hello Everyone! 

I am a grad student who is trying to do some work in the post quantum cryptography world and am trying to run the Saber hardware implementation found [HERE](https://github.com/sujoyetc/SABER_HW).

I have never used Vivado (most hardware Ive done was using Quartus) and I am having some difficulties understanding design flow. I was hoping to find someone who may have implemented this solution that I could chat with. 

Please let me know,

Thanks!","crypto",17,17,0,0.88,0,0,0,14
"498","https://www.reddit.com/r/crypto/comments/nhnagc/question_regarding_rsa/","Jbarazani","2021-05-21","Question Regarding RSA","Hey all, I am currently learning a bit about RSA and I came across this 'problem' and wanted to ask why RSA still works.

Let's say we made a very simple key, 

p = 5, q = 3  
so our n = 15, A = 4\*2 = 8 and let's pick e = 3  


My encryption key is a simple e(x) = x\^3 (mod 15)  


Now, let's say I encrypt the messages X = 1 and X = 16. 

1\^3 mod 15 = 1

16\^3 mod 15 = 1  


Obviously the decryption key, will spit back the same answer and we cannot attain the original answer.

&amp;#x200B;

So why does RSA work? My guess is that we just rely on the fact that n is so big, that any message X is small enough that even X\^e will basically always be smaller than n and as such, we will never get the same output from a different message.

&amp;#x200B;

So is that it? It works just because of how massive we make n, to ensure an X\^e is never greater?

&amp;#x200B;

Thank you :)","crypto",17,17,0,0.85,0,0,0,18
"499","https://www.reddit.com/r/crypto/comments/na5q1u/prime_order_curves_vs_ones_with_a_cofactor/","anonXMR","2021-05-11","Prime order curves vs ones with a co-factor","In curve25519, we operate in a cyclic subgroup. I understand why, it's not a prime order curve, so we operate in a prime order subgroup.

For prime order curves, like secp256k1, is the group of possible public points always the same order as the order of the curve itself?","crypto",19,19,0,1,0,0,0,28
"500","https://www.reddit.com/r/crypto/comments/mrt5f6/setting_up_secure_ecdlp/","lagib73","2021-04-16","Setting Up Secure ECDLP","I have a few questions on how to set up Elliptic Curve Discrete Log Problems that are safe against the Pohlig-Hellman attack, pairing attacks, and anomalous curve attacks.  If anyone can point me to any good sources on any of these issues, I would really appreciate it.  I have mostly looked at Washington along with a few other books and articles.

&amp;#x200B;

**Pohlig-Hellman:**  To protect against this, Bob must ensure that the order of P is divisible by a large prime number (from what I have found, 2\^160 is good enough as of 2015).  As far as I can tell, he has two options.  The first is to find |P| and factor it.  But factoring is a hard problem (and finding |P| isn't exactly easy).  Is it feasible to factor numbers that are around the size 2\^160?  His other option would be to find the number of points on the curve (the order of the group) then check that number is divisible by a large prime.  Then with a high probability, P will have order which is divisible by that same large prime.  This has the same problem that Bob's first approach had, except finding the number of points on the curve is (as far as I can tell) harder than finding |P|.  Both of these options seem bad.  In practice, what is done to ensure |P| is divisible by a large prime?

&amp;#x200B;

**Attacks with Pairing:**  I don't entirely understand the concept of pairings.  But as far as I can tell, as long as the curve used is not supersingular (another word I don't completely understand), attacks with pairings are probably infeasible.  Is there a fast way to determine if a curve is supersingular?

&amp;#x200B;

**Anomalous Curves:**  If the number of points on an elliptic curve over F\_q is equal to q, then the curve is called anomalous, and solving the ECDLP is easy.  Can Bob determine if a curve is anomalous without computing the number of points on the curve?  If not, is computing the number of points on the curve feasible?","crypto",19,19,0,0.89,0,0,0,27
"501","https://www.reddit.com/r/crypto/comments/mh2e2n/bulletproof_tls_newsletter_issue_75/","knotdjb","2021-03-31","Bulletproof TLS Newsletter Issue #75","","crypto",20,20,0,0.92,0,0,0,8
"502","https://www.reddit.com/r/crypto/comments/ru9web/sslv3_serverkeyexchange_signature_struct_differs/","g0rbe","2022-01-02","SSLv3 ServerKeyExchange Signature struct differs from RFC6101","I'm playing with implementing SSLv3 in Go according to [rfc6101](https://datatracker.ietf.org/doc/html/rfc6101).

I can deserialize ServerKeyExchange until ServerKeyExchange.signed\_params.

The cipher suite is `TLS_RSA_EXPORT_WITH_RC4_40_MD5 (0x0003)`.

The Certificate signature algo: `1.2.840.113549.1.1.5 (sha1WithRSAEncryption)`.

According to the [RFC](https://datatracker.ietf.org/doc/html/rfc6101#section-5.6.3) the structs should look like this:

        struct {
                select (KeyExchangeAlgorithm) {
                    case diffie_hellman:
                        ServerDHParams params;
                        Signature signed_params;
                    case rsa:
                        ServerRSAParams params;
                        Signature signed_params;
                    case fortezza_kea:
                        ServerFortezzaParams params;
                };
            } ServerKeyExchange;
    
            digitally-signed struct {
                select(SignatureAlgorithm) {
                    case anonymous: struct { };
                    case rsa:
                        opaque md5_hash[16];
                        opaque sha_hash[20];
                    case dsa:
                        opaque sha_hash[20];
                };
            } Signature;

but i got a different response form the server:

&amp;#x200B;

[Wireshark capture](https://preview.redd.it/s82tyok73a981.png?width=703&amp;format=png&amp;auto=webp&amp;s=671ec655842270d51e7c22fcc77d038c2fc83c4c)

What i am missing?

Thanks!","crypto",18,18,0,0.9,3,0,1,6
"503","https://www.reddit.com/r/crypto/comments/rbrjir/can_prngs_noncsprngs_be_used_in_certain/","Jstodd_","2021-12-08","Can PRNGS (non-CSPRNGs) be used in certain applications of crpytography?","Okay, so say my goal is **not** to get as random of a number as possible drawing from many inputs, because i want a pseudorandom number I can generate twice using the same seed.

For example, say I want to use a password as a seed in a PRNG such as ALEA and then use the pseudorandom values to generate a new key of a longer length (say i had a reason for doing this). Are there attack vectors here?

In my mind, if they dont know the original password, and the distribution of the frequency of characters is at least 99%+ statistically random (or am i wrong?) then how could there possibly be an attack vector here?



So 1) Is there an attack vector here, 2) If so can it be solved without a CSPRNG, and 3) If not would a CSPRNG solve this?

**Edit**: Ive since discovered a CSPRNG alternative to Alea called [IsaacCSPRNG](https://github.com/macmcmeans/isaacCSPRNG/blob/master/isaacCSPRNG-1.1.js). Let me know what you think of this CSPRNG.","crypto",18,18,0,0.81,1,1,1,8
"504","https://www.reddit.com/r/crypto/comments/qe1dya/the_design_and_evolution_of_ocb/","rgneainrnevo","2021-10-23","The Design and Evolution of OCB","","crypto",19,19,0,0.92,0,0,1,75
"505","https://www.reddit.com/r/crypto/comments/pxbl5j/the_new_netbsd_entropy_subsystem_by_taylor/","atoponce","2021-09-28","The new NetBSD entropy subsystem by Taylor Campbell","","crypto",18,18,0,0.95,0,0,0,36
"506","https://www.reddit.com/r/crypto/comments/q43r33/srp_is_now_deprecated/","Sc00bz","2021-10-08","SRP is Now Deprecated","","crypto",41,41,0,0.92,1,1,1,63
"507","https://www.reddit.com/r/crypto/comments/p7mems/hash_quine_generated_for_apples_content_matching/","Natanael_L","2021-08-19","Hash quine generated for Apple's content matching neuralhash algorithm [Twitter]","","crypto",36,36,0,0.9,0,0,1,37
"508","https://www.reddit.com/r/crypto/comments/s910yr/telenot_complex_insecure_aes_key_generation/","knotdjb","2022-01-21","Telenot Complex: Insecure AES Key Generation","","crypto",39,39,0,0.98,0,0,1,2
"509","https://www.reddit.com/r/crypto/comments/s7virj/privacypreserving_insurance_quotes_a/","jeremycbradley","2022-01-19","Privacy-preserving insurance quotes: A fully-encrypted use case using Concrete Numpy","Hello! Jeremy here from Zama. Last week, we released Concrete Numpy, a python package that contains the tools data scientists need to compile various numpy functions into their Fully Homomorphic Encryption equivalents. Today, we've released a tutorial on how Concrete Numpy can be used to create a privacy-preserving insurance quotes system.

The article is here if you're interested: [https://medium.com/zama-ai/privacy-preserving-insurance-quotes-356b9719b760](https://medium.com/zama-ai/privacy-preserving-insurance-quotes-356b9719b760)","crypto",37,37,0,0.97,1,0,1,2
"510","https://www.reddit.com/r/crypto/comments/rin4rb/anssi_views_on_the_pqc_transition/","marklarledu","2021-12-17","ANSSI views on the PQC transition","","crypto",39,39,0,1,0,0,1,1
"511","https://www.reddit.com/r/crypto/comments/q8mej2/bugs_in_our_pockets_the_risks_of_clientside/","yawkat","2021-10-15","Bugs in our Pockets: The Risks of Client-Side Scanning","","crypto",39,39,0,0.98,1,0,0,69
"512","https://www.reddit.com/r/crypto/comments/no5lcp/are_there_any_quantum_resistant_asymmetric/","Electrical-Panic-553","2021-05-30","Are there any quantum resistant asymmetric encryption algorithms that can be generated and utilized by classical computers?","Or is it even possible to exist?","crypto",39,39,0,0.92,0,0,0,20
"513","https://www.reddit.com/r/crypto/comments/m1bnx0/how_do_zksnarks_work/","knifuser","2021-03-09","How do zk-SNArKs work?","Not sure if this is considered cryptography or just straight mathematics but here we go. Can anyone explain to me, in as simple terms as possible, how zk-SNArKs work? I understand the main principle behind interactive ZK proofs but can't quite grasp how they work in a non-interactive sense, could anyone help me out?","crypto",39,39,0,0.98,0,0,0,9
"514","https://www.reddit.com/r/crypto/comments/m0ayjd/lord_of_the_rings_side_channel_attacks_on_the_cpu/","ScottContini","2021-03-08","Lord of the Ring(s): Side Channel Attacks on the CPU On-Chip Ring Interconnect Are Practical","","crypto",40,40,0,1,0,0,0,7
"515","https://www.reddit.com/r/crypto/comments/rgldp9/using_zero_to_attack_zeroknowledge_proof_plonk/","cryptosubtlety","2021-12-15","Using zero to attack zero-knowledge proof PLONK","[https://cryptosubtlety.medium.com/00-8d4adcf4d255](https://cryptosubtlety.medium.com/00-8d4adcf4d255)","crypto",32,32,0,0.8,1,0,1,1
"516","https://www.reddit.com/r/crypto/comments/r7dp19/riscv_announces_ratification_of_its_new_scalar/","bnmrshll","2021-12-02","RISC-V announces ratification of it's new Scalar Cryptography &amp; Entropy Source Extensions","* Link to the announcement: [https://riscv.org/announcements/2021/12/riscv-ratifies-15-new-specifications/](https://riscv.org/announcements/2021/12/riscv-ratifies-15-new-specifications/)
* Link to the spec: [https://github.com/riscv/riscv-crypto/releases](https://github.com/riscv/riscv-crypto/releases)","crypto",38,38,0,0.97,0,0,1,0
"517","https://www.reddit.com/r/crypto/comments/r4m244/cryptosystem_that_decrypts_to_two_plaintexts/","ImpressiveWord","2021-11-29","Cryptosystem that decrypts to two plaintexts given two keys.","Is there a cryptosystem where I can encrypt two plaintexts with two keys into one ciphertext, and then the decryption outputs one of the messages depending on which key is used? 

Appending two ciphertexts so it's two totally different routines doesn't really count. I'm looking for: `Enc(k1, p1, k2, p2) = c` and `Dec(c, k1) = p1` as well as `Dec(c, k2) = p2`

I'm more curious than anything, not trying to design a system around this, though I'm curious what applications are there.","crypto",36,36,0,0.91,3,0,1,11
"518","https://www.reddit.com/r/crypto/comments/p8g67s/starttls_implementations_in_email_clients_servers/","Natanael_L","2021-08-20","STARTTLS implementations in email clients &amp; servers plagued by 40+ vulnerabilities","","crypto",35,35,0,0.91,0,0,1,34
"519","https://www.reddit.com/r/crypto/comments/ox0sll/demystifying_recursive_zeroknowledge_proofs/","minbunny","2021-08-03","Demystifying recursive zero-knowledge proofs","","crypto",34,34,0,0.97,0,0,1,43
"520","https://www.reddit.com/r/crypto/comments/oryqj2/why_do_folks_care_so_much_about_using_256bit/","john_alan","2021-07-26","Why do folks care so much about using 256-bit symmetric keys, when key agreement (RSA/ECDH) is only 128-bit hard?","It seems strange to me.
So many pander to the ""256""bit minimum, when alas, our RSA key encapsulation/ECC key agreement schemes are only 128-bit hard.


Thus there is no benefit to using 256-bit symmetric after a asymmetric KEX, right?

Have you guys noticed the forced nature of ""must use 256-bit keys"" for TLS?","crypto",39,39,0,0.97,0,0,1,46
"521","https://www.reddit.com/r/crypto/comments/nulsw3/dead_ends_in_cryptanalysis_2_timing_sidechannels/","Soatok","2021-06-07","Dead Ends in Cryptanalysis #2: Timing Side-Channels","","crypto",37,37,0,0.86,0,0,2,38
"522","https://www.reddit.com/r/crypto/comments/n17k3t/my_breakdown_on_partition_oracle_attacks/","john_alan","2021-04-29","My breakdown on Partition Oracle Attacks","Hello,

I've seen a few posts over the last few weeks on this [novel](https://eprint.iacr.org/2020/1491.pdf) and interesting attack - partition oracles.

I feel like some of the commenters (including myself), found the intuition in the paper a little difficult to grasp, so I spent some time to really understand the paper and the impacts and thought it would be worth sharing in simple language.

Key concepts (pun intended):

* This attack allows an attacker to figure out which password (and ultimately key) is being used between a server and client.

* The main insight of this attack is that it enables one to check if a password resides in a set of passwords with one call to the oracle. Facilitating a binary search, (i.e. test many passwords at once).

* The attack requires:

1) an interactive client/server where messages are encrypted under keys derived from **passwords**.

2) the encryption is ""non-committing"".

3) the server/oracle responds indicating if decryption was a success.


* The attack works on ""non-committing authenticated crypto"", which simply means many possible keys can be considered valid by the authentication mechanism used by the AEAD primitive. Non-committing AEAD doesn't mean that the ciphertext will decrypt to *correct* plaintext with multiple keys, just that the tag check will pass with multiple keys. These colliding keys will be a tiny tiny fraction of the key space, but this attack shows how to pick which keys (passwords) reside in the group of keys colliding.

* This attack requires that there exists an oracle (server, app or otherwise) that has the target key. If there is no entity with the target key to test against, this attack is useless. Thus it doesn't affect ""offline"" stored encrypted files where you use a password to derive a key, encrypt and then dispose of the key, as there is no target key to test against - all you can do is brute force the password for the encrypted data the good old fashioned way, you can't test many passwords at once.


* If this attack was a function it could be described as:
    func partitionOracle(poisonedCiphertext: ciphertext) -&gt; Bool

The attack can be summarised as the following flow:

* Make a ciphertext payload, that successfully passes tag validation under a large number of keys, you do this with a little linear algebra and Sage. This payload will be made to ""decrypt"" or pass validation of AEAD for a specific set of keys which relate to a subset of passwords.

* If the server decrypts successfully (passes tag validation), one can infer that one of the passwords in the colliding set of keys used to create the ciphertext payload is the actual key, and thus make another two ciphertexts splitting (or partitioning ;) ) that set of keys into two, to continue the search.

* By repeating this process, one can keep sending ""poisoned"" ciphertexts, which are crafted to pass validation for many passwords at once to the target server/oracle, and keep reducing the search space as the server tells you if the current ciphertext attempt was good (passed validation).

Conclusion:

* Cool attack, somewhat limited scope.

* Some mitigations are already available.

* Only affects password derived keys, where weak password was used.

* Doesn't affect ECDH/E agreed keys.

* Doesn't affect AEAD where there is no oracle *with target key* to test against.

* Doesnt break any symmetric primitive. 



Hope this helps folks learn, wrote to the authors during my learning, and they are really cool and wrote back.","crypto",36,36,0,0.97,0,0,0,16
"523","https://www.reddit.com/r/crypto/comments/mhz1re/lots_of_new_informationannouncements_on_the_iacr/","rosulek","2021-04-01","Lots of new information/announcements on the IACR (Infernal Alliance for Craptologic Research) webpage","","crypto",38,38,0,0.95,0,0,0,10
"524","https://www.reddit.com/r/crypto/comments/r282cb/why_do_encryptions_have_to_be_longer_than_the/","Jstodd_","2021-11-25","Why do encryptions have to be longer than the original message?","So from what I understand, adding bits to an encrypted message can do two things: 1) obfuscate length, and 2) perhaps it helps the difficulty in cracking it, for whatever technical reasons.

But if a message is sufficiently long, say 100 words or more, what actual benefit would length obfuscation offer? The longer an encrypted message is the less that can be inferred from it in general... unless this has something more to do with the specific encryption algorithms and how difficulty in brute force decryption is achieved?

Could there be a secure ""lossless"" encryption algorithm in theory? If the internet is built on encryption couldnt we make everything faster if we, theoretically, had memory-efficient encryption?

i want to hear from the cryptography experts on this, and why this would or wouldn't be a good idea and why.","crypto",35,35,0,0.9,0,0,1,91
"525","https://www.reddit.com/r/crypto/comments/qqco6f/sizing_up_postquantum_signatures/","yawkat","2021-11-09","Sizing Up Post-Quantum Signatures","","crypto",35,35,0,1,0,0,1,71
"526","https://www.reddit.com/r/crypto/comments/qnvwpq/do_you_trust_encryption/","chaplin2","2021-11-06","Do you trust encryption?!","We all talk about the usefulness of encryption in securing data. Its great for jobs, discussions on Reddit, etc!

But when I talk to cryptographers, a lot of them actually dont trust encryption. For instance, I ask them if you use encrypted backups to cloud providers; a lot of them respond, oh, no, I use external hard drives! An example is Bruce Schneier (an interesting case, given that he invented algorithms that are supposed to protect others).

There are many factors that could make encryption ineffective. The operating systems could generate weak keys, keys could leak or be stolen, the algorithm or software might be flawed, there could be backdoors in hardware or software, developers may use crypto in their applications in ways that can go wrong, etc.

So, I thought I run a poll on Reddit and gather some data about this. To make it more precise, here is the setting.

Algorithm: AES-256-GCM or a ChaPoly cipher 

Application: File encryption or backup 

Software: Any software of your choice in public domain 

Adversary: State-level actor  (in my view the only relevant adversary, given that the bars are nowadays high for hackers).

Do you trust that a ciphertext produced in this model holds up until 2040?

You need to account for your ability to secure the key material, potential vulnerabilities or backdoors in hardware and software that you use every day, etc.

This is a practical question about YOUR case, not a theoretical one. I think its a useful one, given that people here are familiar with cryptography and its myriad of pitfalls.

Encryption is increasingly used and might become default. It's clear that the main algorithms are mathematically secure in our lifetimes. This will put pressure on introducing vulnerabilities in encryption software and end points (for instance supply chain attacks on OS or crypto libraries). It will probably also shift the attacks towards hardware or lower levels. It's important to understand the scope of this problem, now and in the foreseeable future.","crypto",32,32,0,0.83,1,0,1,148
"527","https://www.reddit.com/r/crypto/comments/pq8erj/im_writing_a_communication_protocol_standard_for/","YukaTLG","2021-09-17","I'm writing a communication protocol standard for LoRa and want to include cryptography at the transport layer.. I have questions","LoRa is ""Long Range"" radio.  For the purpose of this post just think of it as WiFi but much longer ranges (realistic shots can go further than 10 km) and typically less-than dial-up speeds.  If you want to read more, have at it: [https://en.wikipedia.org/wiki/LoRa](https://en.wikipedia.org/wiki/LoRa)

This project is primarily a learning exercise for me.  I'm writing a python library that acts as an API between the radio hardware itself (communicating via serial interface) and any python program I could ever want to transmit data out of.  I have hopes of expanding it further to add more capability as I go. **Again, this is all a learning exercise for me.** I'm potentially reinventing a wheel here just so I can learn how the wheel was invented.  I completed phase 1 of my proof of concept yesterday with a successful field test.

The problem I'm running into is packet size.  I have UP TO 240 bytes (characters) to play with and that includes packet metadata such as the ""to"" and ""from"" fields.  It seems like a lot to play with but I'm finding that encrypting my data payloads adds a tremendous amount of overhead after the considerable overhead from the metadata.

I already have Diffie Hellman Key Exchange operational between two radios.  With a full DH exchange coupled with encryption via a simple substitution cypher (for now) then fragmenting the encrypted payload I'm able to transfer \~120 bytes of data with \~1200 bytes of transmission in \~18 seconds.  I have a decent amount of room to reduce my metadata overhead and overhead from how I encode the encrypted data payload and will implement the majority of those optimizations in my next round of development.

Some additional considerations/challenges:

1. I have to assume the radio net is not secure.  Anyone could be monitoring it.  Data payload must be encrypted.
2. The key exchange must occur over the radio net.
3. I'm not focused on authentication right now but I have no idea how to best authenticate the identity of the receiver yet.  I'm open to suggestions.  I may leave that up to the application layer as I'm more focused on data assurance at the transport layer by providing the application a standardized API to send data to the destination using a transport layer secured ""channel"" with confirmation the data reached its intended destination intact.
4. Data transmission may require relays between the sender and receiver.  These relays should not be able to realistically decrypt the data.
5. 240 byte packet length is not always guaranteed.  That's the most it could be.  If the radio band gets busy or there is interference this could drop to as low as 32 bytes and possibly lower.  I'll write my protocol to try to transmit data as long as there is enough space left over after the metadata overhead.  Remember: 1 character = 1 byte (in this case).

So I guess after all that my questions for the group are:

1. Given a DH exchange what would be the best course of action to encrypt the data payload?
2. Is DH exchange of any implementation the best option for this project?

I guess I'm looking for a crypto algorithm/method which won't fail to frequency analysis but also is lightweight enough in that it doesn't add a tremendous amount of overhead to the byte-size of the data.  If DH is ideal then a crypto algorithm that can work with the full key generated by the DH key exchange might be ideal whether symmetric using just the full key or possibly asymmetric using the partial and the full key.  I'm not really sure - encryption/cryptography isn't my area of expertise.

I'm open to suggestions.. books/articles to read, other code to review, etc.  FWIW, communication protocols, how they work and how they are manipulated are what I work with on a daily basis.","crypto",32,32,0,0.9,0,0,1,80
"528","https://www.reddit.com/r/crypto/comments/pptx7v/what_math_courses_should_i_take_if_i_want_to_get/","AtropineTearz","2021-09-17","What Math Courses Should I Take If I Want To Get Into Studying Zero-Knowledge Proofs?","Hi,

So I was wondering what prerequisites are required to understanding the math behind zero knowledge proofs. What are some good courses I can take? What should I be looking at?

Thank you!","crypto",34,34,0,0.98,0,0,1,43
"529","https://www.reddit.com/r/crypto/comments/pckt97/intel_labs_establishes_crypto_frontiers_research/","Natanael_L","2021-08-27","Intel Labs Establishes Crypto Frontiers Research Center","","crypto",33,33,0,0.93,0,0,1,38
"530","https://www.reddit.com/r/crypto/comments/o292be/openssl_300beta1_is_finally_out/","romendil","2021-06-17","OpenSSL 3.0.0-beta1 is finally out!","=§ Go grab the release candidate and start testing >ð =à! 

- Official announcement =â : https://www.mail-archive.com/openssl-project@openssl.org/msg02460.html
- Blog post: https://www.openssl.org/blog/blog/2021/06/17/OpenSSL3.0ReleaseCandidate/
- Press Release =ð: https://www.prnewswire.com/news-releases/openssl-3-0-release-candidate-now-available-301314821.html","crypto",35,35,0,0.93,0,0,2,15
"531","https://www.reddit.com/r/crypto/comments/rt46n1/question_regarding_distinguished_name_in_x509v3/","voracious-ladder","2021-12-31","Question regarding Distinguished Name in X509v3","Hello, I'm reading on RFC 5280 for information on distinguished name. The RFC defines it as such:

```

   Name ::= CHOICE { -- only one possibility for now --
     rdnSequence  RDNSequence }

   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

   RelativeDistinguishedName ::=
     SET SIZE (1..MAX) OF AttributeTypeAndValue

   AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY -- DEFINED BY AttributeType

```

From what I understand, the distinguished name is a sequence, containing sets, which in turn contain sequences representing the attributes. An example I found online is this:

```
SEQUENCE {
. SET {
. . SEQUENCE {
. . . OBJECT IDENTIFIER countryName (2 5 4 6)
. . . PrintableString 'US'
. . . }
. . }
. SET {
. . SEQUENCE {
. . . OBJECT IDENTIFIER organizationName (2 5 4 10)
. . . PrintableString 'IBM'
. . . }
. . }
. SET {
. . SEQUENCE {
. . . OBJECT IDENTIFIER commonName (2 5 4 3)
. . . PrintableString 'Gumby'
. . . }
. . }
. } 
```

What I don't understand is: why are the sets necessary? Rather than wrapping attribute sequence in sets, why not just define distinguished name as a sequence containing attribute sequence? Can I safely assume that the set size must be 1 for all certificates I encounter during a TLS handshake?","crypto",32,32,0,0.92,0,0,1,4
"532","https://www.reddit.com/r/crypto/comments/odmffi/trying_to_implement_my_own_sha256_hash_for_fun/","csthrowawayquestion","2021-07-04","Trying to implement my own SHA-256 hash for fun and I have an edge case question: what to do if the final block size is in the range of 447-448 bits in size? Do we need the zeros after the 1 of the padding?","I know that you *must* include padding, one 1 and *n* 0's, then the message size in 64 bits, and that's usually fine, but what about when the final block of the message (assuming it's been divided into 512 bit sized blocks) fits exactly in that final block plus the 64 bit size?

For example, if the final part of the message (mod 512) is remainder 448, we can add the 64 bit size and it fits perfectly, I *believe* we still need padding in this case; is that true?  Or what about if it's 447?  Just one 1 and we're good, or do we need some zeros?  If so, just one zero?

I understand what I have to do if padding is needed (it'll flow into another block) but just not sure about the ""minimum"" padding needed, and my searches aren't really finding this specific question.  Thanks.

ANSWER: minimum padding possible is one 1 and zero 0's.","crypto",35,35,0,0.97,0,0,1,24
"533","https://www.reddit.com/r/crypto/comments/obe419/ethical_question_on_a_broken_implementation_of_a/","Sc00bz","2021-07-01","Ethical question on a broken implementation of a broken CSPRNG (called UHEPRNG)","I found bugs in an implementation of UHEPRNG which is itself a broken CSPRNG. The implementer wants to use UHEPRNG even after being told it's broken and shown attack code. Basically UHEPRNG outputs its internal state and other broken things. I told them I found bugs in their implementation but won't say what they are to prevent them from using their implementation of UHEPRNG in production. According to all their other projects, I believe they are going to use this for some ""crypto as in cryptocurrency"" project.

**The question**: Should I tell them what is wrong with their implementation of UHEPRNG knowing that they will likely use this in production?","crypto",34,34,0,0.96,1,0,1,38
"534","https://www.reddit.com/r/crypto/comments/r16mmm/next_generation_internet_webinar_on_future_of/","atoponce","2021-11-24","Next Generation Internet webinar on future of OpenPGP","","crypto",31,31,0,0.96,0,0,1,39
"535","https://www.reddit.com/r/crypto/comments/ptwqiy/eddsa_signature_scheme_is_vulnerable_to_single/","anonXMR","2021-09-23","EdDSA signature scheme is vulnerable to single fault attacks","","crypto",33,33,0,0.95,2,0,1,37
"536","https://www.reddit.com/r/crypto/comments/ouh4mb/canonicalization_attacks_against_macs_and/","Soatok","2021-07-30","Canonicalization Attacks Against MACs and Signatures","","crypto",35,35,0,0.9,0,0,1,45
"537","https://www.reddit.com/r/crypto/comments/oet1kg/the_definitive_guide_to_modulo_bias_and_how_to/","knotdjb","2021-07-06","The definitive guide to Modulo Bias and how to avoid it!","","crypto",30,30,0,0.92,0,0,1,19
"538","https://www.reddit.com/r/crypto/comments/o6lycd/mathematical_cryptology_new_open_access_journal/","Natanael_L","2021-06-23","Mathematical Cryptology - new open access journal","","crypto",33,33,0,0.91,0,0,1,12
"539","https://www.reddit.com/r/crypto/comments/lzwkzv/noknowledge_proofs_a_useless_cryptographic/","blacklemon67","2021-03-07","No-Knowledge Proofs: A useless cryptographic diversion","","crypto",34,34,0,0.9,0,0,0,12
"540","https://www.reddit.com/r/crypto/comments/rcyqle/on_verifiable_computation_witness/","DoWhile","2021-12-10","On verifiable computation, witness indistinguishability, and zero-knowledge","Trigger warning: There's going to be some cryptocurrency-related words in this post. I admit, this is not the best subreddit for this post. But this subreddit has the right kind of people who I want an answer from. Delete this post if it's too out of scope.

Story: I'm happily content with the world of theory surrounding interactive proofs and cryptographic cousins of them.  Some that stand out are in the title of this post: VC, WI, and ZK.  VC (no privacy, just verify), and ZK (zk simulation privacy) have enjoyed their share of popularity with the cryptocurrency world, whereas WI (verifier can't tell which witness you used in an NP relation proof) holds a place in my theory heart for being something that's easier to achieve than ZK but strong enough as a subprotocol in many proofs.  In my worldview, SNARKs and zkSNARKs are two similar but distinct objects that provide different guarantees and have different assumptions (sorta).

Out of morbid curiosity, I was reading about zkRollups. I found blogspam after blogspam of explanations. Some ""relayer"" will gather up transactions then form a zkSNARK of the aggregation of that batch and match it to some publicly committed hash.  Ultimately, I had a very mundane question, one that sadly isn't theory: it's always just presented as a zkSNARK, but why the zk?  Anyone can be a relayer, what privacy do you want?  Nothing else in the rest of the ecosystem suggests any sort of privacy, what's the zk for? I can see why WI is useless here: there's only one witness that'll hash down to the right thing anyhow.

Couldn't get a straight, technical answer out of cryptocurrency folks.  Thought I'd give /r/crypto a shot.

TL;DR: ELI(theorist) Why are zkRollups zkSNARKs? Why not just SNARKs?","crypto",29,29,0,0.87,0,0,1,10
"541","https://www.reddit.com/r/crypto/comments/oqrg1e/are_passwords_with_words_really_safer_than/","cryptomann1","2021-07-24","Are passwords with words really safer than passwords with complex characters?","When you search ""safe passwords"" in Google blogs show up talking about how you should use normal words instead of complex passwords. Among these blogs its also the NIST.

For example:

""window car plate keyboard mouse awesome""

This would be safer than ""screwing up"" the password a little bit? like adding some special characters removing i for 1, s for $, adding some number to it..

Why is that? I just feel a bit paranoid at simply having some words as a password so I like to add in some numbers and special chars and so on.

Are they conspiring to decrease password strength on people? (tinfoil hat on)

&amp;#x200B;

Also, is there any site that you can use to measure your password strength against a government bruteforce attack? the ones that I find it just says for instance, I tested a password (not the same but similar format):

""It would take a computer about 1 undecillion years to crack your password""

This sounds cool. However it's just one computer. What happens if someone with resources has a bunch of computers to bruteforce at once? How do I check my password strength then?","crypto",35,35,0,0.82,0,0,1,123
"542","https://www.reddit.com/r/crypto/comments/rqnnpj/how_does_one_determine_a_lower_bound_on_the/","bik1230","2021-12-28","How does one determine a lower bound on the randomness of a ring oscillator?","From what I have read, there are usually several random components that determine what one would sample from a ring oscillator, and that typically only thermal noise is looked at due to being easier to analyze than some other sources of noise in an oscillator.

What does one need to look at and characterize in order to hopefully determine a lower bound on that thermal noise? If anyone knows of any ""accessible"" papers on this topic, or better yet, any actual analysis of a real system, I would definitely appreciate links. I'm not planning to carry out such an analysis myself, but I am quite curious about the topic.

Last year I worked on an electronic gadget, that displays random dice rolls, numbers, playing cards, words, that sort of stuff. Of course this does not require proper cryptographic randomness, as it's just a toy, but still, I had a lot of fun messing around with ways to hopefully gather 128 or more bits of entropy. This was on an Arduino, and I used a simple procedure of setting the ADC to ground, then switching it to the 1.1V reference, and then immediately sampling and feeding the sample to a hash function. Repeat 4096 times. I then use the output of the hash function as the seed of a CSPRNG. Definitely good enough for dice, I think.

More recently I wanted to play around with more powerful microcontrollers, and so I am currently waiting for a few Raspberry Pi Picos to arrive. My first project will probably be porting the randomness gadget thing to it. The chip on the Pico, RP2040, has a ring oscillator that can be used as the input clock in lieu of a more accurate external clock. But if you do use an external clock, you can read the provided ""randombit"" register to use the clock jitter as a source of randomness. Unfortunately, the engineers who designed the chip never analyzed how random it actually is, so it can't be used for anything serious, but reading about that did get me curious, which lead me to the question in the title :)","crypto",34,34,0,0.97,1,0,1,10
"543","https://www.reddit.com/r/crypto/comments/qgc2o3/the_aegis_family_of_authenticated_encryption/","atoponce","2021-10-26","The AEGIS family of authenticated encryption algorithms","","crypto",29,29,0,0.93,0,0,1,87
"544","https://www.reddit.com/r/crypto/comments/q26rws/detecting_child_sex_abuse_imagery_in_endtoend/","kozarev_atanas","2021-10-05","Detecting child sex abuse imagery in end-to-end encrypted communications in a privacy-respectful manner","","crypto",34,34,0,0.74,0,0,1,87
"545","https://www.reddit.com/r/crypto/comments/panm2d/how_did_public_key_cryptography_go_from_an_idea/","The_How_To_Linux","2021-08-24","How did public key cryptography go from an idea in James H. Ellis head, to an actual usable program like gnu privacy guard?","Hello, i have been trying to wrap my head around public key cryptography for a while, and this is what i have so far

it all started with this guy [https://en.wikipedia.org/wiki/James\_H.\_Ellis](https://en.wikipedia.org/wiki/James_H._Ellis) he was the first to really think up public key cryptography, but what i'm confused about is this, how did public key cryptography get transformed from an idea in this guys head?

to an actual free and work able program like gnu privacy guard? [https://en.wikipedia.org/wiki/GNU\_Privacy\_Guard](https://en.wikipedia.org/wiki/GNU_Privacy_Guard)

how did public key cryptography come so far? what were the big steps in between? who made these steps and why?

i know diffe helman and RSA is in there, but i'm not clear and what came first and what built off what first and why, if anyone could help me so i can have a clear linear what came before what history i would really appreciate it, thank you.","crypto",34,34,0,0.88,0,0,1,37
"546","https://www.reddit.com/r/crypto/comments/p0qhla/best_undergrad_classes_to_take_for_research/","DaJuukes","2021-08-09","Best Undergrad Classes to Take for Research?","Hello,

I'm an incoming undergraduate student at UC Berkeley majoring in Electrical Engineering and Computer Sciences. I am extremely interested in pursuing undergraduate research (and eventually a PhD) in the field of computer security -- specifically, theoretical or applied cryptography. I've been involved with security competitions and read some materials/done challenges like Cryptopals before -- so I have some very basic knowledge of the field -- but I want to solidify my theoretical knowledge in preparation for applying to PhD programs and allowing me to get involved in research efforts here. My few years of research experience at other universities has been extremely applied (implementation / high level overviews), and I want to be able to contribute to more theoretical work.

Here are a few courses I've found and intend to take already:

[CS 70 - Discrete Math and Probability Theory](https://www2.eecs.berkeley.edu/Courses/CS70/) 

[CS 126 - Probability and Random Processes](https://www2.eecs.berkeley.edu/Courses/EECS126/) 

[CS 168 - Introduction to the Internet: Architecture and Protocols](https://www2.eecs.berkeley.edu/Courses/CS168/)

[CS 161 (261) - (Graduate) Computer Security](https://www2.eecs.berkeley.edu/Courses/CS161/)

[CS 276 - Graduate Cryptography](https://www2.eecs.berkeley.edu/Courses/CS276/)

[Math 115 - Introduction to Number Theory](https://math.berkeley.edu/courses/spring-2021-math-115-001-lec)

[Math 254A - Graduate Number Theory](https://math.berkeley.edu/courses/fall-2020-math-254a-001-lec)

[CS 294-S02 - Graduate Analysis and Design of Cryptographic Primitives](https://people.eecs.berkeley.edu/~daw/teaching/cs294) (note this class is rarely offered, so it is unlikely I can take it)

So far I think I've covered a good amount of probability, basic applied security, number theory, networking, systems(not listed but a required course), and cryptography. My aim is to join the [crypto@berkeley](https://crypto.eecs.berkeley.edu/) lab or similar efforts. I'll be reaching out to them soon about what I should do, but I wanted other opinions if possible.

Am I missing any important topics or coursework? I think more math may be necessary but I do not know enough yet to identify the specific fields needed.

Thanks!","crypto",28,28,0,0.91,0,0,2,38
"547","https://www.reddit.com/r/crypto/comments/of7fy1/rsa_a_silly_thought/","Tr0user_Snake","2021-07-07","RSA: A Silly Thought","As most of you probably know, the RSA cryptosystem is named after each of its creators: Ron Rivest, Adi Shamir and Leonard Adleman. It just occurred to me that the chosen acronym RSA probably isn't the alphabetical order choice ""ARS"" for a hilarious reason.

People often use the phrase ""RSA encryption"" and it is never abbreviated RSAE. But using the alphabetical acronym, we obtain a wonderful, pronounceable acronym:

ARSE

=","crypto",31,31,0,0.74,0,0,1,24
"548","https://www.reddit.com/r/crypto/comments/o7oh4w/skskeyserversnet_pool_dns_records_disabled/","SAI_Peregrinus","2021-06-25","sks-keyservers.net pool DNS records disabled effective immediately","https://sks-keyservers.net/ announced

&gt; 
This service is deprecated. This means it is no longer maintained, and new HKPS certificates will not be issued. Service reliability should not be expected.

&gt; **Update 2021-06-21**: Due to even more GDPR takedown requests, the DNS records for the pool will no longer be provided at all.

If you were still depending on the PGP/GPG keyserver network (why?) for some reason you now get to change pool. Or reconsider your choices to use the keyserver networks in the first place, it's been deprecated since IIRC 2018.","crypto",31,31,0,0.94,0,0,1,41
"549","https://www.reddit.com/r/crypto/comments/o7iuzr/ssh_protocol_where_are_the_seeds_for_the_initial/","Extension_Carrot_274","2021-06-25","[SSH protocol] Where are the seeds for the initial key exchange phase taken from?"," I  know that the standard DH and ECDH key exchange algorithms require the client and server to agree on a large prime number (in the DH  algorithm) or a curve and a base point (in the ECDH algorithm), but if I inspect  the SSH packet during the `""Key Exchange Init""` phase, there is  no sign of  these shared seeds. How do they get them then?. 

 I checked the packets and the only information, after the `""Key Exchange Init""` and before the `""New Keys""` messages, are:

* `""Client: Elliptic Curve Diffie-Hellman Key Exchange Init""`  
In which there is only the *ephemeral public key* of the client (i.e. the one generated thanks to the chosen curve)
* `""Server: Elliptic Curve Diffie-Hellman Key Exchange Replay""`  
In which there is the *public host key* of the server, the *ephemeral public key* of the server (always the one generated with the curve) and the *exchange hash* (as it is called in rfc4253).

I still don't see where the information about the curve to be used is exchanged. Thanks!","crypto",32,32,0,1,0,0,1,16
"550","https://www.reddit.com/r/crypto/comments/t149nk/encrypted_search_using_fhe/","jeremycbradley","2022-02-25","Encrypted search using FHE","Hey everyone! 

We at Zama collaborated with [Optalysys](https://medium.com/@optalysys) on implementing an encrypted search operation using [the Concrete Boolean library](https://docs.zama.ai/concrete/boolean-lib/master/), and running it with the assistance of optical Fourier transform hardware. 

Here's the link, if you're interested:

[https://medium.com/zama-ai/encrypted-search-using-fully-homomorphic-encryption-99cd163b94](https://medium.com/zama-ai/encrypted-search-using-fully-homomorphic-encryption-99cd163b94)","crypto",29,29,0,0.96,0,0,2,9
"551","https://www.reddit.com/r/crypto/comments/rlc6v9/what_is_the_difference_between_bitlocker_and_the/","FriendlyPoppyseed","2021-12-21","What is the difference between Bitlocker and the encryption in Win10 Home","Win 10 Home doesn't have Bitlocker, only Win 10 Pro and other editions, but Home also has something called 'Device encryption'. What is the difference?","crypto",29,29,0,0.91,0,0,3,5
"552","https://www.reddit.com/r/crypto/comments/retkhh/why_isnt_it_enough_to_mask_only_registers_against/","Suspicious-Net2452","2021-12-12","Why isn't it enough to mask only registers against side channel analysis?","Hello,

Suppose that we implement AES cipher on FPGA, which processes the algorithm in 10 clock cycles. Every round is completed in a clock cycle then the result will be updated in state register. When we apply side channel attack, we find correlation with the power consumption at the register update moment. We couldn't find any correlation with the power models of the combinatorial logic Hamming weight model. So I thought masking the register would be sufficient but appearently it doesn't.

My question is: Is it possible to apply side channel analysis with the non-registered values (for example shiftrows output)?

And what is wrong with the following masking scheme? (Mask input will be changed in every clock cycle.)

&amp;#x200B;

[Masking register against SCA](https://preview.redd.it/7dfqw7e9b5581.png?width=476&amp;format=png&amp;auto=webp&amp;s=c92b2d586b7fef6368bb7f8e39e98af0ac118098)","crypto",31,31,0,1,0,0,1,6
"553","https://www.reddit.com/r/crypto/comments/q9bf6j/a_deeper_look_at_machine_learningbased/","espadrine","2021-10-16","A Deeper Look at Machine Learning-Based Cryptanalysis","","crypto",30,30,0,0.97,0,0,1,62
"554","https://www.reddit.com/r/crypto/comments/mnlzce/what_books_recommend_for_crypto_and_matemathics/","aldogutierrz","2021-04-09","What books recommend for crypto and matemathics","Hi i'm studing Económics and i have and investigation about cryptography and linear álgebra.
I'm planning to explain btc encryption, where should i start reading ?","crypto",31,31,0,0.97,0,0,0,26
"555","https://www.reddit.com/r/crypto/comments/mj4rii/is_compression_still_important_for_file_encryption/","AgreeableLandscape3","2021-04-03","Is compression still important for file encryption?","The GPG command line tool compresses files by default when encrypting, and people have claimed that it's done to mitigate statistical analysis of files with a lot of repetition. But with a reasonably modern encryption standard like AES, is this still necessary? What about encrypting a data stream like with a VPN or TLS? Is compression also required there for the best security?","crypto",27,27,0,0.89,0,0,0,46
"556","https://www.reddit.com/r/crypto/comments/mbdovo/simultaneous_compressionencryption_with_tans_eg/","jarekduda","2021-03-23","Simultaneous compression+encryption with tANS e.g. for remote sensors, Zstandard in Linux kernel?","Tabled variant of ANS ( https://en.wikipedia.org/wiki/Asymmetric_numeral_systems ), used e.g. in Facebook Zstandard ( https://en.wikipedia.org/wiki/Zstandard now e.g. in Linux kernel) has huge freedom for choosing coding tables (e.g. 2^1000 possibilities).

Also behavior of its internal state evolves in chaotic way - tiny changes quickly lead to completely different situation.

It suggests opportunity to add simultaneous encryption for data encoded this way by choosing the coding table based on cryptographic key, e.g. to:

- add nearly free encryption to Zstandard e.g. in Linux kernel,

- add cheap compression+encryption layer to remote sensors.

I would gladly discuss it, some arxiv: https://arxiv.org/pdf/1612.04662

Diagram: https://upload.wikimedia.org/wikipedia/commons/e/e9/TANSex.png","crypto",32,32,0,1,0,0,0,24
"557","https://www.reddit.com/r/crypto/comments/t3d072/announcing_openmls_v04_making_it_easier_to_use/","raphaelrobert","2022-02-28","Announcing OpenMLS v0.4, making it easier to use the library","# What is it?

OpenMLS is an open-source Rust implementation of the Messaging Layer Security protocol.

OpenMLS is a software library that can serve as a building block in applications that require end-to-end encryption of messages.  
  
It has a safe and easy to use interface that hides the complexity of the underlying cryptographic operations.

# What happened?

=¡  This OpenMLS release catches up with most of the spec changes and offers a first usable public API. It is an implementation of draft 12+. See [this blog post](https://openmls.tech/blog/2022-02-28-v0_4-release/) for more details on this release.

>€  Crate: [https://crates.io/crates/openmls](https://crates.io/crates/openmls)

=i<þ=»   Rust docs: [https://docs.rs/crate/openmls](https://docs.rs/crate/openmls)

=Ú  Manual: [https://openmls.tech/book/](https://openmls.tech/book/)

W  This release is not implementing a published RFC and is not interoperable with other MLS implementations. There will be breaking changes.

This release includes releases of the following dependencies

&amp;#x200B;

* openmls\_traits: v0.1
* openmls\_rust\_crypto: v0.1
* openmls\_evercrypt: v0.1","crypto",31,31,0,0.9,1,0,1,0
"558","https://www.reddit.com/r/crypto/comments/ntjft9/memory_efficient_inbrowser_large_file_encryption/","zshdv","2021-06-06","memory efficient in-browser large file encryption using libsodium. [hat.sh v2.0 beta]","this beta version 2.0 of hat.sh demonstrates memory efficient large file chunked encryption using streams with libsodium.js (with xchacha20poly1305 and argon2id) in the browser (client side/no server).

the main issue with the first version was that the file was being read as a whole in memory, thus the browser crashed on large files. a solution was found to get around this problem by using service workers. and files with very large sizes can be encrypted (successfully tested 25GB+). 

In addition, we ditched AES-256 with PBKDF2 for xchacha20poly1305 and argon2id.

more details : [https://v2-beta.hat.sh](https://v2-beta.hat.sh)

github repo branch : [https://github.com/sh-dv/hat.sh/tree/v2-beta](https://github.com/sh-dv/hat.sh/tree/v2-beta)

\*for now safari and mobile browsers are not supported, but i hope by next week they will be.","crypto",29,29,0,0.84,6,0,2,14
"559","https://www.reddit.com/r/crypto/comments/n8ptlt/accelerometers_as_an_entropy_source/","pgh_ski","2021-05-09","Accelerometers as an entropy source","Hi all,

I've been working on some educational demos to teach the concept of entropy to more general audiences (folks interested in digital security and digital currencies). I made a visual [diceware tool](https://i.imgur.com/omKfjOt.jpg) and am now tinkering with an accelerometer ""entropy collector"". 

The general idea for this little hands on HW demo is: poll an accelerometer as frequently as possible, log data to an SD card, and use the data to generate sample keys/passwords. Ex: put the arduino build in a case, go for a mountain bike ride to generate a bunch of noise, get a reasonably secure password(s) on the other end.

This is, very obviously, meant to be an educational project to show how different types of environmental noise can be used for random number generation. Rolling your own crypto and also logging entropy to disk is not what you'd do in a production system, lol.

I was curious what you all think about the use of accelerometer data as an entropy source in actual CSRNGs. I have seen some research papers pop up on the topic when I search, but I'm curious about some of the potential pros and cons.

My questions for exploring this topic:

* What are some pros to using accelerometers as part of an entropy source? Plenty of noise depending on activity/sensitivity?
* What are some pitfalls? Lack of motion, sample time/size, etc.?
* How would one estimate the amount of entropy, in bits, of accel output? (If it is even possible. Dice are a lot easier to figure out...)
* What might be a reasonable sample time during activity to use?  Ex: do I log a new key/password every 20 seconds by hashing the accel output, or collect as much data as possible during the logging ""session"", and hash that all for one key or password?

Thanks in advance cryptography friends.","crypto",29,29,0,0.91,1,0,0,36
"560","https://www.reddit.com/r/crypto/comments/my6w1i/using_ed25519_x25519_for_asymmetric_encryption/","kaoD","2021-04-25","Using Ed25519 + X25519 for asymmetric encryption?","I'm creating a public-key cryptosystem (just for fun, I'm not rolling my own crypto!) that allows creating identities, which are just Ed25519 + RSA-OAEP keypairs. I.e. I want an identity to be able to sign messages, and receive encrypted messages.

My public identities are large, mostly due to the RSA-OAEP public key, which I'm a bit dissatisfied with (I want identities to be shared in-person via QR codes, so short length is a plus).

This made me think... Can I repurpose Ed25519 + X25519 for the asymmetric encryption too? If Alice creates a static DH keypair and shares her public DH key (signed, as part of her identity), then Bob can compute a shared secret and use it for symmetric encryption (sending his ephemeral public DH key along with the message).

But of course this means that Alice's DH secret is static, and will be reused across many senders. Is this safe to do, or are DH keypairs supposed to always be ephemeral? (If this is sane, I probably reinvented something, does this scheme have a name?)

What are the implications of this scheme vs RSA-OAEP? A difference I see is that Bob can decrypt the cyphertext... which he himself produced, so I'm not worried about that! Any other implications I missed?

Thanks!","crypto",30,30,0,0.92,1,0,0,35
"561","https://www.reddit.com/r/crypto/comments/s1gpyq/which_encryption_scheme_should_i_use_for_working/","always_cold90","2022-01-11","Which encryption scheme should I use for working with textual data in FHE ?","I am a beginner and I have to complete a project on FHE.  I read about the schemes(CKKS and BGV) and they can be performed only on integers. I will have to perform encoding first. Please suggest some reading material for the encryption schemes and whatever additional topics I should study.","crypto",30,30,0,0.92,1,0,1,3
"562","https://www.reddit.com/r/crypto/comments/rmdyqe/questions_about_implementing_basic_e2e_encryption/","elliptic-curve-498","2021-12-22","Questions about implementing basic e2e encryption for messages","","crypto",29,29,0,0.95,1,0,0,7
"563","https://www.reddit.com/r/crypto/comments/qwnc1m/monthly_cryptography_wishlist_thread/","AutoModerator","2021-11-18","Monthly cryptography wishlist thread","This is another installment in a series of monthly recurring cryptography wishlist threads.

The purpose is to let people freely discuss what future developments they like to see in fields related to cryptography, including things like algorithms, cryptanalysis, software and hardware implementations, usable UX, protocols and more.

So start posting what you'd like to see below!","crypto",30,30,0,0.97,2,0,1,144
"564","https://www.reddit.com/r/crypto/comments/qqqvry/technical_advisory_arbitrary_signature_forgery_in/","ScottContini","2021-11-10","Technical Advisory  Arbitrary Signature Forgery in Stark Bank ECDSA Libraries","","crypto",28,28,0,0.97,1,0,0,70
"565","https://www.reddit.com/r/crypto/comments/pfxxqp/verify_your_eu_green_pass_by_hand_with_linux_tools/","kaukaukau","2021-09-01","Verify your EU Green Pass by hand (with Linux tools)","","crypto",28,28,0,0.9,0,0,1,16
"566","https://www.reddit.com/r/crypto/comments/p6az39/how_does_the_plonk_zeroknowledge_proof_system/","davidw_-","2021-08-17","How does the PLONK zero-knowledge proof system work? Part 1: What's PLONK?","","crypto",27,27,0,0.87,0,0,1,23
"567","https://www.reddit.com/r/crypto/comments/oxsunb/newbies_cryptanalysis/","romano31415","2021-08-04","Newbie's cryptanalysis?","I have a information security background but I'm new to crypto..

(I've done some basic cryptohack and cryptopals challenges)

I'd like to try real world cryptanalysis and learn by the process!!

&amp;#x200B;

Could you recommend some targets where they 'roll their own crypto' to start fiddling on?

Thanks in advance and sorry for poor english..!=-","crypto",28,28,0,0.91,0,0,1,47
"568","https://www.reddit.com/r/crypto/comments/odgkm2/the_best_encryption_software_on_pc/","bigfatpoodle","2021-07-04","The best Encryption software on PC","","crypto",28,28,0,0.64,0,0,1,13
"569","https://www.reddit.com/r/crypto/comments/o63zp1/advice_for_cybersecurity_research/","Natural_Dragonfly","2021-06-23","Advice for Cybersecurity Research?","Hi Everyone,

I am a sophomore computer science major and I will be participating in undergraduate research with a professor this Fall. I have taken cryptography and really found it interesting. He is doing research on ransomware encryption and I want to be prepared before the Fall. 

Do you all know of any papers you would recommend or any code I can look at?

I appreciate any ideas or tips you can give me!

Thank you","crypto",27,27,0,0.94,0,0,1,10
"570","https://www.reddit.com/r/crypto/comments/n3vn0z/why_is_ecdsa_not_quantum_safe_and_what_is_an/","Julian_0x7F","2021-05-03","Why is ECDSA not quantum safe and what is an alternative?","see title","crypto",27,27,0,0.87,0,0,0,24
"571","https://www.reddit.com/r/crypto/comments/mwzl2s/a_new_rapid_memory_efficient_and_spasecure/","a_oudjida","2021-04-23","A New Rapid, Memory Efficient, and SPA-Secure Algorithm for Elliptic Curve Cryptography","Elliptic curve scalar multiplication k.P, where k is a nonnegative constant and P is a point on the elliptic curve, requires two distinct operations: addition (ADD) and doubling (DBL). To reduce the number of ADDs without increasing the number of DBLs, a recoding of k with fewer nonzero digits is necessary. Based on Radix-2w arithmetic, we introduce a principled w-bit windowing method where the properties of speed, memory, and security are described by exact analytic formulas as proof of superiority. Contrary to existing windowing algorithms, to minimize the number of ADDs the window size (w) is guided by an optimum depending on the bit-length (l) of the scalar k. The number of required precomputations is minimal regarding the value of w. The proposed method recodes the binary string k and evaluates the multiplication on-the-fly from right-to-left and left-to-right, likewise. Radix-2w method is very easy to be used and highly reconfigurable, allowing speed-memory and speed-security trade-offs to satisfy different crypto-system constraints. Furthermore, the method shows a high resilience to side-channel attacks based on power, timing, and statistical analysis. All Radix-2w properties are confronted to standard windowing methods through an in-depth analysis of the complexities. An overall comparison is made via NIST-recommended GF(2l) finite fields.

[https://www.researchgate.net/publication/348976216\_Radix-2w\_Arithmetic\_for\_Scalar\_Multiplication\_in\_Elliptic\_Curve\_Cryptography](https://www.researchgate.net/publication/348976216_Radix-2w_Arithmetic_for_Scalar_Multiplication_in_Elliptic_Curve_Cryptography) ","crypto",29,29,0,0.91,1,0,0,17
"572","https://www.reddit.com/r/crypto/comments/mezfe8/why_is_sha256_useful_for_certificates_and_file/","IUndercoverTroll","2021-03-28","Why is Sha-256 useful for certificates and file verification. Couldn't hackers intercept the hash too?","So I'm making a thing that generates Sha 256 hashes and I thought it'd be cool to include a thing on how Sha 256 is used and one thing I saw mentioned was for certificates and verifying that the file got sent correctly. My issue with this is that assuming that the receiver doesn't start off with the hash couldn't they just intercept and change both the original file/certificate AND the hash as well? I've tried googling but I cannot find an answer anywhere. If you can help me that'd be appreciated.","crypto",25,25,0,0.82,0,0,0,33
"573","https://www.reddit.com/r/crypto/comments/m6u24a/lets_talk_about_borders_and_crossing_them/","cryptomann1","2021-03-17","Let's talk about borders (and crossing them)","How bad is it nowadays? I've heard some horror stories of people getting their laptops confiscated because they had FDE and refused to give out their passwords. They dump the content of your HDD for further investigation.

Let us ask:

How can one get around this?

In which countries does this happen,

Which type of borders (only airports, or vehicles too?)

Which type of device triggers this? (a laptop with FDE, or desktop cases, or even disconnected HDDs with FDEs too? usb pendrives with FDE? hardware wallets?)

Even if your device isn't FDE'd, they look for encrypted containers?

I think ditching FDE alltogether may be a good start. It just doesn't work isn't it. That's the most obvious way to get in trouble. One would be better off having separate containers hidden somewhere in some compressed file and access them with some live Linux DVD on the ram, unless they are insane enough to also scan the contents of the drives. It would be relatively small containers anyway, with some tax files, wallets, confidential info and so on.

Anyway lets plan this out and think ahead.","crypto",28,28,0,0.92,0,0,0,61
"574","https://www.reddit.com/r/crypto/comments/t4wkyl/fheorg_meetup_on_snarks/","randhindi","2022-03-02","FHE.org meetup on SNARKs","Hi crypto community!

The next [FHE.org](https://FHE.org) meetup is announced: [https://www.meetup.com/fhe-org/events/284249349/](https://www.meetup.com/fhe-org/events/284249349/)

Anca Nitulescu from Protocol Labs will be talking about verifiable computing and SNARKs. 

See you there!

Rand","crypto",26,26,0,0.9,0,0,1,2
"575","https://www.reddit.com/r/crypto/comments/s0hh20/weekly_cryptography_community_and_meta_thread/","AutoModerator","2022-01-10","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",27,27,0,0.97,0,0,1,0
"576","https://www.reddit.com/r/crypto/comments/rkkruj/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-12-20","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",26,26,0,0.89,0,0,1,5
"577","https://www.reddit.com/r/crypto/comments/qju79o/learn_verification_of_cryptographic_protocols/","Zulres","2021-10-31","Learn Verification of Cryptographic Protocols","Hi,

In the last few years, I have been interested in cryptography. I took courses at the university on the subject, as well as MOOCs (Coursera Cyprtography I) or reading books. This allowed me to learn about cryptographic primitives and building blocks but not so much about protocols such as TLS or Signal protocol. There is sometimes a brief description with a general overview of how the protocol works and its security properties but nothing on how we can reason and proves these properties. After some research, I found this article https://galois.com/blog/2021/05/who-is-verifying-their-cryptographic-protocols/ or this one https://bblanche.gitlabpages.inria.fr/publications/BlanchetETAPS12.pdf and it seems that proving properties of protocols uses techniques similar to verification of software with software prover.
I would like to know if any of you have good resources (courses, books,&) to recommend for learning about these topics. Thank you.","crypto",27,27,0,0.97,0,0,1,72
"578","https://www.reddit.com/r/crypto/comments/qhqut1/encrypting_data_between_raspberry_pi_4s_using/","entlan104","2021-10-28","Encrypting Data Between Raspberry Pi 4s Using PyCryptodome","Hi all, I'm a crypto noob who would greatly appreciate some advice on a home project of mine.

I have two Raspberry Pi 4s (64-bit CPU), running Raspberry Pi OS (32-bit OS), communicating over TCP sockets, and I would like to secure this communication.

Right now, I secure my communications using PyCryptodome by encrypting my messages with AES-EAX-256 and a dedicated signing key, and then MAC the ciphertext w/ HMAC-SHA256.

As I've done some more reading, however, I believe I've come to understand that EAX is an AE mode, meaning it already handles MACing my traffic. Furthermore, I've seen recommendations of GCM over EAX, or even pivoting entirely entirely away from AES to ChaCha20 w/ Poly1305, especially given how the CPU on the Raspberry Pi 4 does not support AES-NI.

My priority is safety over speed, but can only afford so much latency in my communications before the system becomes virtually non-functional (i.e. I can spare approx. 0.2 seconds of encryption maximum on each ~250 byte message).

Given all this, what would you guys recommend? Please let me know if you have any questions or if anything I said needs clarification (like I said, I'm a noob). Many thanks!

Edit: I should've mentioned that all units in my system exist on the same local network with static IPs and use shared secrets. My primary concerns are blocking communications from unauthorized entities, preventing message replay, and preventing message alteration (though ideally messages should not be readable, either). It is also worth noting that only one unit in my system has internet access, which it uses to communicate with a remote system, with whom traffic is protected by TLS.

Edit2: Thanks everyone for all the help! Based on a few people's recommendations, I've transfered to using PyNaCl instead of PyCryptodome, and will be using the cryptobox PKE schema (Curve25519). I've also added a message ID system with a sliding window, so old/reused messages shouldn't necessarily be processed. All this being said, I do plan on transitioning just to wrapped my sockets in TLS, but I'm still figuring out the exact configuration I like. Thanks again for all the recommendations!","crypto",27,27,0,0.92,0,0,1,174
"579","https://www.reddit.com/r/crypto/comments/q1k13j/napa_a_simple_command_line_password_manager_based/","jwalgarber","2021-10-05","Napa, a simple command line password manager based on libsodium","[Napa](https://codeberg.org/jwgarber/napa) is a simple command line password manager written in Rust and based on libsodium. Napa grew out of my frustration with maintaining a GPG key to use [pass](https://www.passwordstore.org/), and some unfortunate security problems associated with using GPG (such as no authenticated encryption). Napa isn't ready for regular use yet, but the design and database format have mostly stabilized. Notable features include:

- Zero configuration, no need to maintain a separate key
- Modern cryptography with AEAD (Argon2id and XChaCha20-Poly1305)
- Does not allow arbitrary system programs to access the passwords
- Secure in the [IND-CDBA and MAL-CDBA](https://www.cs.ox.ac.uk/files/6487/pwvault.pdf) models

The [database document](https://codeberg.org/jwgarber/napa/src/branch/main/database.md) goes into more detail about the security design, and the [issues](https://codeberg.org/jwgarber/napa/issues) page has plans for future work. Any feedback or review is welcome.","crypto",28,28,0,0.9,1,0,1,59
"580","https://www.reddit.com/r/crypto/comments/pnxqgo/how_does_devurandom_work/","anonXMR","2021-09-14","How does /dev/urandom work?","I understand the entropy pool seeds the device and effectively there is an encryption function like ChaCha uses this seed as a key, but what is it encrypting with that key to make the pseudorandom numbers?","crypto",26,26,0,0.95,0,0,1,58
"581","https://www.reddit.com/r/crypto/comments/ol8ua3/building_a_curve25519_hardware_accelerator/","knotdjb","2021-07-16","Building a Curve25519 Hardware Accelerator","","crypto",25,25,0,0.95,0,0,0,18
"582","https://www.reddit.com/r/crypto/comments/nl0qo0/gps_authentication/","emasculine","2021-05-25","GPS authentication?","I was reading in the Economist that Iran is using GPS spoofing to screw with traffic in the Straights of Hormuz. Obviously actual GPS is very 80's technology, but I'm fairly certain that there are several new efforts for location. Does anybody know whether they include crypto based authentication? It seems like it would be a really simple addition, though I not sure what the protocol is between the satellites and the GPS receivers.","crypto",27,27,0,0.87,0,0,0,33
"583","https://www.reddit.com/r/crypto/comments/n551l0/is_fernet_still_a_good_choice/","hangonreddit","2021-05-05","Is Fernet Still a Good Choice?","Whats everyones opinion on choosing Fernet as an encryption recipe? It is pretty straight forward and most implementations are dead simple to use. Weve pretty much standardized on it at my company and weve had really good experience with it. My only concern is AES-128 in CBC mode in its construction. Can we be reasonably confident of the security of AES-128 for the next decade and preferably the subsequent decades?

Or should I bite the bullet and push for AES-GCM with 256 bits key?

Thanks in advance.","crypto",27,27,0,0.88,0,0,0,19
"584","https://www.reddit.com/r/crypto/comments/myqpoe/final_year_project_undergrad/","Rajuisawesome","2021-04-26","Final Year Project - Undergrad","I am a Computer Science student with strong interest in security. I have been allocated ""Cryptography"" as my Final Year Project. I am free to do whatever I want and am leaning towards implementation side of cryptography rather than theoretical (more because of my complete lack of prior knowledge of cryptography as well as for a more practical experience).

I really like math but haven't really taken any university math course. The math modules in my curriculum were sparse and quite easy.

I have strong interest in Cyber Security and have done two internships both in Penetration Testing and Incident Response. The cryptography knowledge I have is just the bare basics which needed for the above roles.

I am a bit lost as to how I should decide on what topic I should do. Should it be just trying to implement an already existing system? Is it too simple for a FYP? I am excited to learn and dedicate a good chunk of my time on this.


Thank you very much for you help!","crypto",25,25,0,0.92,0,0,0,30
"585","https://www.reddit.com/r/crypto/comments/mvbl18/university_project_create_your_own_hashing/","Lukeorriss","2021-04-21","University Project ""Create your own hashing algorithm"" -- Help me.","Hello everyone, 

So as a recent university project, we've been tasked to create a website with a login/ registration function (linked to a database). Easy enough, right. So the website and backened is done... But for the hashing, we're not allowed (we'll lose marks) for using a precompiled library for encryption. Which is annoying, as you can imagine. We have to use python for a start.. So I was just wondering if anyone out there has any ideas on how I would get started on this. So far i've got a script that creates a key, salt and pepper. I'm just not sure how i would use them... Any help would be amazing! Also, if this in the wrong place, admins feel free to remove it :)","crypto",27,27,0,0.87,0,0,0,61
"586","https://www.reddit.com/r/crypto/comments/mnf7r7/is_cryptography_engineering_design_principles_and/","[deleted]","2021-04-09","Is Cryptography Engineering: Design Principles and Practical Applications an updated version of the book Practical Cryptography (by Niels Ferguson, etc)","Both books are from the same group of authors,

I'm actually trying to learn but realized the Practical Cryptography, although very recommended, was from 2003.

I found the book Cryptography Engineering: Design Principles and Practical Applications (2010) and was wondering if it covers identical topics.

&amp;#x200B;

Regards","crypto",26,26,0,0.95,0,0,0,9
"587","https://www.reddit.com/r/crypto/comments/mlmp6n/certificates_confuse_everything_if_you_think_you/","emasculine","2021-04-06","Certificates Confuse Everything -- if you think you need a X.509 certificate, you almost certainly don't","","crypto",27,27,0,0.82,0,0,0,34
"588","https://www.reddit.com/r/crypto/comments/m0gc2z/understanding_the_impact_of_partitioning_oracle/","john_alan","2021-03-08","Understanding the impact of partitioning oracle attacks on production deployments of ChaCha/Salsa","Yesterday I came across some [conversation](https://www.reddit.com/r/crypto/comments/lz0128/kryptor_a_simple_modern_and_secure_encryption_tool/gpzcujx/) discussing [partitioning oracle](https://eprint.iacr.org/2020/1491.pdf) attacks, against authenticated stream ciphers like ChaCha20 and Salsa20 with poly1305 for MAC.

As I understand it (though the paper is a little dense), the exploit requires:

* an interactive client/server where messages are encrypted under keys derived from passwords.

* the encryption is ""non-committing"".

* the server responds indicating if decryption was a success.



**Though this discussion raised a number of concerns for me,**


1) This multiple key thing seems crazy, I always understood symmetric ciphers like ChaCha20-256 required searching a 2^256 bit key space for a single correct key. I read that you can actually calculate using linear equations approx 200,000 valid keys for decryption. Is this really true, if so **we shouldn't consider the bit-strength 2^256** even for ECDH agreed keys should we?

2) In an example local application where one uses say, libsodium's secret box (Xsalsa20+Poly1305) and Argon2 to derive a password and encrypt some file, if this file is stored on a system with no other API or info, is this vulnerable to this attack? (e.g. by calling libsodium and watching if the MAC primitive is successfully verified) or are ""offline/stored"" files like this safe? i.e. like a padding oracle attack, does this whole thing require that the server **knows the correct key**, and as such can give away information?


3) Is this only an issue with password based keys? Doesn't this attack also mean one **can reduce the key space for ECDHE agreed keys** to *2^256/200k*?

Thanks","crypto",25,25,0,0.92,0,0,0,43
"589","https://www.reddit.com/r/crypto/comments/s36odm/why_is_the_chacha20_reseed_interval_in_the_linux/","atoponce","2022-01-13","Why is the ChaCha20 reseed interval in the Linux CSPRNG every 5 minutes?","","crypto",27,27,0,0.93,0,0,0,22
"590","https://www.reddit.com/r/crypto/comments/racrah/aumassons_spc_a_tweakable_block_cipher/","rgneainrnevo","2021-12-06","Aumasson's spc: A tweakable block cipher","","crypto",27,27,0,0.89,0,0,1,3
"591","https://www.reddit.com/r/crypto/comments/pzs7sg/how_good_are_rngs_in_smart_cards/","chaplin2","2021-10-02","How good are RNGs in smart cards?","A secret key can be generated in a (air-gapped) desktop computer and then transferred to a hardware key such as a Yubikey (providing possibility to back up the secret key) or be generated inside the hardware key (with no possibility for a backup).

The hardware keys are often closed source and I dont know much about their RNGs and software. There could be determinism built into the source at some level (government backdoor) or flaws in OpenPGP closed source implementation. 

How good are RNGs inside smart cards such as Yubikeys?

For maximum security, is a secret key better be created inside or outside a smart card?","crypto",24,24,0,0.87,1,0,1,81
"592","https://www.reddit.com/r/crypto/comments/o3lp3n/verkle_trees/","Zamicol","2021-06-19","Verkle trees","","crypto",28,28,0,0.97,0,0,1,1
"593","https://www.reddit.com/r/crypto/comments/nas9a3/code_signing_baseline_requirements_to_require/","etherealshatter","2021-05-12","Code signing baseline requirements to require larger keys - 3072-bit RSA becomes the new standard","","crypto",24,24,0,0.87,0,0,0,20
"594","https://www.reddit.com/r/crypto/comments/n21qja/aes_encryption_question/","Bonelessbonles","2021-04-30","AES encryption question","If I have 2 files, an encrypted, and decrypted file, is it possible to find the decryption key by comparing them?","crypto",27,27,0,0.89,0,0,0,12
"595","https://www.reddit.com/r/crypto/comments/mvozkj/calculus_in_cryptography/","AMS0220","2021-04-21","Calculus in Cryptography","Hello, I am a first year Cyber Security major. My question is how much is calculus needed in cryptography. Because of Covid I am taking courses online but I cant focus with them luckily most are general courses but that includes calculus. So, I wonder how important it is should I go back and review and what concepts of calculus are used so I can review them. Thank You","crypto",27,27,0,0.94,0,0,0,25
"596","https://www.reddit.com/r/crypto/comments/m7d4l5/the_sumcheck_protocol_backbone_of_modern_day/","fremra","2021-03-17","The Sumcheck Protocol: Backbone of Modern Day zkSNARKs","The Sumcheck Protocol is a powerful interactive proof that essentially allows for the efficient (logarithmic) verification of the sum of a polynomial function over the boolean hypercube. 

Although its use might seem limited at first, this protocol has brilliant applications in both theory and practice. This work has been instrumental in the proofs of IP=PSPACE and MIP=NEXP.  Also, sumcheck plays an integral part in the development of doubly-efficient interactive proofs (GKR Protocol), which when combined with cryptographic commitments result in state-of-the-art zkSNARKs.

Read more about its ""unreasonable power"" here: [https://zkproof.org/2020/03/16/sum-checkprotocol/](https://zkproof.org/2020/03/16/sum-checkprotocol/)

Original 1992 paper here: [https://lance.fortnow.com/papers/files/ip.pdf](https://lance.fortnow.com/papers/files/ip.pdf)","crypto",24,24,0,0.95,0,0,0,13
"597","https://www.reddit.com/r/crypto/comments/svf9s7/monthly_cryptography_wishlist_thread/","AutoModerator","2022-02-18","Monthly cryptography wishlist thread","This is another installment in a series of monthly recurring cryptography wishlist threads.

The purpose is to let people freely discuss what future developments they like to see in fields related to cryptography, including things like algorithms, cryptanalysis, software and hardware implementations, usable UX, protocols and more.

So start posting what you'd like to see below!","crypto",25,25,0,0.96,1,0,0,3
"598","https://www.reddit.com/r/crypto/comments/sjr7yf/what_file_encryption_software_do_you_guys/","MiniBus93","2022-02-03","What file encryption software do you guys recommend?(beside VeraCrypt &amp; Cryptomator)","Hello,

I'm a beginner and I don't understand absolutely nothing about encryption. 

**I just want to secure my files. I don't want to encrypt my whole drive, I just want to encrypt some files/folders**

I've used VeraCrypt but it takes to much effort honestly and it's not really practical, it also feels overkill for my needs. Please don't get me wrong, VC is awesome and the devs deserve all the love they can get!

About Cryptomator, I've tried it, but on some PCs it gave me some errors, I don't want to deal with it. I'm sure it's awesome software, but I'd like to use something else.

So, what do you guys suggest me **beside these two programs**?

If you have question to better understand my needs feel free to ask and I'll provide everything that's needed","crypto",25,25,0,0.83,0,0,1,29
"599","https://www.reddit.com/r/crypto/comments/rm2pmi/does_any_one_person_have_access_to_a_certificate/","XiPingTing","2021-12-22","Does any one person have access to a certificate authority private key?","If you have certificate authority private keys you can masquerade around as just about anyone on the internet. Does anyone have this power? Clearly there are tricks like concatenating partial keys, but somewhere there's a computer someone has access to that needs a complete certificate authority private key to compute a signature. How is the problem avoided?","crypto",26,26,0,0.87,0,0,1,15
"600","https://www.reddit.com/r/crypto/comments/r3gzad/is_it_okay_for_a_nonce_to_be_publicly_visible_to/","Jstodd_","2021-11-27","Is it okay for a nonce to be publicly visible to potential attackers?","From what i understand nonces feed into a cryptographic algorithm to enforce different output results. 

But is there any attacks someone can do having this information? Say the nonce is a part of an encrypted message but its added after the encryption and is not itself encrypted.","crypto",26,26,0,0.96,0,0,1,5
"601","https://www.reddit.com/r/crypto/comments/qshkj9/rwc_accepted_talks_are_on/","notouchpa","2021-11-12","RWC accepted talks are on","So, Real-world crypto launched the accepted talks for 2022. You can check in:   
[https://rwc.iacr.org/2022/acceptedpapers.php](https://rwc.iacr.org/2022/acceptedpapers.php)","crypto",25,25,0,0.96,0,0,1,70
"602","https://www.reddit.com/r/crypto/comments/qpb8u3/weekly_cryptography_community_and_meta_thread/","AutoModerator","2021-11-08","Weekly cryptography community and meta thread","Welcome to /r/crypto's weekly community thread!

This thread is a place where people can freely discuss broader topics (but NO cryptocurrency spam, see the sidebar), perhaps even share some memes (but please keep the worst offenses contained to /r/shittycrypto), engage with the community, discuss meta topics regarding the subreddit itself (such as discussing the customs and subreddit rules, etc), etc.

Keep in mind that the standard reddiquette rules still apply, i.e. be friendly and constructive!

So, what's on your mind? Comment below!","crypto",26,26,0,0.96,0,0,1,96
"603","https://www.reddit.com/r/crypto/comments/q0uh22/paper_and_demo_implementation_of_paradoxical/","binaryfor","2021-10-04","Paper and Demo Implementation of Paradoxical Compression with VDF","","crypto",25,25,0,0.95,0,0,1,50
"604","https://www.reddit.com/r/crypto/comments/opyclw/status_report_on_the_second_round_of_the_nist/","espadrine","2021-07-23","Status Report on the Second Round of the NIST Lightweight Cryptography Standardization Process","","crypto",24,24,0,0.9,0,0,1,17
"605","https://www.reddit.com/r/crypto/comments/nnojjg/branch_of_cryptography_focused_on_secure/","OPSIA_0965","2021-05-29","Branch of cryptography focused on secure computing in untrusted environments?","I swear I remember reading multiple papers a while back exploring the concept of how you might, with the right software compiled to run in a particular cryptographically enhanced fashion, securely (or at least more securely, since of course there were caveats, threat models, etc.) compute in a fundamentally untrusted environment (including perhaps bugged/compromised hardware (which almost all commercial hardware is), a hostile OS, rootkit, etc.). (I know that sounds ridiculous and contrary to basic security principles, but obviously there was cryptomagic involved; I think it was based on the idea of cryptographically obfuscating the internal state of the program so much that even if the surrounding environment were hostile, it would still have a hard time deriving anything useful from the program, though it seems to me like this would require at least your display to be secure lest the entire UX simply be extracted directly.)

I cannot remember for the life of me what this proposed technology might have been called though. Anybody know what I'm talking about? (Keep in mind this about an untrusted *local* environment, not an untrusted *remote* environment (so secure multiparty computation/remote secure enclaves etc. are of course related but not what I'm talking about).)

Edit: Thank you for the responses.","crypto",24,24,0,0.92,0,0,0,19
"606","https://www.reddit.com/r/crypto/comments/sk2y7u/the_earn_it_act_is_back_from_the_dead_after_two/","gnulynnux","2022-02-04","The EARN IT act is back from the dead after two years.","Quick rundown:

https://en.wikipedia.org/wiki/EARN_IT_Act

Lindsey Graham and Richard Blumenthal are [back at it again](https://twitter.com/SenBlumenthal/status/1488288930436947979) to attack end-to-end encryption under the guise of preventing child abuse. EFF has an article here: https://act.eff.org/action/stop-the-earn-it-act-to-save-our-privacy","crypto",234,234,0,0.98,1,0,2,5
"607","https://www.reddit.com/r/crypto/comments/s9ws3f/the_uk_paid_724000_for_a_creepy_campaign_to/","knotdjb","2022-01-22","The U.K. Paid $724,000 For A Creepy Campaign To Convince People That Encryption is Bad. It Wont Work.","","crypto",207,207,0,0.97,0,0,2,3
"608","https://www.reddit.com/r/crypto/comments/orjy46/temporary_change_to_address_horrendous_levels_of/","Natanael_L","2021-07-25","Temporary change to address horrendous levels of spam","##Edit: Due to a recent even more extreme increase in spam volume, you can ONLY post or comment if you're an approved user. 

You can request to be approved via the reddit website when you click the submit button in our subreddit. 

You MUST provide a reason for why you want to join, since we also get spam bots sending such requests, and we can't tell you apart from them unless you write something in the request. 

We can also suggest /r/cryptography, as they are currently open (as they do not face the same volume of spam as we do). 

Due to reddit's incredibly meager moderation tools, this may have to stay this way until reddit finally improves the tools for dealing with bots. 

---

Due to a recent extreme spike in spam volume, this subreddit is becoming nearly impossible to moderate properly, as it is becoming hard to find the legitimate submissions and comments in the middle of the spam.

Due to this I am temporarily making a change which will only allow users approved in advance by us mods to contribute.

New and intermittent users who needs to get such an approval to be able to post can send a mod mail to us by sending a PM addressed at /r/crypto, and once you get confirmation you will be able to make your submissions.

To get approved, AT LEAST ONE criteria below MUST be met by you / your account. You should;

* provide a reason for why you want to be approved in our subreddit, to be sent to us when you make the request. For example, if you want to post a question then share a summary of it. 
* have recent ORIGINAL high quality contributions (posts or comments), showing your account is likely genuine (distinguishing it from a spam farm account) 
* have a long lived account with good reputation (no requirement of frequent activity, just showing you will follow the rules) 
* have a history of high quality contributions (again, showing you understand and will follow the rules) in this subreddit or in related subreddits / communities 

If you make a request from an account with a post history which is empty or which doesn't look original, and you also don't provide a reason for why you want to join, then we might reject your request. We moderators reserve the right to approve our deny requests as we see fit.

We want to keep this subreddit open for beginners as well, as it has been up until now, so if you have a valid on-topic question or other content then don't hesitate to make the request and to inform us of why. 

Note: ~~If you are already subscribed, or~~ if you previously have received a personal message via this subreddit about being a trusted contributor, then you do not need to request approval to be able to comment. 

~~Posting does seem to require separate rights, your account has to be set as a trusted contributor by us mods.~~ Note: if the button for making posts is visible as normal to you on the website, with no restrictions visible if you click it, then it means you already have posting rights.","crypto",204,204,0,0.96,12,0,0,582
"609","https://www.reddit.com/r/crypto/comments/su6dop/des_cracker_in_eff_lobby/","crwbot","2022-02-16","DES Cracker in EFF Lobby","","crypto",191,191,0,0.99,1,0,0,9
"610","https://www.reddit.com/r/crypto/comments/o39oxo/i_put_together_a_list_of_8_cryptography_courses/","colxwhale123","2021-06-19","I put together a list of 8 cryptography courses you can take!","https://collegecompendium.goldin.io/search?q=crypto

Ive spent the last week compiling around ~675 publicly available CS courses from around 20ish colleges. Of those, there are 8 crypto courses, which span from introductory to pretty advanced!

Hopefully you can get some use out of it. :)","crypto",148,148,0,0.97,2,0,3,32
"611","https://www.reddit.com/r/crypto/comments/mhpllg/this_subreddit_is_now_an_nsa_fanclub/","Natanael_L","2021-04-01","This subreddit is now an NSA fanclub","Hi, [redacted]! 

This subreddit is now an NSA fanclub to celebrate the Heroics, Elegance, Logic, Planning and [redacted] of NSA, completely voluntary from us moderators' side. Please give NSA your greetings, everyone, we don't want to accidentally [redacted]!","crypto",145,145,0,0.91,0,0,0,47
"612","https://www.reddit.com/r/crypto/comments/qyz8j7/cryptographers_are_not_happy_with_how_youre_using/","Natanael_L","2021-11-21","Cryptographers are not happy with how youre using the word crypto - The Guardian","","crypto",134,134,0,0.96,1,0,1,119
"613","https://www.reddit.com/r/crypto/comments/r5kztz/fbi_document_says_the_feds_can_get_your_whatsapp/","Natanael_L","2021-11-30","FBI Document Says the Feds Can Get Your WhatsApp Data -- in Real Time - Rolling Stone","","crypto",128,128,0,0.97,0,0,1,11
"614","https://www.reddit.com/r/crypto/comments/t47gqj/linux_518_will_likely_have_a_blocking_devurandom/","atoponce","2022-03-01","Linux 5.18 will likely have a blocking /dev/urandom such that calls to the RNG will *always* return secure bytes after initial seeding, which takes no more than 1s after boot. After decades of confusion, all random interfaces will finally be identical.","","crypto",126,126,0,1,0,0,0,16
"615","https://www.reddit.com/r/crypto/comments/ptjmq2/realworld_cryptography_the_book_is_done_and/","davidw_-","2021-09-23","Real-World Cryptography, the book, is done and shipping!","Hey folks! My book Real-World Cryptography was just released last week and is now shipping. I've been working on this thing for the last two years and a half, and the goal was to give a good overview of everything that can be classified as ""real-world"" about crypto. You'll find all the basics in the first half of the book, and the second half contains chapters on TLS, noise, PAKEs, post-quantum cryptography, zero-knowledge proofs, MPC, cryptocurrencies, FHE, etc. So it's a good pick if you're learning, but also if you've been in the field for a while and want an intro to some subfield you're interested in. It's not a reference book, and is written in a light style. Also has some art and lots of diagrams. Talks about good practices and how you should use Libsodium and Tink. Things like that :) Anyway, [here's the link](https://www.manning.com/books/real-world-cryptography?a_aid=Realworldcrypto&amp;a_bid=ad500e09)","crypto",123,123,0,0.98,0,0,1,80
"616","https://www.reddit.com/r/crypto/comments/sqpm1o/feds_seized_billions_by_grabbing_private_keys/","chaplin2","2022-02-12","Feds seized billions by grabbing private keys from online storage","Feds were able to hack crypto wallets by grabbing private keys that alleged criminals held in their online cloud account in 2016:

https://www.nytimes.com/2022/02/08/us/politics/ilya-lichtenstein-heather-morgan-bitcoin-laundering.html

Its unclear how Feds  hacked the wallet (governments usually keep this information secret for decades). In the above link, its stated:

&gt;&gt; Law enforcement officials gained access to Mr. Lichtensteins wallet on Jan. 31, after they obtained a search warrant that gave them entry to **encrypted files**  in Mr. Lichtensteins cloud storage account.


I also found the following link, but there is not whole lot of information in it

https://medium.com/harpie-io/how-the-feds-executed-the-largest-financial-seizure-in-history-for-3-6-billion-in-btc-6533dc00244


As pointed out by another user, here its stated:

&gt;&gt; Personal security gets lazy at scale, which is remarkably apparent in this Bitfinex hack seizure: the hackers had 2,000 private keys to handle, and instead of handling them in a secure way, they stored an **unencrypted notepad file** in their cloud drive.


Does anyone have more information about a potential attack on encryption?


**Update** As posted by a user below, further information appears in Section III page 17 of this document:

https://www.justice.gov/opa/press-release/file/1470211/download

Apparently, most files were encrypted and law enforcement somehow decrypted some of the encrypted files.","crypto",114,114,0,0.88,0,0,1,14
"617","https://www.reddit.com/r/crypto/comments/mcarmq/recovering_a_full_pem_private_key_when_half_of_it/","l_tennant","2021-03-24","Recovering a full PEM Private Key when half of it is redacted","","crypto",109,109,0,0.99,1,1,0,12
"618","https://www.reddit.com/r/crypto/comments/nb5mi7/blessed_are_the_cryptographers_labelling_them/","throwaway27727394927","2021-05-13","Blessed are the cryptographers, labelling them criminal enablers is just foolish","","crypto",109,109,0,0.94,1,0,0,34
"619","https://www.reddit.com/r/crypto/comments/synnq2/linuxs_getrandom_sees_a_8450_improvement_with/","atoponce","2022-02-22","Linux's getrandom() Sees A 8450% Improvement With Latest Code","","crypto",102,102,0,0.99,0,0,0,3
"620","https://www.reddit.com/r/crypto/comments/smtp44/sha256_explained_stepbystep_visually/","D4r1","2022-02-07","SHA-256 explained step-by-step visually","","crypto",104,104,0,0.97,0,0,0,4
"621","https://www.reddit.com/r/crypto/comments/pop3ay/if_you_copied_any_of_these_popular_stackoverflow/","ScottContini","2021-09-15","If you copied any of these popular StackOverflow encryption code snippets, then you coded it wrong","","crypto",91,91,0,0.98,1,0,1,62
"622","https://www.reddit.com/r/crypto/comments/rnooh5/linux_rng_switches_from_sha1_to_blake2s/","espadrine","2021-12-24","Linux RNG switches from SHA1 to BLAKE2s","","crypto",84,84,0,0.99,0,0,3,9
"623","https://www.reddit.com/r/crypto/comments/n95851/crypto_book_that_covers_latest_modern_crypto/","Maleficent_Daikon_18","2021-05-10","Crypto book that covers latest modern crypto?","I am looking for a book that covers latest modern crypto, like ZRTP, OTR, Signal protocol, double rachet algorithms etc? If I am not mistaken, these have been developed in the past 10 years.  


Do you know any book that cover those? I am a beginner so if it's a book that explains for beginners (and not a math book) that would be even better.","crypto",85,85,0,0.95,2,0,0,48
"624","https://www.reddit.com/r/crypto/comments/o5r3x4/debian_is_ditching_openpgp_for_signing_apt/","atoponce","2021-06-22","Debian is ditching OpenPGP for signing APT repositories. Replacing it with aptsign based on Ed25519 with SHA-512.","","crypto",84,84,0,0.93,0,0,1,29
"625","https://www.reddit.com/r/crypto/comments/rll4sv/disclosing_shamirs_secret_sharing_vulnerabilities/","riversec","2021-12-21","Disclosing Shamirs Secret Sharing vulnerabilities and announcing ZKDocs","","crypto",82,82,0,0.99,0,0,1,2
"626","https://www.reddit.com/r/crypto/comments/o1tdi2/free_15_hour_network_security_course/","forgottenlance","2021-06-17","Free 15+ hour Network Security course","As the semester ends, I gathered my 15+ hour Network Security course into a Youtube playlist. Hope you like it :)

[https://www.youtube.com/watch?v=8NZFJVpQlYI&amp;list=PLUoixF7agmIvRc50lNFytIiqFtCFnOMYU](https://www.youtube.com/watch?v=8NZFJVpQlYI&amp;list=PLUoixF7agmIvRc50lNFytIiqFtCFnOMYU)","crypto",79,79,0,0.98,0,0,1,12
"627","https://www.reddit.com/r/crypto/comments/mbx3tr/tls_10_11_officially_deprecated/","ScottContini","2021-03-24","TLS 1.0, 1.1 officially deprecated","","crypto",77,77,0,0.99,0,0,0,15
"628","https://www.reddit.com/r/crypto/comments/ry5z86/signals_push_into_untraceable_payments_could_put/","kovariantenkaktus","2022-01-07","Signal's push into untraceable payments could put end-to-end encryption at risk","","crypto",75,75,0,0.89,0,0,0,11
"629","https://www.reddit.com/r/crypto/comments/qbdue7/remember_crown_sterling_with_their_time_ai/","atoponce","2021-10-19","Remember Crown Sterling with their ""TIME AI' cryptography nonsense at Blackhat? They now have a white paper (PDF).","","crypto",73,73,0,0.96,2,0,2,127
"630","https://www.reddit.com/r/crypto/comments/mk33z7/a_history_of_how_cryptography_and_cryptanalysis/","harrysonofbob","2021-04-04","A history of how cryptography and cryptanalysis developed over time! Secret Codes: A History of Cryptography (Part 1)","","crypto",72,72,0,0.97,0,0,1,4
"631","https://www.reddit.com/r/crypto/comments/q58ln3/study_found_that_developers_still_have_a_distinct/","Coherent_Paradox","2021-10-10","Study found that developers (still) have a distinct lack of knowledge in understanding the fundamental concepts of cryptography - call for dedicated studies to investigate the usability of crypto APIs","","crypto",71,71,0,0.97,0,0,1,133
"632","https://www.reddit.com/r/crypto/comments/s38bfb/elliptic_curves_a_not_so_brief_introduction/","WizardOfMenlo","2022-01-13","Elliptic Curves: a (not so) brief introduction","Hi everyone! I have recently finished compiling this talk, and thought it might be of interest.

I  tried to introduce some of the theory behind elliptic curves, starting  from the group law and building the theory in order to describe Diffie  Hellman, BLS signatures and, briefly, SIDH.

Hope you will enjoy!

[Link to the talk](https://youtu.be/HsqfumdYrUA)","crypto",70,70,0,1,2,0,0,10
"633","https://www.reddit.com/r/crypto/comments/qn6vmp/threema_three_strikes_youre_out/","Soatok","2021-11-05","Threema: Three Strikes, Youre Out","","crypto",68,68,0,0.89,5,2,2,151
"634","https://www.reddit.com/r/crypto/comments/spkc48/crypto_how_to_crack_rsa512_on_offtheshelf/","ScottContini","2022-02-10","[Crypto] How to crack RSA-512 on off-the-shelf hardware in 4 days","","crypto",68,68,0,0.99,2,0,0,5
"635","https://www.reddit.com/r/crypto/comments/rxjum6/realworld_cryptography_by_david_wong_2021_book/","hyperreality_monero","2022-01-06","Real-World Cryptography by David Wong (2021) Book Review","","crypto",63,63,0,0.96,0,0,1,9
"636","https://www.reddit.com/r/crypto/comments/onyjmw/cryptanalysis_of_meow_hash/","Soatok","2021-07-20","Cryptanalysis of Meow Hash","","crypto",63,63,0,0.97,0,0,1,40
"637","https://www.reddit.com/r/crypto/comments/mcnkjw/the_solution_of_the_zodiac_killers_340character/","ScottContini","2021-03-25","The Solution of the Zodiac Killers 340-Character Cipher","","crypto",64,64,0,0.97,0,0,0,13
"638","https://www.reddit.com/r/crypto/comments/sp41yu/using_rsa_securely_in_2022/","Soatok","2022-02-10","Using RSA Securely in 2022","","crypto",64,64,0,0.92,0,0,1,11
"639","https://www.reddit.com/r/crypto/comments/n311q6/can_you_learn_cryptography_even_if_you_aint_a_big/","Colossalloser","2021-05-02","Can you learn cryptography even if you aint a big fan of maths?","I dont really like math but I find cryptography quite intriguing and Id love to learn it. But I just dont know how or even where to even begin?","crypto",64,64,0,0.91,0,0,0,38
"640","https://www.reddit.com/r/crypto/comments/px4oc8/the_bisymmetric_encryption_fraud/","Soatok","2021-09-28","The ""Bi-Symmetric Encryption"" Fraud","","crypto",58,58,0,0.88,0,0,1,70
"641","https://www.reddit.com/r/crypto/comments/m9w2ea/password_storage_owasp_cheat_sheet_series/","Natanael_L","2021-03-21","Password Storage - OWASP Cheat Sheet Series","","crypto",59,59,0,1,0,0,0,40
"642","https://www.reddit.com/r/crypto/comments/shkh79/course_of_college_for_crypto/","Noxta_","2022-02-01","Course of college for crypto?","Im a high school senior whos looking to go into cryptography as a career choice due to my love for math and computers. I have a ton of questions about cryptography and what path to take, but here are some general questions thatll help me start on my own path: Is a double major in math and computer science good for cryptography? Im taking linear algebra currently at a local college, but have almost no experience with computer science aside from basic Java and python knowledge. Im concerned that a double major may take too much time, especially if I do marching band at my college. I could possibly do a major in math and a minor in computer science, but Im not sure how big of a difference that would make. Besides that, is there any general advice you all would give to someone trying to go into the cryptography field? From what Ive been able to gather its very competitive and may require a masters degree, but its hard to find actual experienced cryptographers to talk to. ","crypto",57,57,0,0.85,0,0,1,12
"643","https://www.reddit.com/r/crypto/comments/s758k8/what_happened_to_the_eff_des_cracker/","[deleted]","2022-01-18","What happened to the EFF DES Cracker?","(Apologies if this is the wrong sub).

The [EFF DES Cracker](https://en.wikipedia.org/wiki/EFF_DES_cracker) was used to demonstrate that DES was not secure. I can't find any information about what happened to the machine or its whereabouts. Would be nice to find it ended up in a museum somewhere.","crypto",58,58,0,0.99,0,0,0,7
"644","https://www.reddit.com/r/crypto/comments/qkh0dj/lets_encrypt_and_dns_over_tls_hell_on_android/","ikaruswill","2021-11-01","Let's Encrypt and DNS over TLS Hell on Android","","crypto",57,57,0,0.97,0,0,3,130
"645","https://www.reddit.com/r/crypto/comments/qj95u5/how_not_to_design_a_hash_function_an_amateur/","m1el","2021-10-30","How (Not) to Design a Hash Function | an amateur analysis","","crypto",58,58,0,0.96,0,0,1,105
"646","https://www.reddit.com/r/crypto/comments/p2u00t/youre_doing_iot_rng_numerous_iot_devices_have/","Natanael_L","2021-08-12","You're Doing IoT RNG | numerous IoT devices have weak randomness due to improper use of HWRNG:s","","crypto",59,59,0,0.98,0,0,1,62
"647","https://www.reddit.com/r/crypto/comments/o089yo/fully_homomorphic_encryption_by_google/","ScottContini","2021-06-15","Fully Homomorphic Encryption by Google","","crypto",54,54,0,0.93,2,0,0,55
"648","https://www.reddit.com/r/crypto/comments/nos8vv/advice_on_selflearning_crypto/","ducph21","2021-05-31","Advice on self-learning crypto","Dear all,

I'm now an sophomore and I major in Maths and Informatics. I recently find out that  I like crypto! Sadly, my study program doesn't have much subjest related to crypto :(.  
Can anyone here recommend me a learning path to Crypto? For example what I should learn first, what books should I read :D.   
Thank you all!","crypto",55,55,0,0.92,0,0,0,64
"649","https://www.reddit.com/r/crypto/comments/sdw4cq/the_controversy_surrounding_hybrid_cryptography/","Soatok","2022-01-27","The Controversy Surrounding Hybrid Cryptography","","crypto",53,53,0,0.89,0,0,1,9
"650","https://www.reddit.com/r/crypto/comments/ntad4l/how_i_learned_symmetrickey_cryptanalysis/","knotdjb","2021-06-06","How I Learned Symmetric-Key Cryptanalysis","","crypto",54,54,0,0.98,0,0,2,3
"651","https://www.reddit.com/r/crypto/comments/t158hi/broken_rainbow/","archie_bloom","2022-02-25","Broken Rainbow","At 8:42AM, the 25 February 2022, IACR_News published on their twitter a new paper:
https://twitter.com/IACR_News/status/1497114669802213377
"" Breaking Rainbow Takes a Weekend on a Laptop "" is the title and it explain how to attack Rainbow, one of the three NIST Post-quantum signature finalists.
Official website of Rainbow: https://www.pqcrainbow.org/

The recommandation is to switch from Rainbow to the Oil and Vinegar scheme.

You can find here the sage implementation of the attack: https://github.com/WardBeullens/BreakingRainbow","crypto",54,54,0,0.95,0,0,1,6
"652","https://www.reddit.com/r/crypto/comments/ovmso8/you_really_shouldnt_roll_your_own_crypto_an/","ScottContini","2021-08-01","You Really Shouldn't Roll Your Own Crypto: An Empirical Study of Vulnerabilities in Cryptographic Libraries","","crypto",52,52,0,0.93,1,0,1,45
"653","https://www.reddit.com/r/crypto/comments/mm6i2u/how_to_backdoor_a_cipher/","espadrine","2021-04-07","How to Backdoor a Cipher","","crypto",51,51,0,0.97,0,0,0,18
"654","https://www.reddit.com/r/crypto/comments/m00iid/why_do_zooms_password_hashes_collide_and_should/","alt1627","2021-03-07","Why do Zoom's password hashes collide and should you be worried about it?","Personally, I agree with [david3](https://devforum.zoom.us/t/how-to-generate-join-url-given-id-and-password/13808/22) and I was bored so I took a look at some of ""?pwd="" Zoom invite links myself. FYI, double base64 encoded, resulting in 16 byte (probably MD2/4/5, or a variation).

Now, the interesting thing is, the pwd isn't 'just' the passcode. Different meetings with the same passcode usually(?) have different pwd's. However, what happens quite often is:

    https://us05web.zoom.us/j/776533****?pwd=ZXVKRWZLRHE2TExvS3VxZnZ2WE03Zz09
    Meeting ID: 776 533 ****
    Passcode: 3
    
    https://us05web.zoom.us/j/974233****?pwd=ZXVKRWZLRHE2TExvS3VxZnZ2WE03Zz09
    Meeting ID: 974 233 ****
    Passcode: 9

And, [thanks to the internet](https://www.google.com/search?q=%22ak1XbmprdFBUQnRZOWszWU91VHdyUT09%22+%22passcode%22), it seems to be not the only example... Now, if my understanding is correct hash function collision (like MD5) should be fairly improbable, right? like 1:2^(64) or something like that? So, even if every meeting has some random Salt it should spit out completely arbitrary pwd values, shouldn't it? Any idea what might be going on here?? (And why?)","crypto",54,54,0,0.97,0,0,1,22
"655","https://www.reddit.com/r/crypto/comments/n3wyvg/postquantum_cryptography_current_state_and/","LovelyDay","2021-05-03","Post-Quantum Cryptography: Current state and quantum mitigation (ENISA report","","crypto",53,53,0,1,1,0,0,10
"656","https://www.reddit.com/r/crypto/comments/ssl8l0/isogenybased_cryptography_a_motivation_video/","espadrine","2022-02-14","Isogeny-based cryptography: a motivation [video]","","crypto",46,46,0,0.93,0,0,0,0
"657","https://www.reddit.com/r/crypto/comments/so4hu9/are_you_too_paranoid_to_have_online_backups/","cryptomann1","2022-02-09","Are you too paranoid to have online backups?","I want to have an online backup of my KeepassXC file, just in case all of my physical backups are lost somehow, but im too paranoid. The idea would be to encrypt the file with Veracrypt using 3 cascaded hash algos with a 64 character password i've memorized which I would be surprised it could be cracked if someone found the file and decided to bruteforce it, but still, im too paranoid that someone finds the file, saves it and then they have all the time in the world to attempt a bruteforce or wait for some sort of algo exploit or advancements in hardware to bruteforce faster. But at the same time I wonder if this is less of a risk compared to the possibility of a flood/fire that wipes all possible physical backups. Your government could also become increasingly tyrannical about encryption and seize it if found it. Thoughts?","crypto",47,47,0,0.84,0,0,1,25
"658","https://www.reddit.com/r/crypto/comments/qvxmjv/understanding_hkdf_hkdf_has_poorlyunderstood/","Soatok","2021-11-17","Understanding HKDF: HKDF has poorly-understood subtleties. Lets explore them in detail.","","crypto",45,45,0,0.87,0,0,1,79
"659","https://www.reddit.com/r/crypto/comments/p4s433/this_blog_shows_how_pdf_encryption_is_implemented/","ScottContini","2021-08-15","This blog shows how PDF encryption is implemented&. Looks pretty scary to me!","","crypto",51,51,0,0.92,0,0,0,63
"660","https://www.reddit.com/r/crypto/comments/mi15em/age_formerly_pronounced_as_japanese_B_R_ageh_v_to/","Corklander","2021-04-01","age (formerly pronounced as Japanese B R ""a-geh"" [v. to rise up]) will now be pronounced age (length of survival [age like milk])","Having no association with the [age project](https://github.com/FiloSottile/age), no formal training in cryptography, mathematics, Japanese, or English and being very tired of having to correct people's pronunciation of bad transliterations, I hereby declare that the age encryption middleware project now be pronounced as ""age"" (IPA: Èj). And furthermore, all extensions and adaptations of said project be changed as well. I am [outraged against the mispronunciation machine](https://github.com/str4d/rage)!

p.s. All hail NSA!","crypto",49,49,0,0.87,1,0,0,24
"661","https://www.reddit.com/r/crypto/comments/oc81wc/how_to_learn_cryptography/","YOT18","2021-07-02","How to learn cryptography?","Hi guys, so a few weeks ago I discovered cryptography and got really interested. I'll be glad if any of y'all can tell me how to start learning cryptography from zero. any self-experience with learning and general things I should know would be appreciated. Currently im not looking to make a living out of it, but let's see how it'll go. thanks in advance.","crypto",44,44,0,0.86,0,0,1,54
"662","https://www.reddit.com/r/crypto/comments/nnvknm/the_israelibased_quantum_cryptography_company/","Aerothermal","2021-05-29","The Israeli-based Quantum Cryptography company QuantLR announced they will be experimenting with a demonstration of quantum encryption capabilities from optical communications between Earth and the International Space Station | QuantLR [X-Post /r/lasercom]","","crypto",48,48,0,0.79,0,0,0,41
"663","https://www.reddit.com/r/crypto/comments/mlk26i/jcryptool_104_released/","tassadarius38","2021-04-06","JCrypTool 1.0.4 released","Hey r/crypto

I would like to drop a little ad and point out the release of our cryptography learning software JCrypTool, which recently reached stable version 1.0.4. Besides many historic and basic plug-ins and algorithms, it includes implementations and visualizations of homomorphic encryption concepts or quantum-computer secure signatures such as XMSS\^MT or SPHINCS+. For each plug-in there is a more detailed help page where we provide more in-depth explanations.

https://imgur.com/a/7rY57ec

Its available in English and German. Check out our website [https://www.cryptool.org/en/jct/](https://www.cryptool.org/en/jct/)

Or Visit us on GitHub https://github.com/jcryptool/

I know its not the most modern software, but we are only a small team trying our best to provide our users with a program to learn about and play around with cryptography. Many of the contributions come from student projects. Feel free to contribute or leave feedback, thanks!","crypto",48,48,0,0.94,1,0,0,20
"664","https://www.reddit.com/r/crypto/comments/sg8g1o/maths_build_a_foundation_first_or_learn_as_you_go/","biskasport","2022-01-30","Maths: build a foundation first or learn as you go?","I have a bachelor's degree in CS and want to start exploring Crypto. The general consensus seems to start with the Dan Boneh coursera coursera. Great, I will do that. After that should I learn the maths used in crypto like groups, fields, lattices, number theory and so on, or should I just keep learning new crypto subjects and learn the maths as I go?

I have read the wiki, do the recommended books have sub sections that cover these kinds of maths or will I need to read it in other books? If they are not included, do you have some books recommendations? Something like maths for cryptography that encopasses all the basics which are not included in a typical CS program?

Hopefully the question was clear! Thanks in advance and sorry for the beginner question, hopefully the answers will be useful for others.","crypto",45,45,0,0.92,0,0,1,7
"665","https://www.reddit.com/r/crypto/comments/s4zl30/github_publiusfederalistzmsg_send_encrypted/","publiush","2022-01-16","GitHub - publiusfederalist/zmsg: Send encrypted messages and decrypt them without sharing keys through a third party.","","crypto",45,45,0,0.81,0,0,0,4
"666","https://www.reddit.com/r/crypto/comments/p7vzdv/memfd_secret_secret_memory_that_the_kernel_cant/","Karyo_Ten","2021-08-20","memfd_secret() Secret memory that the kernel can't access - usecase is cryptographic keys","","crypto",46,46,0,0.98,1,0,1,41
"667","https://www.reddit.com/r/crypto/comments/oa6nhg/what_are_the_practical_advantages_of_a_12_byte/","loup-vaillant","2021-06-29","What are the practical advantages of a 12 byte nonce over an 8 byte nonce for authenticated encryption?","This all started with [RFC 8439](https://datatracker.ietf.org/doc/html/rfc8439) (previously RFC 7539), that describes an AEAD construction using Chacha20 and Poly1305. My problem with this RFC is, they modified Daniel Bernstein's original design a little bit: the 64-bit nonce and 64-bit counter have been replaced by a 96-bit nonce and 32-bit counter.

This modification bothers me. At a first glance, it has nothing but drawbacks: 96 bits nonces may be bigger, but they're still not big enough to be selected at random. On the other hand, reducing the counter to 32-bits puts practically attainable limits to message lengths (256 GiB).

The RFC itself tells us they did it to be ""more consistent"" with [RFC 5116](https://datatracker.ietf.org/doc/html/rfc5116#section-3.2), which recommends (but does not mandate) 96-bit nonces. It also gives some insight about how nonces might be designed. Here's what they recommend:

* Implementations should support 96-bit nonces.
* Nonces should be divided in a _fixed_ part, and a _counter_ part.
* The fixed part identifies the device who performs encryption, and must remain unchanged.
* The counter part should be monotonically increasing (like a counter).
* The counter part should be 32-bit wide.

We can see how this enables group discussion among several devices that trust each other: mutable state stays local to each device, and we guaranteed nonce will not be reused.

There's also advice about how to handle partially implicit nonces (that aren't entirely transmitted over the network, but partially inferred from context):

* The fixed part is divided into a _fixed common_ sub-part and a _fixed distinct_ sub-part.
* The common sub-part is identical for all devices, and may be implicit (not sent over the network).
* The distinct sub-part must be different for all devices, and must be explicit.
* The counter must be explicit.

They did all this to follow what was reputed to be best practice at the time (2008, so DJB's Salsa and Chacha were brand new). We could see then why we'd want 96-bit nonces. Thing is, I'm not sure I agree with RFC 5116:

* Limiting the counter part of the nonce to 32-bits puts a practical limit on the number of message we can send. 4 billion is an easy to exceed number.
* Reserving 64-bit for the fixed part seems way overkill. 8 bits (up to 256 devices) potentially covers most use cases. Even if it doesn't, 16 bits ought to be enough (beyond 65K participant, the secret key is not so secret any more).

It seems to me that 64-bits for the nonce are more than enough: even if the fixed part takes up to 16 bits, that leaves 48 bytes for the counter, enough for 280 trillion messages. Though in most cases, the fixed part can be only one bit (two participants over a duplex channel). And that's if we refuse to give each sender their own key. This might be understandable for AES, which often needs to maintain a sizeable look up table for each key for speed _(!!beware cache timing attacks!!)_, but for algorithms like Chacha20 that requires no such initialisation, that's much less of a concern.

So:

- **What are, today, the practical advantages of a 96-bit nonce over a 64-bit nonce?**
- **In which context 64-bit nonces are too short, yet 96-bit nonces are long enough?**
- **Do you think those advantages, if any, are worth reducing the counter down to 32 bits?**

_Note: I know that in practice, messages should no be so gigantic that they exceed 256 GiB. DJB himself recommends that protocols limit message length to a few KiB, to facilitate tests. Still, that's not necessarily an excuse to limit message length at the primitive level: protocol designers might make the mistake of allowing long messages, and we don't want such mistakes to result in catastrophic breaches of secrecy._","crypto",45,45,0,0.93,0,0,2,39
"668","https://www.reddit.com/r/crypto/comments/o2nns9/lets_encrypts_recommended_reading_list/","Natanael_L","2021-06-18","Let's Encrypt's recommended reading list","","crypto",50,50,0,0.95,0,0,1,5
"669","https://www.reddit.com/r/crypto/comments/nvv6i4/alpaca_attack/","atoponce","2021-06-09","ALPACA Attack","","crypto",50,50,0,0.92,1,0,1,14
"670","https://www.reddit.com/r/crypto/comments/m5kyna/chacha20_encryption_performance_on_dec_pdp11/","nic0nicon1","2021-03-15","ChaCha20 Encryption Performance on DEC PDP-11","","crypto",45,45,0,0.94,0,0,0,16
"671","https://www.reddit.com/r/crypto/comments/r5ysa0/an_illustrated_guide_to_elliptic_curve/","Natanael_L","2021-11-30","An Illustrated Guide to Elliptic Curve Cryptography Validation  NCC Group Research","","crypto",46,46,0,0.95,0,0,1,3
"672","https://www.reddit.com/r/crypto/comments/nc7n8h/did_asymmetric_cryptography_exist_before_the/","llllllILLLL","2021-05-14","Did asymmetric cryptography exist before the digital age and the prime number technique?","I only hear about asymmetric cryptography after the appearance of computers.","crypto",46,46,0,0.96,0,0,0,53
"673","https://www.reddit.com/r/crypto/comments/m3ecuq/understanding_extendednonce_constructions_by/","Soatok","2021-03-12","Understanding Extended-Nonce Constructions (by studying XChaCha)","","crypto",44,44,0,0.89,2,0,0,19
"674","https://www.reddit.com/r/crypto/comments/rfu5a4/kryptology_coinbases_advanced_cryptography_library/","binaryfor","2021-12-14","Kryptology - Coinbase's advanced cryptography library","","crypto",44,44,0,0.84,0,0,1,5
"675","https://www.reddit.com/r/crypto/comments/qc6hgg/rocca_an_efficient_aesbased_encryption_scheme_for/","wolf550e","2021-10-20","Rocca: An Efficient AES-based Encryption Scheme for Beyond 5G","","crypto",45,45,0,0.98,1,0,1,87
"676","https://www.reddit.com/r/crypto/comments/pn56s2/some_thoughts_on_2021_owasp_top_10s_cryptographic/","ScottContini","2021-09-13","Some thoughts on 2021 OWASP Top 10's Cryptographic Failures Section","What this post is about: OWASP has [drafted their 2021 list](https://owasp.org/Top10/), and the number 2 ranking entry is [Cryptographic Failures](https://owasp.org/Top10/A02_2021-Cryptographic_Failures/).  They are asking for feedback.  Here, I don't want to get into their methodology or the ranking of the issue or why they are grouping things together, instead I have a serious issue with what is written here.

Specifically, look at what is written in the description, particularly the bullet points.  My concern is that they are missing so many common cryptographic issues that I see nearly every day in my job.  And I mean it: nearly every day I run into somebody simply implementing crypto incorrectly: they hard code an IV, or they treat passwords like keys without running them through a password base key derivation function, or they use unauthenticated encryption when they really only need a MAC, and so on.  These problems, which I have posted in [my blog](https://littlemaninmyhead.wordpress.com/2017/04/22/top-10-developer-crypto-mistakes/) years ago, are still very frequent and never seeming to go away, and yet OWASP has not mentioned a single one of them in their description.

So, I thought I should give them a hand.  I opened up [an issue](https://github.com/OWASP/Top10/issues/540) on their GitHub page about what is lacking.  And I'm seriously thinking about contributing to OWASP to help improve this, figuring that that is the best way to try to make progress on improving these common problems.

Why am I posting right here, right now?  Because I want your thoughts on what I have written and what is lacking or needs improvement: https://github.com/OWASP/Top10/issues/540 .  I'm not looking for comments like ""use libsodium for everything"", instead I want to focus on the common problems independent of what library they are using.  I appreciate in advance any thoughts you have that can help point OWASP in the right direction.

**EDIT**: I have submitted a pull request to address my concerns [here](https://github.com/OWASP/Top10/pull/563/files).  **If you have any concerns about this, speak up now.**","crypto",46,46,0,0.98,0,0,1,47
"677","https://www.reddit.com/r/crypto/comments/pk5bw6/rfc_9106_argon2_memoryhard_function_for_password/","rgneainrnevo","2021-09-08","RFC 9106: Argon2 Memory-Hard Function for Password Hashing and Proof-of-Work Applications","","crypto",42,42,0,0.97,0,0,1,40
"678","https://www.reddit.com/r/crypto/comments/ordldd/is_the_enigma_machine_still_considered_safe/","Lowkey_force","2021-07-25","Is the Enigma Machine still considered safe?","By today's standards is the encryption from the WWII Enigma Machine still safe enough for personal/recreational use?","crypto",42,42,0,0.85,1,0,1,74
"679","https://www.reddit.com/r/crypto/comments/o410a0/after_a_phd_in_cryptography_is_it_difficult_to/","[deleted]","2021-06-20","After a phd in cryptography, is it difficult to land a cryptographer job, especially one requiring a Ph.D.?","I've heard a lot of people don't get a job doing research after a Ph.D. in computer science.  How true is it that its difficult to get a job as a cryptographer after a Ph.D.?","crypto",42,42,0,0.94,0,0,1,25
"680","https://www.reddit.com/r/crypto/comments/nser01/migration_to_post_quantum_cryptography_nist_draft/","chaplin2","2021-06-04","Migration to post quantum cryptography, NIST Draft, June 2021","","crypto",44,44,0,0.96,0,0,1,11
"681","https://www.reddit.com/r/crypto/comments/niyx2f/constanttime_big_numbers_an_introduction/","knotdjb","2021-05-23","Constant-Time Big Numbers: An Introduction","","crypto",43,43,0,0.96,0,0,0,23
"682","https://www.reddit.com/r/crypto/comments/sox9jy/i_retypeset_a_nicer_web_version_of_phillip/","fz0718","2022-02-10","I re-typeset a nicer web version of Phillip Rogaway's essay, ""The Moral Character of Cryptographic Work""","","crypto",43,43,0,0.98,0,0,1,7
"683","https://www.reddit.com/r/crypto/comments/sfm7m6/20220129_plagiarism_as_a_patent_amplifier/","rgneainrnevo","2022-01-29","2022.01.29: Plagiarism as a patent amplifier: Understanding the delayed rollout of post-quantum cryptography.","","crypto",45,45,0,0.9,0,0,1,4
"684","https://www.reddit.com/r/crypto/comments/qr9kcr/public_report_whatsapp_endtoend_encrypted_backups/","knotdjb","2021-11-11","Public Report  WhatsApp End-to-End Encrypted Backups Security Assessment","","crypto",43,43,0,1,0,0,1,70
"685","https://www.reddit.com/r/crypto/comments/mpnd56/introducing_certomancer_the_python_x509_testing/","pyhanko-dev","2021-04-12","Introducing Certomancer: the Python X.509 testing framework.","Do you write software that has to deal with X.509 public-key infrastructure in some way? Does your test data consist of a bunch of loose certificates painstakingly generated &amp; maintained by hand using OpenSSL?

If so, [Certomancer](https://github.com/MatthiasValvekens/certomancer) might be the tool for you. Certomancer is a PKI testing framework implemented in Python. Here are some of its features:


 * Stateless API
 * Declarative, YAML-based configuration.
 * Minimal input validation, so you can generate deliberately broken certificates if you need to.
 * ``requests-mock`` integration.
 * Ultra-lightweight WSGI application that serves CRLs, OCSP responses, timestamps and more.
 * Plugin framework for additional PKI services &amp; certificate extensions that aren't available in the ""core"" Certomancer feature set.


Certomancer started out as a weekend-long hacking session because I wanted to put the test suite for [pyHanko](https://github.com/MatthiasValvekens/pyHanko) on more solid foundations. I more or less knew where I wanted to go: I started by crafting a configuration file describing a somewhat involved testing configuration, and then implemented features incrementally until the tool was capable of handling the sample config I initially put together. This is the result.

Besides using it in tests for pyHanko, I also run Certomancer on my Raspberry Pi at home to test other software against it.

The GitHub repository includes some [example config](https://github.com/MatthiasValvekens/certomancer/blob/master/example.yml) and some [documentation](https://github.com/MatthiasValvekens/certomancer#documentation).

There's also a fairly extensive demo over on asciinema.org: https://asciinema.org/a/406798


I've already gotten quite a bit of mileage out of Certomancer; I hope it's also useful to some of you!","crypto",43,43,0,0.98,0,0,0,21
"686","https://www.reddit.com/r/crypto/comments/t0oa23/cracking_diffiehellman_key_exchange_using_cadonfs/","yurichev","2022-02-24","Cracking DiffieHellman key exchange using CADO-NFS + Logjam SSL/TLS attack","","crypto",44,44,0,0.99,0,0,1,4
"687","https://www.reddit.com/r/crypto/comments/stspyl/is_digital_signature_a_form_of_zero_knowledge/","HarambeTownley","2022-02-16","Is digital signature a form of zero knowledge proof?","A digital signature along with a public key can prove that the signer owns the private key. Does this mean digital signatures are a type of zero knowledge proof?","crypto",41,41,0,0.99,0,0,0,5
"688","https://www.reddit.com/r/crypto/comments/prs8qf/bandersnatch_a_fast_elliptic_curve_built_over_the/","minbunny","2021-09-20","Bandersnatch: a fast elliptic curve built over the BLS12-381 scalar field","","crypto",40,40,0,0.93,0,0,1,44
"689","https://www.reddit.com/r/crypto/comments/rtsyse/encrypting_a_file_full_of_totp_keys_method_vs/","flyguybravo","2022-01-01","Encrypting a file full of TOTP keys - method vs madness","I've got a relatively large file (in quantity not file size) of TOTP keys that I need to encrypt. For the sake of this argument, assume I was going to store this encrypted file in a public GitHub repo (I'm not, but this theoretically represents the level of security I would hope to achieve - perhaps naively).

I have never really had to consider this before - but I thought surely a little google-fu would uncover enough helpful information to ensure I made an informed decision. I was woefully unprepared for the depth of this rabbit hole.

Given what I have (*a large list of TOTP keys*) - and where I want to store it (*publicly accessible*, but again, only for the sake of this 'thought experiment') - I've looked at a number of possible directions I could take this. Each one seems to have plenty of ardent supporters and fervent detractors.

Also assume for this discussion that I'll be using strong non-dictionary multi-word passphrases.

via symmetric key:

* `openssl with aes-256-cbc` \- easily available, I can encrypt/decrypt from each of my machines with the always readily available openssl. Biggest 'cons' appear to be waning confidence in the tool and the opinion that 'better' tools exist. Still need to determine which params would maximize security.
* `aes-256-gcm` \- Not sure I entirely understand the benefit here. From what I can tell, I can accomplish the same thing with cbc + hmac  --  gcm just wraps everything into one. Biggest 'con' is that I can't do this with readily available tools and instead have to involve some other library / libraries.
* `gpg with cipher-algo AES256` \- also easily available though not as ubiquitously so as openssl. Seems like people have a higher opinion of this tool because of its age and reputation. As noted with openssl above, I still need to determine which available params maximize security and understand their use if I went this route.

via asymmetric key:

* `gpg` \- I suppose with the asymmetric encryption route I could branch out and explore email encryption/signing also. The biggest advantage I see to this is that I wouldn't need to worry about a forgotten password (so long as I've got secure and reliable backups to my decryption key). But setting that convenience aside, from past threads in this subreddit, it appears that AES-256 is still more secure.
* `age` \- The latest rabbit hole I've looked at. This looks very interesting - the tool is simple and offers what appears to be some nice flexibility. But the 'cons' appear to be that it's new, and with that comes the fact that it is significantly more difficult to dig up non-expert level documentation. The general consensus seems to be that the tool is well designed using modern best practices. I've checked out the [github](https://github.com/FiloSottile/age) and their [format specification](https://age-encryption.org/v1), but haven't really found anything that compares the security it offers to anything like aes or rsa.

So in the end... is this overkill for a list of TOTP keys for some obscure, random person on the internet?  Quite possibly.  But I also don't like half-assery.  If anyone has any links or references that cover or compare/contrast any of these approaches in a way that's easy to digest and understand, please post them.  I'm open to any feedback or suggestion from those more knowledgable than I ... which I'm assuming is probably all of you.","crypto",39,39,0,0.93,0,0,1,19
"690","https://www.reddit.com/r/crypto/comments/rd5qk6/announcing_ncc_groups_cryptopals_guided_tour/","atoponce","2021-12-10","Announcing NCC Groups Cryptopals Guided Tour!","","crypto",40,40,0,0.9,1,0,0,5
"691","https://www.reddit.com/r/crypto/comments/p3nfmk/i_built_a_password_manager_was_told_i_would_get_a/","M2com","2021-08-13","I built a Password Manager - Was told I would get a classy tear down here!","Hey r/Crypto!

I've recently built a Password Manager in Python for the terminal. It's my first public [repo on GitHub](https://github.com/MarkMcKinney/DIY-Password-Manager) and I built it to improve my understanding of data security and encryption. I was told that I would get even further feedback here - so feel free to break it!

When I posted originally in r/Python, I was asked:

1. Why are you using PBKDF2 instead of a memory intensive one like scrypt or Argon2?

When researching this project, it looked like several password managers use PBKDF2 (like 1Password), so I decided to follow suit. From my understanding, 1Password also combines the master password with a [secret key](https://support.1password.com/secret-key-security). I believe that is the salt in my project, but correct me if I'm wrong! Someone did [mention incorporating a certificate](https://www.reddit.com/r/Python/comments/p22p35/i_made_a_password_manager_for_the_terminal_let_me/h8i5nf1?utm_source=share&amp;utm_medium=web2x&amp;context=3) file on top of the master password for authentication. This would prevent key logger efforts. I don't know a lot about scrypt or Argon2, so I'd love to hear more from you guys about the advantages of switching to those methods.

2. Threat model, Python is meh if we can trace what the VM executes.

I never considered that. Could you guys also expand on this as well?

Check out the DIY Password Manager on GitHub: [https://github.com/MarkMcKinney/DIY-Password-Manager](https://github.com/MarkMcKinney/DIY-Password-Manager)

https://preview.redd.it/585jmciha5h71.png?width=2208&amp;format=png&amp;auto=webp&amp;s=79d8685e6c5423cea9936725ae756db381876196","crypto",40,40,0,0.88,1,0,1,63
"692","https://www.reddit.com/r/crypto/comments/ozbw8i/saml_is_insecure_by_design/","lpsmith","2021-08-06","SAML is insecure by design","","crypto",44,44,0,0.85,0,0,1,48
"693","https://www.reddit.com/r/crypto/comments/m4ntwe/why_polynomial_modular_arithmetic_in_finite_fields/","RisenSteam","2021-03-14","Why polynomial modular arithmetic in Finite Fields?","Hi - This is my first blog post - [Why Polynomial Modular Arithmetic in Finite Fields?](https://risencrypto.github.io/FiniteFields/)   

This is my first attempt at writing about something in Crytography.   

I am pretty new to Abstract Algebra &amp; Elementary Number Theory &amp; when I was trying to learn by reading some books in the last few months, this was one question I couldn't find answered formally in any book - The Math books talk about Finite Fields but don't link it to why it's used in Cryptography. The Cryptography books also don't talk much about it.    

Since I am pretty new to Abstract Algebra, I am pretty sure there are lot of mistakes in the post - so please feel free to point it out - that's the main reason I am posting it here.","crypto",41,41,0,1,1,0,0,9
"694","https://www.reddit.com/r/crypto/comments/plobsm/security_of_endtoend_encrypted_backups_whatsapp/","espadrine","2021-09-10","Security of End-To-End Encrypted Backups: Whatsapp Whitepaper [pdf]","","crypto",40,40,0,0.91,0,0,1,37
"695","https://www.reddit.com/r/crypto/comments/osp5xd/aumassons_list_of_controversial_cryptography/","rgneainrnevo","2021-07-27","Aumasson's list of controversial cryptography papers","","crypto",39,39,0,0.89,0,0,1,61
"696","https://www.reddit.com/r/crypto/comments/oldan4/security_analysis_of_telegram_symmetric_part/","Natanael_L","2021-07-16","Security Analysis of Telegram (Symmetric Part)","","crypto",40,40,0,0.96,0,0,1,22
"697","https://www.reddit.com/r/crypto/comments/nlus5j/sha1_shattered_and_shambles_both_use_the_same/","doctorstyles","2021-05-26","SHA-1 SHAttered and Shambles both use the same math rounds 5-20 to create collisions. Is there a way to calculate the initial block and how many following XOR rounds are required to create a collision?","Both have an input block followed by multiple XOR from the rounds 5-20:
0C000002 C0000010 B400001C 3C000004 BC00001A 20000010 2400001C EC000014 0C000002 C0000010 B400001C 2C000004 BC000018 B0000010 0000000C B8000010

See Appendix A: https://www.cs.technion.ac.il/users/wwwb/cgi-bin/tr-get.cgi/2011/PHD/PHD-2011-08.pdf

SHAttered uses 192 bytes followed by the XOR two times and Shambles uses 64 bytes followed by XOR nine times. 

SHAmbles XOR: 
00070000 00000000 00380000 1B171843 1D1A4311 0D522768 2E4B1141 430B001F 09075E19 1D0B4749 3154441C 4C0D4907 1B0E1E00 64E1769B 09ADE441 1BC65A38

Followed by nine times:
0C000002 C0000010 B400001C 3C000004 BC00001A 20000010 2400001C EC000014 0C000002 C0000010 B400001C 2C000004 BC000018 B0000010 0000000C B8000010 

SHAattered XOR is zero for the first 192 bytes then followed by two times:
0C000002 C0000010 B400001C 3C000004 BC00001A 20000010 2400001C EC000014 0C000002 C0000010 B400001C 2C000004 BC000018 B0000010 0000000C B8000010","crypto",41,41,0,0.94,0,0,0,22
"698","https://www.reddit.com/r/crypto/comments/ndr2wx/sekura_an_encryption_tool_heavily_inspired_by/","Cookie04_DE","2021-05-16","Sekura - An Encryption tool heavily inspired by Rubberhose fs.","I wrote an Encryption tool that allows for multiple, independent file systems on a single disk/file whose existence can only be verified if you posses the correct password. It is heavily inspired by the [Rubberhose file system](https://en.wikipedia.org/wiki/Rubberhose_(file_system)).

Github: [https://github.com/Cookie04DE/Sekura](https://github.com/Cookie04DE/Sekura)

It works by dividing the disk or file into blocks of equal size and randomly choosing blocks when asked to allocate them for a partition. Each block has a header where the IV, a magic number and the next block number is stored. Everything besides the IV is encrypted. Since the IV is already random and everything encrypted looks random, an attacker can't tell how many file systems are in the file or how much space is actually used.  
The magic number is used to ensure correct decryption and AES-CTR is used so random access is possible.","crypto",39,39,0,0.95,0,0,0,17
"699","https://www.reddit.com/r/crypto/comments/rj57m7/monthly_cryptography_wishlist_thread/","AutoModerator","2021-12-18","Monthly cryptography wishlist thread","This is another installment in a series of monthly recurring cryptography wishlist threads.

The purpose is to let people freely discuss what future developments they like to see in fields related to cryptography, including things like algorithms, cryptanalysis, software and hardware implementations, usable UX, protocols and more.

So start posting what you'd like to see below!","crypto",37,37,0,0.92,1,0,2,5
"700","https://www.reddit.com/r/crypto/comments/pju6l6/age_a_simple_modern_and_secure_encryption_tool/","binaryfor","2021-09-07","age - A simple, modern and secure encryption tool (and Go library) with small explicit keys, no config options, and UNIX-style composability.","","crypto",41,41,0,0.93,0,0,0,52
"701","https://www.reddit.com/r/crypto/comments/phe2si/the_riscv_scalar_cryptography_extension_has/","bnmrshll","2021-09-03","The RISC-V Scalar Cryptography Extension has reached public review","","crypto",37,37,0,0.93,2,0,1,40
"702","https://www.reddit.com/r/crypto/comments/p4537r/a_writeup_on_the_quadratic_sieve_algorithm/","HenryDaHorse","2021-08-14","A writeup on the Quadratic Sieve algorithm","I am not from a Math background, so it took me a lot of time to understand the simplest version of the Quadratic Sieve algorithm. Each line in any text had at least 2 things I didn't understand and had to go searching for more info. So at the end, I decided to document the algorithm in detail with explanations.

Here is a link - https://risencrypto.github.io/QuadraticSieve/ 

There is also a link to a Google Spreadsheet inside which contains an example Sieving. 

I am sure there are mistakes - so please feel free to point it out - that's one of the main reasons I am posting it here. Same again if something is not clearly explained.","crypto",37,37,0,0.96,0,0,1,40
"703","https://www.reddit.com/r/crypto/comments/offxv9/i_know_the_mantra_is_dont_roll_your_own_crypto/","man-vs-spider","2021-07-07","I know the mantra is dont roll your own crypto. What are the common pitfalls that people fall into when making their own cryptography programs? For example, why shouldnt I use the Chacha program that I just wrote?","And given that programs are often patched and updated over time, would there be a summary of mistakes that people have made when first making implementations of cryptography algorithms?

Edit: I guess my question can be interpreted in two different ways:

1) how can making your own algorithm go wrong ?

2) How can implementing an established algorithm go wrong?

I intended the second question but both questions are interesting","crypto",41,41,0,0.92,0,0,1,49
"704","https://www.reddit.com/r/crypto/comments/sksxbk/luks2_with_hardware_token_best_practice_fido2/","GuessWhat_InTheButt","2022-02-05","LUKS2 with hardware token: Best practice? (FIDO2, PKCS#11, challenge-response)","So I want to set up a couple of Linux machines with multiple USB hardware tokens. From what I found there are three possibilities to implement this with dm-crypt/LUKS2.

1. FIDO2 (`sudo systemd-cryptenroll --fido2-device=auto &lt;device&gt;`)  
2. PKCS#11 (`sudo systemd-cryptenroll --pkcs11-token-uri=auto &lt;device&gt;`)  
3. YubiKey challenge-response (`ykpersonalize`, `yubikey-luks-enroll`)

The third method seems to be somewhat proprietary to YubiKeys and while I am in possession of one (YubiKey 5 NFC), I'd rather have a vendor independent solution.

Are there any benefits or risks associated with one of those three over the others?  
Do they differ in cryptographic strength (different ciphers, keys)?
Is there a different more popular solution? Maybe even a best practice?

Ideally I could use the same hardware tokens to set up an encrypted Windows machine in the future. VeraCrypt seems to only support PKCS#11, I haven't found any definitive info on BitLocker yet.  
I assume I could use the same hardware token with FIDO2 on Linux and PKCS#11 on Windows. Is that correct?","crypto",37,37,0,0.94,1,0,2,8
"705","https://www.reddit.com/r/crypto/comments/rf4czk/whos_hiring_december_2021_edition/","BoltLabsInc","2021-12-13","Who's hiring? December 2021 edition","Please state the location and include REMOTE, INTERNS and/or VISA when that sort of candidate is welcome. When remote work is *not* an option, include ONSITE.

Please only post if you personally are part of the hiring companyno recruiting firms or job boards. Only one post per company. If it isn't a household name, please explain what your company does.

Commenters: please don't reply to job posts to complain about something. It's off-topic here.

Readers: please only email if you are personally interested in the job.","crypto",39,39,0,0.88,0,0,1,2
